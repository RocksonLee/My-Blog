[{"title": "\u5173\u4e8e\u535a\u5ba2\u6587\u7ae0\uff08\u5fc5\u770b\uff09", "content": "\n\u8fd9\u4e2a\u535a\u5ba2\u662f\u6211\u4e2a\u4eba\u7684\u535a\u5ba2\n\n\u5b58\u7740\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\uff08\u53ef\u4ee5\u770b\u5230\u6211\u53d1\u75af\u7684\u8bb0\u5f55\uff09\n\n\u4f60\u53ef\u5728\u8fd9\u91cc\u627e\u5230\u6211\u7684\u4e00\u4e9b\u601d\u8003\uff0c\u4e00\u4e9b\u505a\u9898\u60f3\u6cd5\n\n\u4e5f\u53ef\u80fd\u4f1a\u770b\u5230\u6211\u8f6c\u8f7d\u7684\u4e00\u4e9b\u4f18\u79c0\u7684\u601d\u8003\n\n\u4e0d\u8fc7\u8fd9\u4e9b\u4e0d\u662f\u6211\u5199\u7684\u6587\u5b57\uff0c\u4fb5\u5220\uff0c\u8bb0\u5f97\u8054\u7cfb\u6211qwq\n\n\u5e0c\u671b\u80fd\u627e\u5230\u4f60\u559c\u6b22/\u60f3\u8981\u7684\u4e1c\u897f\n\nqwq\n", "link": "/posts/[-zhi-ding-]-guan-yu-bo-ke-wen-zhang-\uff08-bi-kan-\uff09/", "tags": [], "categories": []}, {"title": "USACO training \u5b66\u4e60\u8ba1\u5212", "content": "\n- <a href=\"#0\">\u524d\u8a00</a>  \n- <a href=\"#1\">USACO Section 1</a>  \n  - <a href=\"#2\">1.2.2</a>  \n    - <a href=\"#3\">Problem</a>  \n    - <a href=\"#4\">Solution</a>  \n    - <a href=\"#5\">Code</a>  \n  - <a href=\"#6\">1.2.5</a>  \n    - <a href=\"#7\">Problem</a>  \n    - <a href=\"#8\">Solution</a>  \n    - <a href=\"#9\">Code</a>  \n  - <a href=\"#10\">1.2.6</a>  \n    - <a href=\"#11\">Problem</a>  \n    - <a href=\"#12\">Solution</a>  \n    - <a href=\"#13\">Code</a>  \n  - <a href=\"#14\">1.2.7</a>  \n    - <a href=\"#15\">Problem</a>  \n    - <a href=\"#16\">Solution</a>  \n    - <a href=\"#17\">Code</a>  \n  - <a href=\"#18\">1.3.2</a>  \n    - <a href=\"#19\">Problem</a>  \n    - <a href=\"#20\">Solution</a>  \n    - <a href=\"#21\">Code</a>  \n  - <a href=\"#22\">1.3.3</a>  \n    - <a href=\"#23\">Problem</a>  \n    - <a href=\"#24\">solution</a>  \n    - <a href=\"#25\">Code</a>  \n  - <a href=\"#26\">1.3.4</a>  \n    - <a href=\"#27\">Problem</a>  \n    - <a href=\"#28\">solution</a>  \n    - <a href=\"#29\">Code</a>  \n  - <a href=\"#30\">1.3.5</a>  \n    - <a href=\"#31\">Problem</a>  \n    - <a href=\"#32\">solution</a>  \n    - <a href=\"#33\">Code</a>  \n  - <a href=\"#34\">1.3.6</a>  \n    - <a href=\"#35\">Problem</a>  \n    - <a href=\"#36\">Solution</a>  \n    - <a href=\"#37\">Code</a>  \n  - <a href=\"#38\">1.4.2</a>  \n    - <a href=\"#39\">Problem</a>  \n    - <a href=\"#40\">Solution</a>  \n    - <a href=\"#41\">Code</a>  \n  - <a href=\"#42\">1.4.3</a>  \n    - <a href=\"#43\">Problem</a>  \n    - <a href=\"#44\">Solution</a>  \n    - <a href=\"#45\">Code</a>  \n  - <a href=\"#46\">1.4.5</a>  \n    - <a href=\"#47\">Problem</a>  \n    - <a href=\"#48\">Solution</a>  \n    - <a href=\"#49\">Code</a>  \n  - <a href=\"#50\">1.4.6</a>  \n    - <a href=\"#51\">Problem</a>  \n    - <a href=\"#52\">Solution</a>  \n    - <a href=\"#53\">Code</a>  \n  - <a href=\"#54\">1.4.7</a>  \n    - <a href=\"#55\">Problem</a>  \n    - <a href=\"#56\">Solution</a>  \n    - <a href=\"#57\">Code</a>  \n  - <a href=\"#58\">1.4.8</a>  \n    - <a href=\"#59\">Problem</a>  \n    - <a href=\"#60\">Solution</a>  \n    - <a href=\"#61\">Code</a>  \n  - <a href=\"#62\">1.5.2</a>  \n    - <a href=\"#63\">Problem</a>  \n    - <a href=\"#64\">Solution</a>  \n    - <a href=\"#65\">Code</a>  \n  - <a href=\"#66\">1.5.3</a>  \n    - <a href=\"#67\">Problem</a>  \n    - <a href=\"#68\">Solution</a>  \n    - <a href=\"#69\">Code</a>  \n  - <a href=\"#70\">1.6.2</a>  \n    - <a href=\"#71\">Problem</a>  \n    - <a href=\"#72\">Solution</a>  \n    - <a href=\"#73\">Code</a>  \n  - <a href=\"#74\">1.6.3</a>  \n    - <a href=\"#75\">Problem</a>  \n    - <a href=\"#76\">Solution</a>  \n    - <a href=\"#77\">Code</a>  \n    - <a href=\"#78\">Code2</a>  \n  - <a href=\"#79\">1.6.4</a>  \n    - <a href=\"#80\">Problem</a>  \n    - <a href=\"#81\">Solution</a>  \n    - <a href=\"#82\">Code1</a>  \n    - <a href=\"#83\">Code2</a>  \n- <a href=\"#84\">USACO Section 2</a>  \n  - <a href=\"#85\">2.1.3</a>  \n    - <a href=\"#86\">Problem</a>  \n    - <a href=\"#87\">Solution</a>  \n    - <a href=\"#88\">Code</a>  \n  - <a href=\"#89\">2.1.4</a>  \n    - <a href=\"#90\">Problem</a>  \n\n# <a name=\"0\">\u524d\u8a00</a>\n\nUSACO training \u5176\u5b9e\u662f\u5f88\u4e45\u4e4b\u524d\u5c31\u60f3\u5f7b\u5e95\u5237\u4e00\u904d\u7684\u9898\u5355\uff0c\u4f46\u662f\u56e0\u4e3a\u5176\u4ed6\u7684\u539f\u56e0\uff0c\u4e00\u76f4\u6ca1\u6709\u5b8c\u6574\u7684\u5237\u8fc7\u4e00\u904d\uff0c\u8fd9\u4e24\u4e2a\u661f\u671f\u4e5f\u6709\u7a7a\uff0c\u5c1d\u8bd5\u5237\u5237\u5427\uff01\n\n# <a name=\"1\">USACO Section 1</a>\n\n## <a name=\"2\">1.2.2</a>\n\n### <a name=\"3\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1200)\n\n### <a name=\"4\">Solution</a>\n\n\u8fd9\u4e00\u9053\u9898\u7684\u601d\u8def\u5c31\u662f\u628a A \u7c7b\u4f3c\u8fd9\u7c7b\u7684\u5b57\u6bcd\u8f6c\u5316\u6210 1 \u8fd9\u7c7b\u7684\u6570\u5b57\u3002\n\n\u7136\u540e\u66b4\u529b\u52a0\u51cf\u5373\u53ef\u3002\n\n### <a name=\"5\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: ride\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\n#define N 100\nchar a[N], b[N];\nint ans1 = 1, ans2 = 1, len;\n\nint main()\n{\n    usaco(\"ride\");\n    scanf(\"%s%s\", a, b);\n    len = strlen(a);\n    for (int i = 0; i < len; i++) ans1 *= a[i] - 'A' + 1;\n    len = strlen(b);\n    for (int i = 0; i < len; i++) ans2 *= b[i] - 'A' + 1;\n    if (ans1 % 47 == ans2 % 47)\n        cout << \"GO\\n\";\n    else\n        cout << \"STAY\\n\";\n    return 0;\n}\n```\n\n## <a name=\"6\">1.2.5</a>\n\n### <a name=\"7\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1201)\n\n### <a name=\"8\">Solution</a>\n\n\u8fd9\u9053\u9898\u6211\u5728\u505a\u5339\u914d\u7684\u65f6\u5019\u76f4\u63a5\u4f7f\u7528string\uff0cstring\u7684\u5305\u88c5\u53ca\u4f7f\u7528\u90fd\u975e\u5e38\u7684\u91cd\u8981\uff0c\u5f88\u6709\u7528\u554a\u3002\n\n\u5339\u914d\u4eba\uff0c\u7136\u540e\u5229\u7528C++\u7684\u6574\u6570\u8fd0\u7b97\u4f1a\u53bb\u6389\u5c0f\u6570\u90e8\u5206\u7684\u7279\u6027\u76f4\u63a5\u8ba1\u7b97\u5373\u53ef\u3002\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u7279\u5224m=0\u7684\u60c5\u51b5\u3002\n\n### <a name=\"9\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: gift1\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nmap<string, int> mp;\nint n, w, m;\nstring name[100], temp;\nint main()\n{\n    usaco(\"gift1\");\n    cin >> n;\n    for (int i = 0; i < n; i++) cin >> name[i];\n    for (int i = 0; i < n; i++)\n    {\n        cin >> temp >> w >> m; // w=money,m=people\n        if (m) mp[temp] -= w / m * m;\n        for (int j = 0; j < m; j++)\n        {\n            cin >> temp;\n            mp[temp] += w / m;\n        }\n    }\n    for (int i = 0; i < n; i++) printf(\"%s %d\\n\", name[i].c_str(), mp[name[i]]);\n    return 0;\n}\n```\n\n## <a name=\"10\">1.2.6</a>\n\n### <a name=\"11\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1202)\n\n### <a name=\"12\">Solution</a>\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u633a\u7b80\u5355\u7684\uff0c\u76f4\u63a5\u52a0\u4e0a\u5f53\u524d\u6708\u4efd\u7684\u5929\u6570\u5c31\u53ef\u4ee5\u5230\u7b2c\u4e8c\u6708\u768413\u65e5\u3002\n\n1900.1.13\u662f\u5468\u516d\uff01\n\n\u7136\u540e\u7528\u4e00\u53e5\u5f88\u590d\u6742\uff08\u5176\u5b9e\u4e5f\u4e0d\u4f1a\uff09\u7684\u4e09\u76ee\u8fd0\u7b97\u7b26\u5c31\u53ef\u4ee5\u89e3\u51b3\u5f53\u524d\u6708\u4efd\u7684\u5929\u6570\u8ba1\u7b97\u3002\n\n`(m == 2 ? (((y % 4 == 0 && y % 100 != 0) || y % 400 == 0) ? 29 : 28) : ((m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) ? 31 : 30))`\n\n\u5148\u628a\u6700\u590d\u6742\u76842\u6708\u8ba1\u7b97\u7ed9\u5206\u5272\u5f00\u3002\n\n\u7136\u540e2\u6708\u5206\u95f0\u4e0d\u95f0\u3002\n\n\u5176\u4ed6\u6708\u4efd\u5206\u5927\u4e0d\u5927\u3002\n\n### <a name=\"13\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: friday\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint x, w, ans[10];\nint main()\n{\n    usaco(\"friday\");\n    scanf(\"%d\", &x);\n    w = 5;\n    for (int y = 1900; y < 1900 + x; y++)\n    {\n        for (int m = 1; m <= 12; m++)\n        {\n            ans[w]++;\n            w += (m == 2 ? (((y % 4 == 0 && y % 100 != 0) || y % 400 == 0) ? 29 : 28) : ((m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) ? 31 : 30));\n            w %= 7;\n        }\n    }\n    for (int i = 5; i <= 10; i++) printf(\"%d \", ans[i % 7]);\n    printf(\"%d\\n\", ans[11 % 7]);\n    return 0;\n}\n```\n\n## <a name=\"14\">1.2.7</a>\n\n### <a name=\"15\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1203)\n\n### <a name=\"16\">Solution</a>\n\n\u5bf9\u4e8e\u8fd9\u4e00\u9053\u9898\uff0c\u6211\u4eec\u5e94\u8be5\u5c1d\u8bd5\u7834\u73af\u6210\u94fe\u3002\n\n\u7136\u540e\u5bf9\u8fd9\u4e2a\u73af\u8dd1\u4e00\u8fb9\uff0c\u56e0\u4e3a\u6709\u767d\u8272\u662f\u90a3\u79cd\u7279\u6b8a\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u4eec\u7279\u6b8a\u5bf9\u5f85\u3002\n\n\u767d\u8272\u53ef\u63a5\u524d\u53ef\u63a5\u540e\u3002\n\n$a$ \u8bb0\u5f55\u6700\u63a5\u8fd1\u7684\u767d\u8272\u5de6\u8fb9\u4f4d\u7f6e\u3002\n\n$b$ \u8bb0\u5f55\u4e32\u53f3\u8fb9\u4f4d\u7f6e\u3002\n\n$c$ \u8bb0\u5f55\u5f53\u524d\u989c\u8272\u3002\n\n\u6700\u540e\u8bb0\u5f97 `min(ans,n)` \u5f53\u4f60\u7834\u73af\u6210\u94fe\uff0c\u7136\u540e\u6574\u6761\u94fe\u90fd\u662f\u4e00\u79cd\u5b57\u7b26\uff08\u4e0d\u8981\u62a0\u5b57\u773c\uff09\u65f6\uff0c\u90a3\u4e48\u4f1a\u5927\u4e8en\uff0c\u55ef\u3002\n\n### <a name=\"17\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: beads\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\n#define N 1000\nint n, a, b, ans, w;\nchar s[N], c;\n\nint main()\n{\n    usaco(\"beads\");\n    scanf(\"%d %s\", &n, s);\n    memcpy(s + n, s, n);\n    for (int i = 0; i < n<<1; i++)\n    {\n        if (s[i] == 'w')\n            b++, w++;\n        else if (s[i] == c)\n            b++, w = 0;\n        else\n            ans = max(ans, a + b), a = b - w, b = w + 1, w = 0, c = s[i];\n    }\n    ans=max(ans,a+b);\n    printf(\"%d\\n\", min(ans,n));\n    return 0;\n}\n```\n\n## <a name=\"18\">1.3.2</a>\n\n### <a name=\"19\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1204)\n\n### <a name=\"20\">Solution</a>\n\n\u8bb0\u5f55\u8fde\u7eed\u533a\u95f4\u6700\u957f\u7684\u5de6\u503c\u548c\u53f3\u503c\uff0c\u533a\u95f4\u82e5\u65ad\u88c2\uff0c\u5219\u8bb0\u5f55\u6700\u957f\u65ad\u88c2\u533a\u95f4\u3002\n\n### <a name=\"21\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: milk2\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nstruct qwq\n{\n    int l;\n    int r;\n} a[6000];\nint n, ansl, ansr;\nint maxn, minn;\nint cmp(qwq a, qwq b)\n{\n    if (a.l == b.l)\n        return a.r < b.r;\n    else\n        return a.l < b.l;\n}\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"milk2\");\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) scanf(\"%d %d\", &a[i].l, &a[i].r);\n    sort(a, a + n, cmp);\n    ansl = a[0].l, ansr = a[0].r;\n    for (int i = 0; i < n; i++)\n    {\n        if (ansr < a[i].l) minn = max(minn, a[i].l - ansr), ansl = a[i].l, ansr = a[i].r;\n        ansl = min(ansl, a[i].l), ansr = max(ansr, a[i].r);\n        maxn = max(maxn, ansr - ansl);\n    }\n    printf(\"%d %d\\n\", maxn, minn);\n    return 0;\n}\n```\n\n## <a name=\"22\">1.3.3</a>\n\n### <a name=\"23\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1205)\n\n### <a name=\"24\">solution</a>\n\n\u7eaf\u66b4\u529b\u4e86\uff0c\u6ca1\u5565\u597d\u8bf4\uff0c\u5bc4\u3002\n\n### <a name=\"25\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: transform\nLANG: C++\n*/\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a,b) memset(a,b,sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint n;\nchar a[15][15], b[15][15], c[15][15], d[15][15];\nbool work1()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= n; j++)\n            b[j][n - i + 1] = a[i][j];\n    }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            if (b[i][j] != c[i][j])\n                return 0;\n    return 1;\n}\nbool work2()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= n; j++)\n            b[n - i + 1][n - j + 1] = a[i][j];\n    }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            if (b[i][j] != c[i][j])\n                return 0;\n    return 1;\n}\nbool work3()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= n; j++)\n            b[n - j + 1][i] = a[i][j];\n    }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            if (b[i][j] != c[i][j])\n                return 0;\n    return 1;\n}\nbool work4()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= n; j++)\n            b[i][n - j + 1] = a[i][j];\n    }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            if (b[i][j] != c[i][j])\n                return 0;\n    return 1;\n}\nbool work5()\n{\n    work4();\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            a[i][j] = b[i][j];\n    if (work1())\n        return 1;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            a[i][j] = b[i][j];\n    if (work2())\n        return 1;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            a[i][j] = b[i][j];\n    if (work3())\n        return 1;\n    return 0;\n}\nbool work6()\n{\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            if (b[i][j] != c[i][j])\n                return 0;\n    return 1;\n}\nvoid work()\n{\n    if (work1())\n    {\n        cout << \"1\\n\";\n        return;\n    }\n    if (work2())\n    {\n        cout << \"2\\n\";\n        return;\n    }\n    if (work3())\n    {\n        cout << \"3\\n\";\n        return;\n    }\n    if (work4())\n    {\n        cout << \"4\\n\";\n        return;\n    }\n    if (work5())\n    {\n        cout << \"5\\n\";\n        return;\n    }\n    if (work6())\n    {\n        cout << \"6\\n\";\n        return;\n    }\n    cout << \"7\\n\";\n}\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"transform\");\n    cin >> n;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n        {\n            cin >> a[i][j];\n            d[i][j] = a[i][j];\n        }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            cin >> c[i][j];\n    work();\n    return 0;\n}\n```\n\n## <a name=\"26\">1.3.4</a>\n\n### <a name=\"27\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P3864)\n\n### <a name=\"28\">solution</a>\n\n\u8fd9\u9053\u9898\u5c31\u662f\u7b80\u5355\u7684\u641c\u7d22\uff0c\u6216\u8005\u8bf4\u662f\u5faa\u73af\u4e5f\u53ef\u3002\n\n\u8f93\u5165\u4e00\u6b21\u5b57\u5178\u548c\u7f16\u53f7\u3002\n\n\u7136\u540e\u8bf4\u51fa\u53ef\u80fd\u7684\u540d\u5b57\uff0c\u5faa\u73af\u4e3a $3^n$ \u6b21\u3002\n\n### <a name=\"29\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: namenum\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nstring dict[5000];\nint cnt = 0;\nbool ans = false;\nstring kb[10] = {\"\", \"\", \"ABC\", \"DEF\", \"GHI\", \"JKL\", \"MNO\", \"PRS\", \"TUV\", \"WXY\"};\n\ninline void dfs(string namenum, string result)\n{\n    if (namenum.empty())\n    {\n        if (*lower_bound(dict, dict + 4617, result) == result)\n        {\n            cout << result << endl;\n            if (!ans) ans = true;\n        }\n    }\n    else\n        for (int i = 0; i < 3; i++) dfs(namenum.substr(1), result + kb[namenum[0] - '0'][i]);\n    return;\n}\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"namenum\");\n    string namenum;\n    cin >> namenum;\n    freopen(\"dict.txt\", \"r\", stdin);\n    for (int i = 0; i < 4617; i++) cin >> dict[i];\n    dfs(namenum, \"\");\n    if (!ans) cout << \"NONE\" << endl;\n    return 0;\n}\n```\n\n## <a name=\"30\">1.3.5</a>\n\n### <a name=\"31\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1207)\n\n### <a name=\"32\">solution</a>\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u76f4\u63a5\u5728\u7ed3\u6784\u4f53\u7f16\u5199\u51fd\u6570\uff0c\u4ee5\u53ca\u7f16\u5199\u4e00\u4e2a\u521d\u59cb\u5316\u51fd\u6570\u3002\n\n\u90a3\u4e48\u9488\u5bf9\u6bcf\u4e00\u6570\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u641e\u4e00\u4e2a\u7b54\u6848\u51fa\u6765\u3002\n\n### <a name=\"33\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: palsquare\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint b;\ninline char c(int x)\n{\n    if (x >= 0 && x <= 9) return x + '0';\n    return x - 10 + 'A';\n}\nstruct node\n{\n    int l, a[20];\n    node(int x)\n    {\n        for (l = 0; x; l++) a[l] = x % b, x /= b;\n    }\n    void out()\n    {\n        for (int i = l - 1; i >= 0; i--) printf(\"%c\", c(a[i]));\n    }\n    bool tf()\n    {\n        for (int i = 0; i < l; i++)\n            if (a[i] != a[l - i - 1]) return false;\n        return true;\n    }\n};\nint main()\n{\n    usaco(\"palsquare\");\n    scanf(\"%d\", &b);\n    for (int i = 1; i <= 300; i++)\n    {\n        node n(i * i);\n        if (n.tf())\n        {\n            node m(i);\n            m.out();\n            putchar(' ');\n            n.out();\n            putchar('\\n');\n        }\n    }\n    return 0;\n}\n```\n\n## <a name=\"34\">1.3.6</a>\n\n### <a name=\"35\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1207)\n\n### <a name=\"36\">Solution</a>\n\n\u4e0e\u4e0a\u4e00\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u4e0d\u5c3d\u76f8\u540c\u3002\n\n### <a name=\"37\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: dualpal\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nstruct Num\n{\n    int val[100], pp, n;\n    Num(int x, int p)\n    {\n        for (n = 0; x; n++) val[n] = x % p, x /= p;\n    }\n    bool check()\n    {\n        for (int i = 0; i < n; i++)\n            if (val[i] != val[n - i - 1]) return false;\n        return true;\n    }\n};\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"dualpal\");\n    int ans = 0;\n    int n, s;\n    scanf(\"%d%d\", &n, &s);\n    for (int i = s + 1; ans < n; i++)\n    {\n        int ok = 0;\n        for (int j = 2; j < 11; j++)\n        {\n            Num temp(i, j);\n            if (temp.check()) ok++;\n        }\n        if (ok>=2) printf(\"%d\\n\", i), ans++;\n    }\n    return 0;\n}\n```\n\n## <a name=\"38\">1.4.2</a>\n\n### <a name=\"39\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1208)\n\n### <a name=\"40\">Solution</a>\n\n\u6211\u4eec\u601d\u8003\u4e00\u4e0b\uff0c\u8d2a\u5fc3\uff0c\u5c31\u662f\u9700\u8981\u628a\u6700\u4fbf\u5b9c\u7684\u5148\u4e70\u4e86\u518d\u8bf4\u3002\n\n\u518d\u4e70\u8d35\u70b9\u7684\u3002\n\n\u6240\u4ee5\u6392\u5e8f\u4e00\u4e0b\uff0c\u518d\u53bb\u4e70\u3002\n\n### <a name=\"41\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: milk\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 200200\npair<int, int> q[N];\nint x, n, ans;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"milk\");\n    scanf(\"%d%d\", &x, &n);\n    for (int i = 0; i < n; i++) scanf(\"%d%d\", &q[i].first, &q[i].second);\n    sort(q, q + n);\n    for (int i = 0; i < n && x > 0; i++)\n    {\n        ans += (x < q[i].second ? x : q[i].second) * q[i].first;\n        x -= q[i].second;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n## <a name=\"42\">1.4.3</a>\n\n### <a name=\"43\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1209)\n\n### <a name=\"44\">Solution</a>\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u8fd8\u662f\u5c1d\u8bd5\u8d2a\u5fc3\u505a\u6cd5\uff0c\u5148\u6709\u4e00\u5757\u6728\u677f\u4ece\u5934\u94fa\u5230\u5c3e\uff0c\u7136\u540e\u518d\u65ad\u5f00 **\u6700\u957f** \u7684\u5730\u65b9\uff0c\u91cd\u590d\u65ad\u5f00 $m-1$ \u5904\uff0c\u5c31\u53ef\u4ee5\u53ea\u4f7f\u7528 $m$ \u5757\u6728\u677f\u4e86\u3002\n\n\u7279\u5224\u4f60\u7684\u725b\u7684\u6570\u91cf\u5982\u679c\u6bd4\u6728\u677f\u591a\uff0c\u90a3\u5c31\u662f\u4e0d\u662f\u76f4\u63a5\u653e\u5c31\u597d\u5462\u3002\n\n### <a name=\"45\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: barn1\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 500\nint m, s, c, a[N], w[N];\nint cmp(int a, int b)\n{\n    return a > b;\n}\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"barn1\");\n    scanf(\"%d%d%d\",&m,&s,&c);\n    if (m > c) { printf(\"%d\\n\", c); return 0; }\n    for (int i = 0; i < c; i++) scanf(\"%d\", &a[i]);\n    sort(a, a + c);\n    int ans = a[c - 1] - a[0] + 1;\n    for (int i = 1; i < c; i++) w[i] = a[i] - a[i - 1];\n    sort(w + 1, w + c, cmp);\n    for (int i = 1; i <= m - 1; i++) ans -= w[i] - 1;\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n## <a name=\"46\">1.4.5</a>\n\n### <a name=\"47\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1211)\n\n### <a name=\"48\">Solution</a>\n\n\u66b4\u529b\u62c6\u89e3\u6bcf\u4e00\u4f4d\uff0c\u6211\u4eec\u4ece100-999\u76f4\u63a5\u5faa\u73af\u5c31\u597d\u4e86\uff0c\u7528\u4e00\u4e2a\u51fd\u6570\u89e3\u51b3\u91cd\u590d\u95ee\u9898\uff08\u503c\u5f97\u5b66\u4e60\uff09\u3002\n\n### <a name=\"49\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: crypt1\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint a[20], n, ans;\nil int check(int x)\n{\n    for (int i = 0; i < n; i++)\n    {\n        if (a[i] == x) return true;\n    }\n    return false;\n}\n\nil bool find(int xx, int p)\n{\n    for (int k = 0, x = xx; x; k++, x /= 10)\n        if (k == p || !check(x % 10)) return false;\n    return true;\n}\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"crypt1\");\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n    for (int i = 100; i <= 999; i++)\n    {\n        for (int j = 10; j <= 99; j++)\n        {\n            int now1 = i * (j % 10), now2 = i * (j / 10), now3 = i * j;\n            if (find(i, 3) && find(j, 2) && find(now1, 3) && find(now2, 3) && find(now3, 4)) ans++;\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n## <a name=\"50\">1.4.6</a>\n\n### <a name=\"51\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P2693)\n\n### <a name=\"52\">Solution</a>\n\n\u679a\u4e3e\u9501\u5934\u7684\u6bcf\u4e00\u4f4d\u5373\u53ef\u3002\n\n### <a name=\"53\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: combo\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint n, a[10], b[10];\nbool flag[120][120][120];\nll ans;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"combo\");\n    scanf(\"%d\", &n);\n    scanf(\"%d%d%d\", &a[1], &a[2], &a[3]);\n    scanf(\"%d%d%d\", &b[1], &b[2], &b[3]);\n    for (int i = -2; i <= 2; i++)\n        for (int j = -2; j <= 2; j++)\n            for (int k = -2; k <= 2; k++)\n            {\n                if (!flag[(a[1] + i + n) % n][(a[2] + j + n) % n][(a[3] + k + n) % n]) ans++;\n                flag[(a[1] + i + n) % n][(a[2] + j + n) % n][(a[3] + k + n) % n] = true;\n            }\n    for (int i = -2; i <= 2; i++)\n        for (int j = -2; j <= 2; j++)\n            for (int k = -2; k <= 2; k++)\n            {\n                if (!flag[(b[1] + i + n) % n][(b[2] + j + n) % n][(b[3] + k + n) % n]) ans++;\n                flag[(b[1] + i + n) % n][(b[2] + j + n) % n][(b[3] + k + n) % n] = true;\n            }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```\n\n## <a name=\"54\">1.4.7</a>\n\n### <a name=\"55\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1212)\n\n### <a name=\"56\">Solution</a>\n\n\u8fd9\u9053\u9898\u7684\u89e3\u6cd5\u4e5f\u662f\u76f8\u5f53\u7b80\u5355\uff0c\u6bd4\u524d\u9762\u7684\u9898\u8981\u6c42\u7801\u529b\u9ad8\u4e00\u70b9\u3002\n\n\u9996\u5148\u4f60\u4ece\u4e00\u4e2a\u4f20\u9001\u95e8\u51fa\u6765\uff0c\u8fdb\u5165\u7b2c\u4e8c\u4e2a\u4f20\u9001\u95e8\uff0c\u4f60\u662f\u76f4\u63a5\u8fdb\u5165\u7b2c\u4e00\u4e2a\u4f20\u9001\u95e8\u51fa\u6765\u7684\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u3002\n\n\u5176\u6b21\u4f60\u8d70\u904d\u6240\u6709\u4f20\u9001\u95e8\u6700\u591a\u5c31\u662f\u6240\u6709\u4f20\u9001\u95e8\u7684\u4e2a\u6570\u3002\n\n\u7136\u540e\u4f60\u9884\u5904\u7406\u4e00\u4e2a\u95e8\u53f3\u9762\u7684\u90a3\u4e2a\u95e8\u7684\u4f4d\u7f6e\u3002\n\n\u66b4\u529b DFS\uff01\n\n### <a name=\"57\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: wormhole\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 20\nint n;\nstruct qwq\n{\n    int x;\n    int y;\n} mp[N];\nbool cmp(qwq a, qwq b)\n{\n    if (a.y == b.y)\n        return a.x < b.x;\n    else\n        return a.y < b.y;\n}\nint r[N], to[N];\nint ans;\n\nbool is_cycle()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        int pos = i;\n        for (int cnt = 1; cnt <= n && pos; cnt++)\n            pos = r[to[pos]];\n        if (pos) return true;\n    }\n    return false;\n}\n\nvoid dfs(int step, int pre)\n{\n    if (step >= n)\n    {\n        if (is_cycle()) ans++;\n    }\n    else\n        for (int i = pre + 1; i <= n; i++)\n            if (!to[i])\n                for (int j = i + 1; j <= n; j++)\n                    if (!to[j])\n                    {\n                        to[i] = j, to[j] = i;\n                        dfs(step + 2, i);\n                        to[i] = to[j] = 0;\n                    }\n}\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"wormhole\");\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) scanf(\"%d%d\", &mp[i].x, &mp[i].y);\n    sort(mp + 1, mp + n + 1, cmp);\n    for (int i = 1; i <= n; i++)\n        if (mp[i].y == mp[i + 1].y) r[i] = i + 1;\n    dfs(0, 0);\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n## <a name=\"58\">1.4.8</a>\n\n### <a name=\"59\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P3650)\n\n### <a name=\"60\">Solution</a>\n\n\u5c1d\u8bd5\u679a\u4e3e\u6700\u5c0f\u5230\u6700\u5927\u8fd9\u4e2a\u533a\u95f4\uff0c\u8fd9\u4e2a\u533a\u95f4\u7684\u6570\u6765\u5f53\u8fd9\u4e2a\u6240\u88ab\u5141\u8bb8\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u3002\n\n\u90a3\u4e48\u4f60\u5728\u6bcf\u4e00\u6b21\u679a\u4e3e\u4e2d\u8ba1\u7b97\u6bcf\u4e2a\u5c71\u5cf0\u7ed9\u4f60\u5e26\u6765\u7684\u8d21\u732e\u3002\n\n\u7edf\u8ba1\u6700\u5c0f\u8d21\u732e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### <a name=\"61\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: skidesign\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint n, now, ans = INF;\n\n#define N 1000\n\nint a[N];\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"skidesign\");\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n    sort(a + 1, a + n + 1);\n    for (int i = a[i]; i <= a[n]; i++)\n    {\n        for (int j = 1; j <= n; j++)\n        {\n            if (a[j] + 17 < i) now += (i-a[j] - 17) * (i-a[j] - 17);\n            if (a[j] > i) now += (a[j]-i) * (a[j]-i);\n        }\n        ans = min(ans, now);\n        now = 0;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n## <a name=\"62\">1.5.2</a>\n\n### <a name=\"63\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1214)\n\n### <a name=\"64\">Solution</a>\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u5e94\u8be5\u60f3\u6e05\u695a\u4ed6\u8981\u8ba9\u6211\u4eec\u5e72\u4ec0\u4e48\u3002\n\n\u627e\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u7b49\u5dee\u6570\u5217\uff0c\u8fd9\u4e2a\u7b49\u5dee\u6570\u5217\u7684\u6570\u6ee1\u8db3 ${ x | p^2 + q^2\\ \\ \\ p,q \\in N \\cap [0,m] }$\u3002\n\n\u800c\u4e14\u8f93\u51fa\u9700\u8981\u6309\u7167 $b$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$a$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u8fdb\u884c\u6392\u5e8f\u3002\n\n\u6240\u4ee5\u6211\u4eec\u518d\u627e\u8fd9\u4e2a\u7684\u65f6\u5019\u8981\u8bb0\u5f97\u6309\u7167 $b$ \u5728\u5916\u5faa\u73af\uff0c$a$ \u5728\u5185\u5faa\u73af\u3002\n\n\u7136\u540e\u66b4\u529b\u68c0\u67e5\u5408\u4e0d\u5408\u6cd5\uff0c\u90a3\u606d\u559c\u4f60\uff0c**\u8d85\u65f6** \u5566\uff01\n\n\u56e0\u4e3a USACO \u7684\u5185\u5b58\u9650\u5236\u4e3a 16MB\uff0c\u4f46\u4e0d\u8981\u88ab\u8fd9\u4e48\u5c0f\u7684\u5185\u5b58\u9650\u5236\u4f4f\u624b\u811a\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5185\u5b58\u8fd8\u53ef\u4ee5\u5f00\u5927\u7ea6 4000000 \u7684int\u6570\u7ec4\uff0c\u6211\u4eec\u5c06 $p^2 + q^2$ \u9884\u5904\u7406\uff0c\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u662f\u4e0d\u662f\u5f88\u723d\u3002\n\n$m \\leq 250$ \u6240\u4ee5\u53ea\u9700\u8981\u5f00 250000 \u5de6\u53f3\u7684\u6570\u7ec4\u5373\u53ef\u3002\n\nok\u60f3\u597d\u5c31\u5f00\u59cb\u641e\uff01\n\n### <a name=\"65\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: ariprog\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint n, top, flag, s[100000], check[250 * 250 * 2 + 100], tot;\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"ariprog\");\n    scanf(\"%d %d\", &n, &top);\n    for (int i = 0; i <= top; i++)\n        for (int j = 0; j <= top; j++)\n            s[++tot] = i * i + j * j;\n    for (int i = 0; i <= top; i++)\n        for (int j = 0; j <= top; j++)\n            check[i * i + j * j] = true;\n    sort(s + 1, s + tot + 1);\n    int m = unique(s + 1, s + tot + 1) - s;\n\n    for (int i = 1; i * (n - 1) <= top * top + top * top; i++)\n    {\n        for (int j = 1; j <= m && s[j] + i * (n - 1) <= top * top + top * top; j++)\n        {\n            int now = i + s[j], ans = 1;\n            while (check[now] && ans < n) now += i, ans++;\n            if (ans == n) printf(\"%d %d\\n\", s[j], i), flag = true;\n        }\n    }\n    if (flag == false) printf(\"NONE\\n\");\n    return 0;\n}\n```\n\n## <a name=\"66\">1.5.3</a>\n\n### <a name=\"67\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1215)\n\n### <a name=\"68\">Solution</a>\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4f7f\u7528\u5bbd\u5ea6\uff08\u5e7f\u5ea6\uff09\u4f18\u5148\u641c\u7d22 BFS \u8fdb\u884c\u89e3\u7b54\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6876\u7684\u7684\u72b6\u6001\uff0c\u4f7f\u7528 **\u7a7a\u95f4\u6362\u65f6\u95f4** \u7684\u65b9\u5f0f\u8fdb\u884c\u5224\u91cd\u3002\n\n\u88c5\u6ee1\u6ea2\u51fa\uff0c\u8fd8\u662f\u5b8c\u5168\u5012\u5e72\u51c0\uff0c\u8fd9\u6837\u89e3\u51b3\u3002\n\n$ change = min ( limit - now , another_bottle_now) $\n\n\u7136\u540e\u6700\u540e\u50a8\u5b58\u7b54\u6848\u3002\n\n> \u5f53 $a$ \u6876\u662f\u7a7a\u7684\u65f6\u5019\uff0c$c$ \u6876\u4e2d\u725b\u5976\u6240\u5269\u91cf\u7684\u6240\u6709\u53ef\u80fd\u6027\u3002\n\n### <a name=\"69\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: milk3\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nstruct qwq\n{\n    int a, b, c;\n    int step;\n};\n\nqueue<qwq> q;\n\nint n, checkx[30 * 30 * 30 + 100], limita, limitb, limitc, ans[30];\n\nint check(qwq x)\n{\n    if (checkx[x.a * n * n + x.b * n + x.c]) return true;\n    if (x.a == 0) ans[x.c] = true;\n    checkx[x.a * n * n + x.b * n + x.c] = true;\n    return false;\n}\n\nvoid bfs()\n{\n    while (!q.empty())\n    {\n        qwq temp, now = q.front();\n        int change;\n        if (now.a)\n        {\n            temp = now;\n            change = min(limitb - temp.b, temp.a);\n            temp.b += change, temp.a -= change;\n            if (!check(temp)) q.push(temp);\n            temp = now;\n            change = min(limitc - temp.c, temp.a);\n            temp.c += change, temp.a -= change;\n            if (!check(temp)) q.push(temp);\n        }\n        if (now.c)\n        {\n            temp = now;\n            change = min(limita - temp.a, temp.c);\n            temp.a += change, temp.c -= change;\n            if (!check(temp)) q.push(temp);\n            temp = now;\n            change = min(limitb - temp.b, temp.c);\n            temp.b += change, temp.c -= change;\n            if (!check(temp)) q.push(temp);\n        }\n        if (now.b)\n        {\n            temp = now;\n            change = min(limita - temp.a, temp.b);\n            temp.a += change, temp.b -= change;\n            if (!check(temp)) q.push(temp);\n            temp = now;\n            change = min(limitc - temp.c, temp.b);\n            temp.c += change, temp.b -= change;\n            if (!check(temp)) q.push(temp);\n        }\n        q.pop();\n    }\n}\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"milk3\");\n    scanf(\"%d%d%d\", &limita, &limitb, &limitc);\n    n = max(limita, max(limitb, limitc)) + 1;\n    q.push((qwq){0, 0, limitc, 0});\n    bfs();\n    bool flag = false;\n    for (int i = 0; i < 30; i++)\n    {\n        if (ans[i])\n        {\n            if (flag) printf(\" \");\n            printf(\"%d\", i);\n            flag = true;\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n```\n\n## <a name=\"70\">1.6.2</a>\n\n### <a name=\"71\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1216)\n\n### <a name=\"72\">Solution</a>\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u7684\u9012\u63a8\u65b9\u7a0b\u662f\u8fd9\u6837\u7684\u3002\n\n$f[i][j]=max{f[i-1][j],f[i-1][j-1]}+a[i][j]$\n\n\u4e8e\u662f\u5c31\u5199\u5b8c\u4e86\u3002\n\n### <a name=\"73\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: numtri\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 1010\n\nint a[N][N], temp, maxn = -INF, n;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"numtri\");\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= i; j++)\n        {\n            scanf(\"%d\", &temp);\n            a[i][j] = temp + max(a[i - 1][j], a[i - 1][j - 1]);\n            if (i == n)\n                maxn = max(maxn, a[i][j]);\n        }\n    }\n    printf(\"%d\\n\", maxn);\n    return 0;\n}\n```\n\n## <a name=\"74\">1.6.3</a>\n\n### <a name=\"75\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1217)\n\n### <a name=\"76\">Solution</a>\n\n\u8fd9\u9053\u9898\u6709\u4e24\u79cd\u65b9\u6cd5\n\n\u7b2c\u4e00\u4e2a\u679a\u4e3e\u5404\u4f4d\u4e0a\u7684\u6570\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u4e3a\u7d20\u6570\u3002\n\n\u7b2c\u4e8c\u79cd\u5219\u662f\u7d20\u6570\u7b5b\uff0c\u5224\u65ad\u7d20\u6570\u3002\n\n\u6211\u91c7\u7528\u7b2c\u4e8c\u79cd\u3002\n\n\u4f46\u662f USACO \u4ed6\u5361\u6211\uff01\uff01\u7a7a\u95f4\uff01\uff01\uff01\n\n\u90a3\u4e48\u6ca1\u529e\u6cd5\u4e86\uff0c\u6253\u8868\u5427\u3002\n\n### <a name=\"77\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: pprime\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint a[1000]={};\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"pprime\");\n    int s, e;\n    cin >> s >> e;\n    for (int j = 0;; j++)\n    {\n        if (j >= 1000) break;\n        if (a[j] >= s && a[j] <= e) cout << a[j] << endl;\n        if (a[j] > e) break;\n        if (a[j] < s) continue;\n    }\n    return 0;\n}\n```\n\n### <a name=\"78\">Code2</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: pprime\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 10000000\n\nint prime[N/10], ptot = 0;\nbool vis[N];\n\nvoid get_prime(int n)\n{\n    vis[0] = vis[1] = true;\n    for (int i = 2; i <= n; i++)\n    {\n        if (!vis[i]) prime[++ptot] = i;\n        for (int j = 1; j <= ptot && i * prime[j] <= n; j++)\n        {\n            vis[i * prime[j]] = true;\n            if (i % prime[j] == 0) break;\n        }\n    }\n}\n\nbool check(int x)\n{\n    int temp[10], tot = 0;\n    while (x)\n    {\n        temp[++tot] = x % 10;\n        x /= 10;\n    }\n    for (int i = 1; i <= tot; i++)\n        if (temp[i] != temp[tot - i + 1]) return false;\n    return true;\n}\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"pprime\");\n    int l, r;\n    scanf(\"%d %d\", &l, &r);\n    if (r > 10000000) r = 9999999;\n    get_prime(r);\n    for (int i = 1; i <= ptot; i++)\n    {\n        if (prime[i] < l) continue;\n        if (check(prime[i])) printf(\"%d\\n\", prime[i]);\n    }\n    return 0;\n}\n\n```\n\n## <a name=\"79\">1.6.4</a>\n\n### <a name=\"80\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1218)\n\n### <a name=\"81\">Solution</a>\n\n\u6211\u4eec\u53ea\u9700\u8981\u7528\u6b27\u62c9\u7b5b\u7b5b\u51fa\u8d28\u6570\uff0c\u7136\u540e\u5bf9\u8d28\u6570\u8fdb\u884c\u4e00\u4e2a\u62c6\u5206\uff0c\u518d\u68c0\u67e5\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\n\n\u4f46\u662f\uff0cUSACO \u6211\u7231\u4f60\uff0c\u53c8\u7206\u5185\u5b58\u4e86\uff0c\u90a3\u4e48\u770b\u5230\u8fd9\u4e2a\u8f93\u5165\u8fd9\u4e48\u7b80\u5355\u3002\n\n$n \\leq 8$\n\n\u6211\u76f4\u63a5\u5c31\u6253\u8868\u5427!\n\n### <a name=\"82\">Code1</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: sprime\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"sprime\");\n    int n;\n    scanf(\"%d\", &n);\n    if (n == 8) printf(\"23399339\\n29399999\\n37337999\\n59393339\\n73939133\\n\");\n    if (n == 7) printf(\"2339933\\n2399333\\n2939999\\n3733799\\n5939333\\n7393913\\n7393931\\n7393933\\n\");\n    if (n == 6) printf(\"233993\\n239933\\n293999\\n373379\\n373393\\n593933\\n593993\\n719333\\n739391\\n739393\\n739397\\n739399\\n\");\n    if (n == 5) printf(\"23333\\n23339\\n23399\\n23993\\n29399\\n31193\\n31379\\n37337\\n37339\\n37397\\n59393\\n59399\\n71933\\n73331\\n73939\\n\");\n    if (n == 4) printf(\"2333\\n2339\\n2393\\n2399\\n2939\\n3119\\n3137\\n3733\\n3739\\n3793\\n3797\\n5939\\n7193\\n7331\\n7333\\n7393\\n\");\n    if (n == 3) printf(\"233\\n239\\n293\\n311\\n313\\n317\\n373\\n379\\n593\\n599\\n719\\n733\\n739\\n797\\n\");\n    if (n == 2) printf(\"23\\n29\\n31\\n37\\n53\\n59\\n71\\n73\\n79\\n\");\n    if (n == 1) printf(\"2\\n3\\n5\\n7\\n\");\n    return 0;\n}\n```\n\n### <a name=\"83\">Code2</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: sprime\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 100000000\n\nint prime[N / 10], ptot = 0;\nbool vis[N];\n\nvoid get_prime(int n)\n{\n    vis[0] = vis[1] = true;\n    for (int i = 2; i <= n; i++)\n    {\n        if (!vis[i]) prime[++ptot] = i;\n        for (int j = 1; j <= ptot && i * prime[j] <= n; j++)\n        {\n            vis[i * prime[j]] = true;\n            if (i % prime[j] == 0) break;\n        }\n    }\n}\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"sprime\");\n    int n;\n    scanf(\"%d\", &n);\n    n = (int)pow(10, n);\n    get_prime(n);\n    for (int i = 1; i <= ptot; i++)\n    {\n        if (prime[i] < n / 10) continue;\n        if (prime[i] > n) break;\n        int x = prime[i];\n        while (x)\n        {\n            if (vis[x]) break;\n            x /= 10;\n        }\n        if (!x) printf(\"%d\\n\", prime[i]);\n    }\n    return 0;\n}\n```\n\n# <a name=\"84\">USACO Section 2</a>\n\n## <a name=\"85\">2.1.3</a>\n\n### <a name=\"86\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1457)\n\n### <a name=\"87\">Solution</a>\n\n\u9996\u5148\u8fdb\u884c\u5899\u7684\u4e8c\u8fdb\u5236\u62c6\u5206\n\n\u7136\u540e\u5bf9\u56fe\u8fdb\u884c\u4e00\u4e2a\u67d3\u8272\uff0c\u8f93\u51fa\u989c\u8272\u6570\u91cf\n\n\u63a5\u7740\u68c0\u67e5\u6bcf\u4e2a\u989c\u8272\u8bb0\u5f55\u5927\u5c0f\u5e76\u8f93\u51fa\n\n> \u9009\u62e9\u6700\u4f73\u7684\u5899\u6765\u63a8\u5012\u3002\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u897f\u7684\uff0c\u4ecd\u7136\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u5357\u7684\u3002\u540c\u4e00\u683c\u5b50\u5317\u8fb9\u7684\u5899\u6bd4\u4e1c\u8fb9\u7684\u5899\u66f4\u4f18\u5148\u3002\n> \u7528\u8be5\u5899\u7684\u5357\u90bb\u5355\u4f4d\u7684\u5317\u5899\u6216\u897f\u90bb\u5355\u4f4d\u7684\u4e1c\u5899\u6765\u8868\u793a\u8fd9\u9762\u5899\uff0c\u65b9\u6cd5\u662f\u8f93\u51fa\u90bb\u8fd1\u5355\u4f4d\u7684\u884c\u6570\u3001\u5217\u6570\u548c\u5899\u7684\u65b9\u4f4d\uff08 N\uff08\u5317\uff09\u6216\u8005 E\uff08\u4e1c\uff09\uff09\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u4ece\u5de6\u4e0b\u5411\u53f3\u4e0a\u641c\u7d22\uff0c\u7136\u540e\u8bb0\u5f55\u6700\u5927\u503c\n\n\u6700\u540e\u8f93\u51fa\u4e00\u4e0b\n\n### <a name=\"88\">Code</a>\n\n```cpp\n/*\nID: RocksonLee\nTASK: castle\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 60\n\nint n, m, ansx, ansy, ansn, answay, temp;\n\nbool wall[N][N][5];\n\nint color[N][N], ctot, size[N * N];\n\nqueue<pair<int, int>> q;\n\nvoid bfs(int x, int y)\n{\n    if (color[x][y]) return;\n    ctot++;\n    q.push(make_pair(x, y));\n    while (!q.empty())\n    {\n        int i = q.front().first, j = q.front().second;\n        q.pop();\n        if (color[i][j]) continue;\n        color[i][j] = ctot;\n        if (!color[i + 1][j] && !wall[i][j][3]) q.push(make_pair(i + 1, j));\n        if (!color[i][j + 1] && !wall[i][j][2]) q.push(make_pair(i, j + 1));\n        if (!color[i - 1][j] && !wall[i][j][1]) q.push(make_pair(i - 1, j));\n        if (!color[i][j - 1] && !wall[i][j][0]) q.push(make_pair(i, j - 1));\n    }\n}\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"castle\");\n    scanf(\"%d%d\", &m, &n);\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n        {\n            scanf(\"%d\", &temp);\n            for (int k = 0; k < 4; k++) wall[i][j][k] = temp & (1 << k);\n        }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            bfs(i, j);\n    printf(\"%d\\n\", ctot);\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            size[color[i][j]]++;\n    for (int i = 1; i <= ctot; i++)\n        ansn = max(ansn, size[i]);\n    printf(\"%d\\n\", ansn);\n    ansn = 0;\n    for (int j = 1; j <= m; j++)\n        for (int i = n; i >= 1; i--)\n        {\n            if (color[i][j] != color[i - 1][j] && ansn < size[color[i][j]] + size[color[i - 1][j]])\n            {\n                ansn = size[color[i][j]] + size[color[i - 1][j]];\n                answay = 1;\n                ansx = i;\n                ansy = j;\n            }\n            if (color[i][j] != color[i][j + 1] && ansn < size[color[i][j]] + size[color[i][j + 1]])\n            {\n                ansn = size[color[i][j]] + size[color[i][j + 1]];\n                answay = 2;\n                ansx = i;\n                ansy = j;\n            }\n        }\n    printf(\"%d\\n\", ansn);\n    printf(\"%d %d %c\\n\", ansx, ansy, (answay == 1 ? 'N' : 'E'));\n    return 0;\n}\n```\n\n## <a name=\"89\">2.1.4</a>\n\n### <a name=\"90\">Problem</a>\n\n[Luogu](https://www.luogu.com.cn/problem/P1458)\n", "link": "/posts/!USACO_out/", "tags": [], "categories": []}, {"title": "CF 815B Karen and Test", "content": "\n## Problem\n\n[codeforces](https://codeforces.com/contest/815/problem/B)\n\n[Luogu](https://www.luogu.com.cn/problem/CF815B)\n\n## Solution\n\n\u770b\u5230\u4e00\u4e32\u6570\u5b57\uff0c\u4e24\u4e24\u8fdb\u884c\u76f8\u52a0\u7684\u64cd\u4f5c\uff0c\u6216\u8005\u901a\u8fc7\u67d0\u79cd\u65b9\u5f0f\u7279\u6b8a\u64cd\u4f5c\u8f6c\u6362\u6210\u4e24\u4e24\u76f8\u52a0\uff0c\u90fd\u53ef\u4ee5\u60f3\u4e00\u4e0b\u4e8c\u9879\u5f0f\u5b9a\u7406\u3002\n\n~~\u5f53\u7136\uff0c\u8fd9\u9053\u9898\u4e5f\u5c31\u662f\u5411\u4e8c\u9879\u5f0f\u5b9a\u7406\u9760\u3002~~\n\n$n \\leq 200000$ \u901a\u8fc7\u8fd9\u4e2a\u6570\u636e\u544a\u8bc9\u6211\u4eec\uff0c\u6211\u4eec\u7684\u7b97\u6cd5\u81f3\u5dee\u5e94\u8be5\u4e3a $O(nlogn)$\n\n\u6211\u4eec\u5c31\u662f\u5728\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u5e94\u8be5\u4f1a\u65e0\u4ece\u4e0b\u624b\u3002\n\n\u51cf\u6cd5\u554a\uff0c\u90a3\u8981\u600e\u4e48\u529e\u5462\uff0c\u5982\u679c\u53ea\u662f\u52a0\u6cd5\u5c31\u597d\u4e86\u554a\uff0c\u4f60\u5c31\u53ef\u4ee5\u4e8c\u9879\u5f0f\u5b9a\u7406\u4e0a\u624b\u641e\u3002\n\n\u6211\u4eec\u5c1d\u8bd5\u586b\u5145\u7b2c\u4e00\u4e8c\u884c\u7684\u7b26\u53f7\u53ef\u4ee5\u53d1\u73b0\uff1a\n\n\u5982\u679c $n$ \u4e3a\u5947\u6570\uff0c\u90a3\u4e48\u7b2c\u4e8c\u884c\u7684\u7b2c\u4e00\u4e2a\u7b26\u53f7\u5c31\u548c\u7b2c\u4e00\u884c\u7684\u7b26\u53f7\u4e0d\u4e00\u6837\uff0c\u5c31\u662f\u4e3a\u51cf\u53f7\u3002\n\n\u5982\u679c $n$ \u4e3a\u5076\u6570\uff0c\u90a3\u4e48\u7b2c\u4e8c\u884c\u7684\u7b2c\u4e00\u4e2a\u7b26\u53f7\u5e94\u8be5\u4e3a\u52a0\u53f7\u3002\n\n\u4e3a\u4ec0\u4e48\u8981\u601d\u8003\u8fd9\u4e00\u4e9b\u5462\uff0c\u56e0\u4e3a\u6211\u4eec\u5728\u5bfb\u627e\u4e00\u4e2a\u5171\u6027\u3002\n\n\u7136\u540e\u4f60\u628a $n=4$ \u7684\u6570\u5217\u51fa\u6765\n\n![pica](https://cdn.jsdelivr.net/gh/RocksonLee/PicGo/202203242142295.png)\n\n\u8fd9\u65f6\u5019\u53ef\u4ee5\u53d1\u73b0\uff0c\u524d\u9762\u8fd9\u4e2a\u4e0d\u662f\u975e\u5e38\u559c\u6b22\uff0c\u4f46\u662f\u540e\u9762\u6709\u4e00\u4e2a\u5316\u6210\u52a0\u6cd5\u7684\u4e1c\u897f\u3002\n\n\u8fd9\u96be\u9053\u4e0d\u89e6\u52a8\u4f60\u7684DNA\u4e48\uff1f\n\n![picb](https://cdn.jsdelivr.net/gh/RocksonLee/PicGo/202203242143686.png)\n\n\u4e8e\u662f\u53ef\u4ee5\u518d\u5199\u4e00\u4e0b\uff0c\u4f60\u5c31\u53ef\u4ee5\u53d1\u73b0\u89c4\u5f8b\u4e86\n\n\u5728\u540e\u9762\u4e2d\uff0c\u7b2c\u5947\u6570\u4e2a $a[i]$\uff08\u6309\u7167\u4f60\u61c2\u7684\u67d0\u79cd\u65b9\u5f0f\uff09\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u6700\u540e\u4e00\u6b21\u8fd0\u7b97\u5de6\u8fb9\u7684\u90a3\u4e2a\u6570\uff0c\n\n\u800c\u5076\u6570\u4e2a $a[i]$\uff08\u6309\u7167\u4f60\u61c2\u7684\u67d0\u79cd\u65b9\u5f0f\uff09\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u6700\u540e\u4e00\u6b21\u8fd0\u7b97\u53f3\u8fb9\u7684\u90a3\u4e2a\u6570\u3002\n\n\u7136\u540e\u6211\u4eec\u5269\u4e0b\u4e09\u4e2a\u95ee\u9898\u601d\u8003\n\n1. \u8fd9\u662f\u4ec0\u4e48\u65b9\u5f0f\u5462\uff1f\n\n![picc](https://cdn.jsdelivr.net/gh/RocksonLee/PicGo/202203242148007.png)\n\n\u6211\u4eec\u628a\u521a\u624d\u7684\u56fe\u7ed9\u8bb2\u5b8c\n\n\u84dd\u8272\u548c\u84dd\u8272\u76f8\u52a0\u53ef\u4ee5\u53d8\u6210 $a_1+2a_3+a_5$\u3002\n\n$1 2 1$\n\n\u4f60\u662f\u5426\u60f3\u5230\u4ec0\u4e48\u5462\uff1f\u5bf9\uff0c\u5c31\u662f\u4e8c\u9879\u5f0f\u5b9a\u7406\uff0c\u4f60\u627e\u5230\u4e86\u4f60\u7684\u76f4\u89c9\u3002\n\n2. \u76f8\u52a0\u76f8\u52a0\uff0c\u90a3\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\u7b26\u662f\u4ec0\u4e48\u6211\u4eec\u5e76\u4e0d\u77e5\u9053\uff0c\u90a3\u6211\u4eec\u8981\u5982\u4f55\u53bb\u786e\u8ba4\u5462\uff1f\n\n\u8003\u8651\u7528\u4e86\u591a\u5c11\u64cd\u4f5c\u7b26\n\n\u6bcf\u4e00\u884c\u6bd4\u4e0a\u4e00\u884c\u591a\u4e0a $i$ \u4e2a\uff0c\u5982\u679c\u591a\u4e0a\u5947\u6570\u4e2a\uff0c\u90a3\u4e48\u5c31\u4f1a\u6539\u53d8\u6700\u4e0b\u9762\u7684\u64cd\u4f5c\u7b26\uff0c\u800c\u6211\u4eec\u52a0\u4e0a\u5076\u6570\u4e2a\u5374\u4e0d\u6539\u53d8\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\uff0c\u6700\u540e\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\u7b26\u5e94\u8be5\u662f\u6309\u56db\u5faa\u73af\uff0c$n%4$ \u53ef\u4ee5\u5f97\u5230\n\n```test\n++--++--\n01230123\n```\n\n3. \u90a3\u6211\u4eec\u8981\u5982\u4f55\u6c42\u51fa\u7b54\u6848\n\n\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\u4e86\uff0c\u6700\u540e\u4e24\u4e2a\u6570\u7684\u8ba1\u7b97\u65b9\u6cd5\n\n> \u5947\u6570\u4e2a $a[i]$\uff08\u6309\u7167\u4f60\u61c2\u7684\u67d0\u79cd\u65b9\u5f0f\uff09\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u6700\u540e\u4e00\u6b21\u8fd0\u7b97\u5de6\u8fb9\u7684\u90a3\u4e2a\u6570\uff0c\n> \u5076\u6570\u4e2a $a[i]$\uff08\u6309\u7167\u4f60\u61c2\u7684\u67d0\u79cd\u65b9\u5f0f\uff09\u52a0\u8d77\u6765\u5c31\u53ef\u4ee5\u4f5c\u4e3a\u6700\u540e\u4e00\u6b21\u8fd0\u7b97\u53f3\u8fb9\u7684\u90a3\u4e2a\u6570\u3002\n\n$n%4$ \u7684\u56db\u79cd\uff0c\u6211\u4eec\u5c1d\u8bd5\u5bf9\u8fd9\u4e9b\u60c5\u51b5\u8fdb\u884c\u5206\u8ba8\uff08\uff1f\n\n\u53ef\u4ee5\uff0c\u8fd9\u662f\u4e00\u79cd\u505a\u6cd5\n\n\u4f46\u662f\u6211\u4eec\u53ef\u4ee5\u66b4\u529b\u4e00\u70b9\uff08\u4f46\u65b9\u4fbf\u4e00\u4e9b\uff09\n\n\u9996\u5148\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\n\n```test\n++--++--\n01230123\n```\n\n\u6240\u4ee5\u6211\u4eec\u6700\u540e\u4e00\u4e2a\u64cd\u4f5c\u7b26\u662f\u4ec0\u4e48\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\u76f8\u52a0\u6216\u8005\u76f8\u51cf\u5c31\u597d\u4e86\u3002\n\n\u90a3 $n$ \u4e3a\u5947\u6570\u600e\u4e48\u529e\u5462\uff0c\u6211\u4eec\u66b4\u529b\u89e3\u51b3\u5c31\u597d\u4e86\uff0c\u65e5\u4f60\u5988\n\n\u90a3\uff0c\u6211\u4eec\u80fd\u4e0d\u80fd\u5206\u8ba8\u5462\uff1f\n\n\u53ef\u4ee5\u7684\uff01\n\n$$n%4==0$$\n\n![pic1](https://cdn.jsdelivr.net/gh/RocksonLee/PicGo/202203242213006.png)\n\n$$n%4==1$$\n\n![pic2](https://cdn.jsdelivr.net/gh/RocksonLee/PicGo/202203242214551.png)\n\n$$n%4==2$$\n\n![pic3](https://cdn.jsdelivr.net/gh/RocksonLee/PicGo/202203242214293.png)\n\n$$n%4==3$$\n\n![pic4](https://cdn.jsdelivr.net/gh/RocksonLee/PicGo/202203242214773.png)\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define MOD 1000000007\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nil ll qpow(ll a, ll b)\n{\n    ll res = 1, base = a;\n    while (b)\n    {\n        if (b & 1) res = res * base % MOD;\n        base = base * base % MOD;\n        b >>= 1;\n    }\n    return res;\n}\n\n#define N 200010\n\nll fac[N], n, a[N], ans;\n\nll C(int m, int n)\n{\n    return fac[n] % MOD * qpow(fac[m], MOD - 2) % MOD * qpow(fac[n - m], MOD - 2) % MOD;\n}\n\nint main()\n{\n    scanf(\"%lld\", &n);\n    for (int i = 1; i <= n; i++) scanf(\"%lld\", &a[i]);\n    fac[0] = 1;\n    for (int i = 1; i <= n / 2 + 10; i++) fac[i] = (fac[i - 1] * i) % MOD;\n    if (n == 1)\n    {\n        printf(\"%lld\", a[n]);\n        return 0;\n    }\n    if (n % 2 == 1)\n    {\n        n--;\n        for (int i = 1, op = 1; i <= n; i++, op *= -1) a[i] = a[i] + op * a[i + 1];\n    }\n    for (int i = 1, op = 1; i <= n; i++)\n    {\n        int qwq = ((i - 1) / 2);\n        ans += a[i] * op * C(qwq, (n - 2) / 2);\n        ans %= MOD;\n        op *= (n % 4 == 2 ? 1 : -1);\n    }\n    printf(\"%lld\", (ans + MOD) % MOD);\n\n    return 0;\n}\n```\n", "link": "/posts/CF-815B-Karen-and-Test/", "tags": [], "categories": []}, {"title": "Blog\u7ef4\u62a4\u7b14\u8bb0", "content": "\nmaterial\\index.html\n\n```\n<a href=\"{{i.link}}\" class=\"mdui-card-primary-title\">{%if i.top>0%}[\u7f6e\u9876]{%elif i.top<0%}[\u7f6e\u5e95]{%endif%}{{i.title}}</a>\n```\n\nTo:\n\n```\n<a href=\"{{i.link}}\" class=\"mdui-card-primary-title\">{{i.title}}</a>\n```\n\nchange 2022.3.22\n", "link": "/posts/Blog-wei-hu-bi-ji/", "tags": [], "categories": []}, {"title": "CF 1654C Alice and the Cake", "content": "\n## Problem\n\n[Luogu](https://www.luogu.com.cn/problem/CF1654C)\n\n[Codeforces](https://codeforces.com/contest/1654/problem/C)\n\n## Solution\n\n\u7ed9\u4f60\u4e00\u4e32\u6570\u5b57\uff0c\u8fd9\u4e32\u6570\u5b57\u662f\u7531\u4e00\u4e2a\u5f88\u5927\u7684\u6570\u5b57\u5206\u5272\u51fa\u6765\u7684\uff0c\u7136\u540e\u4f60\u9700\u8981\u68c0\u67e5\u662f\u5426\u5408\u6cd5\n\n\u5206\u5272\u65b9\u5f0f\u5c31\u662f\u5bf9\u534a\u5206\uff0c\u5982\u679c\u4e0d\u80fd\u5bf9\u534a\u5206\uff0c\u90a3\u4e48\u4e00\u4e2a\u5411\u4e0a\u53d6\u6574\uff0c\u4e00\u4e2a\u5411\u4e0b\u53d6\u6574\n\n\u4f60\u5c31\u4f1a\u60f3\u7740\u5982\u4f55\u628a\u6570\u5b57\u5408\u8d77\u6765\uff0c\u5982\u679c\u6ca1\u6cd5\u5408\u8d77\u6765\u5c31\u662f\u4e0d\u5408\u6cd5\n\n\u7136\u800c\u8fd9\u79cd\u505a\u6cd5\u6709\u4e2a\u95ee\u9898\n\n> 1 1 1 1 1 1\n\n\u7c7b\u4f3c\u8fd9\u4e2a\u4e32\uff0c\u5c31\u53ef\u4ee5 ban \u6389\u8fd9\u4e2a\u505a\u6cd5\u4e86\n\n\u6240\u4ee5\u6211\u4eec\u6362\u79cd\u601d\u8def\n\n\u4e00\u4e2a\u6570\u5982\u679c\u662f\u5947\u6570\uff0c\u90a3\u4e48\u53ef\u4ee5\u5206\u6210\u4e24\u4e2a\u6570\uff0c\u800c\u8fd9\u4e24\u4e2a\u6570\u52a0\u8d77\u6765\u5c31\u662f\u539f\u6765\u7684\u6570\uff0c\u4e0b\u9762\u8bc1\u4e00\u4e0b\uff1a\n\n\u5982\u679c\u662f\u5947\u6570\uff0c\u90a3\u4e48 $\\lceil \\frac {w}{2} \\rceil + \\lfloor \\frac {w}{2} \\rfloor = \\frac {w+1}{2} + \\frac {w-1}{2} = w$\n\n\u5982\u679c\u662f\u5076\u6570\uff0c\u90a3\u4e48 $\\lceil \\frac {w}{2} \\rceil + \\lfloor \\frac {w}{2} \\rfloor = \\frac {w}{2} + \\frac {w}{2} = w$\n\n\u6240\u4ee5\u6211\u4eec\u5c06\u6240\u6709\u7684\u6570\u5b57\u52a0\u8d77\u6765\uff0c\u7136\u540e\u4e00\u4e2a\u4e00\u4e2a\u5206\n\n\u7531\u4e8e\u5e8f\u5217\u4f1a\u5f88\u591a\u79cd\u60c5\u51b5\uff0c\u6211\u4eec\u9700\u8981\u6765 **\u6a21\u62df** \u4ed6\u7684\u601d\u8def\u5206\u5272\n\n\u6211\u7684\u4e32\u662f $q$ \uff0c\u76ee\u6807\u4e32\u662f $p$ \uff0c\u7528 $maxx(x)$ \u4ee3\u8868\u67d0\u4e2a $x$ \u4e32\u4e2d\u6700\u5927\u7684\u6570\n\n\u5982\u679c $maxx(q) > maxx(p)$ \uff0c\u90a3\u5c31\u662f\u6211\u8fd9\u4e2a\u6700\u5927\u7684\u6570\u8fd8\u9700\u8981\u518d\u7ec6\u5206\uff0c\u5bf9\u534a\u5206\u5b8c\u540e\u8fd8\u9700\u8981\u653e\u56de\u6211\u81ea\u5df1\u7684\u4e32\u4e2d\n\n\u5982\u679c $maxx(q) = maxx(p)$ \uff0c\u90a3\u4e48\u8fd9\u4e24\u4e2a\u4e32\u4e2d\u6700\u5927\u7684\u6570\u5c31\u662f\u5339\u914d\u597d\u7684\u6570\u5b57\uff0c\u6211\u4eec\u628a\u4ed6\u4eec\u4ece\u4e24\u4e2a\u4e32\u4e2d\u62ff\u5f00\n\n\u5982\u679c $maxx(q) < maxx(p)$ \uff0c\u90a3\u4e48\u6211\u5c31\u5206\u4e0d\u5230\u4ed6\u7684\u60c5\u51b5\u4e86\uff0c\u8fde\u6211\u6700\u5927\u7684\u6570\u90fd\u6bd4\u76ee\u6807\u4e32\u5c0f\u4e86\uff0c\u518d\u5206\u5c31\u66f4\u5c0f\uff0c\u5269\u4e0b\u7684\u6570\u600e\u4e48\u7ec6\u5206\u4e5f\u65e0\u6d4e\u4e8e\u4e8b\n\n\u6211\u4eec\u8981\u600e\u4e48 **\u9ad8\u6548** \u5bfb\u627e\u8fd9\u4e2a\u6700\u5927\u7684\u6570\u5b57\u5462\n\n`multiset` \u548c `priority queue` \u90fd\u662f\u6bd4\u8f83\u597d\u7684\u9009\u62e9\n\n\u6211\u8fd9\u91cc\u7528\u7684\u662f **\u4f18\u5148\u961f\u5217**\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define int ll\n\npriority_queue<int> q, p;\n\nint t, n, temp, tot;\n\nbool flag;\n\nsigned main()\n{\n    scanf(\"%lld\", &t);\n    for (int kkz = 0; kkz < t; kkz++)\n    {\n        tot = 0;\n        flag = true;\n        while (!q.empty()) q.pop();\n        while (!p.empty()) p.pop();\n        scanf(\"%lld\", &n);\n        for (int i = 1; i <= n; i++)\n        {\n            scanf(\"%lld\", &temp);\n            tot += temp;\n            q.push(temp);\n        }\n        p.push(tot);\n        while (!q.empty() && !p.empty() && flag)\n        {\n            if (q.top() == p.top()) q.pop(), p.pop();\n            if (q.top() > p.top()) flag = false;\n            if (q.top() < p.top())\n            {\n                p.push(p.top() % 2 == 0 ? p.top() / 2 : p.top() / 2);\n                p.push(p.top() % 2 == 0 ? p.top() / 2 : p.top() / 2 + 1);\n                p.pop();\n            }\n        }\n        if (flag) printf(\"yes\\n\");\n        else printf(\"no\\n\");\n    }\n    return 0;\n}\n```\n", "link": "/posts/CF-1654C-Alice-and-the-Cake/", "tags": [], "categories": []}, {"title": "CF 1654B Prefix Removals", "content": "\n## Problem\n\n[Luogu](https://www.luogu.com.cn/problem/CF1654B)\n\n[Codeforces](https://codeforces.com/contest/1654/problem/B)\n\n## Solution\n\n\u641c\u7d22\u4e00\u4e2a\u524d\u7f00\u7136\u540e\u5982\u679c\u8fd9\u4e2a\u524d\u7f00\u5728\u540e\u9762\u51fa\u73b0\u8fc7\u5c31\u53ef\u4ee5\u5220\u9664\n\n\u5982\u679c\u641c\u7d22\u5230\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\u524d\u7f00\u5219\u7b97\u6cd5\u505c\u6b62\n\n\u524d\u7f00\u53ef\u4ee5\u662f\u4e00\u4e32\u5b57\u7b26\u4e32\u4e5f\u53ef\u4ee5\u662f **\u4e00\u4e2a\u5b57\u6bcd**\n\n\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u8bb0\u5f55\u6bcf\u4e2a\u5b57\u6bcd\u51fa\u73b0\u7684\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e2a\u4f4d\u7f6e\u5f80\u540e\u5c31\u662f\u7b54\u6848\n\n\u56e0\u6b64\uff0c\u4ece\u540e\u5f80\u524d\u641c\u7d22\uff0c\u5982\u679c\u5b57\u6bcd\u6ca1\u6709\u51fa\u73b0\u8fc7\u7684\uff0c\u8bb0\u5f55\u4f4d\u7f6e\uff0c\u5373\u662f\u7b54\u6848\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nmap<char, int> mp;\n\nint ans, t, len;\n\nchar s[200200];\n\nint main()\n{\n    scanf(\"%d\", &t);\n    for (int kkz = 0; kkz < t; kkz++)\n    {\n        ans = 0;\n        scanf(\"%s\", s);\n        len = strlen(s);\n        for (int i = len - 1; i >= 0; i--)\n        {\n            mp[s[i]]++;\n            if (mp[s[i]] == 1) ans = i;\n        }\n        for (int i = ans; i < len; i++)\n        {\n            printf(\"%c\", s[i]);\n        }\n        printf(\"\\n\");\n        mp.clear();\n    }\n    return 0;\n}\n```\n", "link": "/posts/CF-1654B-Prefix-Removals/", "tags": [], "categories": []}, {"title": "CF 1654A Maximum Cake Tastiness", "content": "\n## Problem\n\n[Luogu](https://www.luogu.com.cn/problem/CF1654A)\n\n[Codeforces](https://codeforces.com/contest/1654/problem/A)\n\n## Solution\n\n\u53cd\u8f6c\u4e00\u4e2a\u5e8f\u5217\u4f7f\u5f97\u76f8\u90bb\u4e24\u4e2a\u6570\u6700\u5927\n\n\u90a3\u4e48\u4f60\u53ef\u4ee5\u76f4\u63a5\u627e\u4e24\u4e2a\u6570\uff0c\u4e00\u4e2a\u7b2c\u4e00\u5927\uff0c\u4e00\u4e2a\u7b2c\u4e8c\u5927\u5373\u53ef\n\n\u7136\u540e\u76f8\u52a0\u5c31\u662f\u7b54\u6848\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint t, n, temp, max1, max2;\nint main()\n{\n    scanf(\"%d\", &t);\n    for (int kkz = 0; kkz < t; kkz++)\n    {\n        max1 = max2 = 0;\n        scanf(\"%d\", &n);\n        for (int i = 0; i < n; i++)\n        {\n            scanf(\"%d\", &temp);\n            if (temp > max1)\n                max2 = max1, max1 = temp;\n            else if (temp > max2)\n                max2 = temp;\n        }\n        printf(\"%d\\n\", max1 + max2);\n    }\n    return 0;\n}\n```\n", "link": "/posts/CF-1654A-Maximum-Cake-Tastiness/", "tags": [], "categories": []}, {"title": "CF 1651A Playoff", "content": "\n## Problem\n\n[luogu](https://www.luogu.com.cn/problem/CF1651A)\n\n[codeforces](https://codeforces.com/contest/1651/problem/A)\n\n## Solution\n\n![problem](https://cdn.luogu.com.cn/upload/vjudge_pic/CF1651A/5e1871b96c9101b943a5400444d0518e867eae14.png)\n\n\u9996\u5148\uff0c\u4e0a\u624b\u770b\u56fe\u53ef\u4ee5\u77e5\u9053\uff0c\u5728\u540e\u9762\u7684\u4e24\u5c42\uff0cWinner\u7684\u4e8c\u8fdb\u5236\u8868\u8fbe\u90fd\u662f 1 \u3002\n\n\u518d\u770b\u4e00\u4e0b $ 1 \\leq n \\leq 30$ \u6240\u4ee5\u6211\u4eec\u5c31\u53ef\u4ee5\u77e5\u9053\u600e\u4e48\u505a\u4e86\u3002\n\n\u90a3\u6765\u770b\u770b\u8fd9\u9053\u9898\u7684\u6807\u51c6\u4e9b\u7684\u89e3\u91ca\uff0c\u5728\u7b2c\u4e00\u5c42\uff0c\u5373 1 \u4e0e 2 \u76f8\u52a0\uff0c3 \u4e0e 4 \u76f8\u52a0\n\n\u90a3\u4e48\u5c31\u662f\u9009\u62e9\u5c0f\u4e00\u70b9\u7684\u6570\uff0c\u5373 1 \u548c 3 \uff0c5 \uff0c7 \u4e4b\u7c7b\u7684\uff0c\u53ef\u4ee5\u770b\u51fa\u6765\uff0c\u7b2c\u4e8c\u5c42\u5f00\u59cb\u5168\u90fd\u662f\u5947\u6570\u3002\n\n\u90a3\u4e48\u4e0b\u9762\u7684\u6bcf\u6bcf\u4e24\u4e2a\u6570\u90fd\u662f\u9009\u62e9\u4e24\u4e2a\u4e4b\u95f4\u6700\u5927\u7684\u90a3\u4e00\u4e2a\uff0c\u76f4\u5230\u7b2c n \u5c42\u7684Winner\u3002\n\n\u5f53\u5c42\u6570\u4e3a n \u65f6\uff0c\u6211\u4eec\u6309\u7167\u7b2c\u4e8c\u5c42\u5f80\u540e\u7684\u4e24\u4e24\u6700\u5927\u7684\u89c4\u5f8b\u5f80\u524d\u63a8\u5230\u7b2c\u4e00\u5c42\uff0c\u90a3\u4e48\u7b2c n \u5c42\u7684Winner\u5e94\u8be5\u6765\u81ea\u7b2c\u4e00\u5c42\u7684\u6700\u4e0b\u9762\u7684\u4e00\u7ec4\n\nWinner $2^n-1$ vs Winner $2^n$\n\n> \u5982\u679c $x+y$ \u65f6\u662f\u5947\u6570\uff0c\u90a3\u4e48\u5c0f\u4e00\u70b9\u7684\u6570\u662f Winner\n\n\u5373 \u7b54\u6848\u662f $2^n-1$\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint t, x;\nint main()\n{\n    scanf(\"%d\", &t);\n    for (int kkz = 0; kkz < t; kkz++)\n    {\n        scanf(\"%d\", &x);\n        printf(\"%d\\n\", (int)pow(2, x) - 1);\n    }\n    return 0;\n}\n```\n", "link": "/posts/CF-1651A-Playoff/", "tags": [], "categories": []}, {"title": "CF 1650A Deletions of Two Adjacent Letters", "content": "\n## Problem\n\n[luogu](https://www.luogu.com.cn/problem/CF1650A)\n\n[codeforces](https://codeforces.com/contest/1650/problem/A)\n\n## Solution\n\n\u4f60\u4ed4\u7ec6\u60f3\u4e00\u4e0b\uff0c\u4ed6\u4e00\u6b21\u53ea\u80fd\u5220\u9664\u4e24\u4e2a\u5b57\u6bcd\uff0c\u8fd8\u8981\u5269\u4e0b\u4e00\u4e2a\u5b57\u6bcd\u662f\u5b83\u6307\u5b9a\u7684\n\n\u90a3\u4e48\u5728\u4e00\u4e2a\u4e32\u4e2d\uff0c\u8fd9\u4e2a\u5b57\u6bcd\u53ea\u80fd\u5728 $s[2*i+1] ( 2*i+1 \\in n )$ \uff08\u6570\u7ec4\u4ece1\u5f00\u59cb\uff09\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\uff0c\u8fd9\u6837\u524d\u9762\u7684\u5b57\u6bcd\u521a\u597d\u591f\u5220\u53bb\uff0c\u81ea\u7136\uff0c\u540e\u9762\u7684\u5b57\u6bcd\u6570\u4e5f\u5c31\u662f\u5076\u6570\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\nint x;\nbool flag;\nchar temp[100], temp2[100];\nint main()\n{\n    scanf(\"%d\", &x);\n    for (int i = 0; i < x; i++)\n    {\n        scanf(\"%s\", temp);\n        scanf(\"%s\", temp2);\n        int len = strlen(temp);\n        flag = false;\n        for (int i = 0; i < len; i += 2)\n            if (temp[i] == temp2[0])\n            {\n                flag = true;\n                break;\n            }\n        if (flag)\n            printf(\"Yes\\n\");\n        else\n            printf(\"No\\n\");\n    }\n    return 0;\n}\n```\n", "link": "/posts/CF-1650A-Deletions-of-Two-Adjacent-Letters/", "tags": [], "categories": []}, {"title": "\u5b66\u4e60\u7b14\u8bb0", "content": "\n# \u524d\u8a00\n\n\u53ef\u80fd\u662f\u5728\u6574\u7406 $blog$ \u4e0a\u529b\u4e0d\u4ece\u5fc3, \u5728\u4f7f\u7528 $\\LaTeX$ \u4e0a\u5e76\u6ca1\u6709\u505a\u5230\u5f88\u5de5\u6574, \u6240\u4ee5\u73b0\u5728\u5f00\u59cb\u4e4b\u524d\u7684\u535a\u5ba2\u90fd\u5904\u4e8e\u534a\u95f2\u7f6e\u72b6\u6001, \u535a\u5ba2\u4f7f\u7528\u9891\u7387\u4e0d\u9ad8, \u53ef\u80fd\u4e5f\u662f\u4e00\u4e9b\u95ee\u9898, \u6700\u8fd1\u5c3d\u91cf\u641e\u8d77\u6765\n\n\u57fa\u672c\u4e0a\u628a\u80fd\u770b\u7684\u5b66\u4e60\u7b14\u8bb0\u96c6\u4e2d\u5728\u8fd9\u91cc, \u8fd9\u6837\u5c31\u4e0d\u4f1a\u6df7\u4e71\u4e86, \u6253\u8d77\u6765\u4e5f\u4e0d\u7528 $Jump~Jump~Jump~$\n\n$OK$ \u5e9f\u8bdd\u4e0d\u591a\u8bf4, \u5f00\u59cb\u5199\u5427 ~~(\u809d)~~\n\n# \u524d\u7f6e\u77e5\u8bc6\n\n```cpp\n#define N 100000 // \u4ee3\u8868\u6570\u636e\u8303\u56f4(\u53ef\u4ee5\u4fee\u6539\u7684)\n#define il inline //\u5185\u5efa\u51fd\u6570, \u9632\u6b62\u5361\u5e38\u7528(\u5927\u591a\u60c5\u51b5\u4e0b\u53ef\u4ee5\u4e0d\u7528\u7528\u5230)\n#define cl(a,b) memset(a,b,sizeof(a)) //\u6e05\u7a7a\u6570\u7ec4\u7528, a = \u5bf9\u8c61\u6570\u7ec4\u540d, b = \u6570\u503c(\u4e0d\u5927\u4e8e\u4e00\u4e2a\u5b57\u8282)\ntypedef long long ll; //\u91cd\u5b9a\u4e49 long long \u5173\u952e\u5b57\u4e3a ll\ntypedef unsigned long long ull; //\u91cd\u5b9a\u4e49 unsigned long long \u5173\u952e\u5b57\u4e3a ull\n\n```\n\n# \u6808\n\n![stack.gif](https://oi-wiki.org/ds/images/stack.svg)\n\n### \u4ecb\u7ecd\n\n\u6808\u662f\u5e38\u7528\u7684\u4e00\u79cd\u7ebf\u6027\u6570\u636e\u7ed3\u6784,\u4fee\u6539\u662f\u6309\u7167\u540e\u8fdb\u5148\u51fa\u7684\u539f\u5219\u8fdb\u884c\u7684,\u53c8\u88ab\u79f0\u4e3a\u662f\u540e\u8fdb\u5148\u51fa( $last\\ in\\ first\\ out$ )\u8868, \u7b80\u79f0 LIFO \u8868\n\n### \u53ef\u652f\u6301\u64cd\u4f5c\n\n`bool empty()` \u5224\u65ad\u6808\u662f\u5426\u4e3a\u7a7a\n\n`void pop()` \u5f39\u51fa\u6808\u9876\u5143\u7d20\n\n`int top()` \u8fd4\u56de\u6808\u9876\u5143\u7d20\n\n`void push()` \u63d2\u5165\u5143\u7d20\u4e8e\u6808\u9876\n\n`int size()` \u8fd4\u56de\u6808\u5927\u5c0f\n\n`void clear()` \u6e05\u7a7a\u6808\n\n### \u590d\u6742\u5ea6\n\n\u63d2\u5165/\u5f39\u51fa $O(1)$\n\n\u8bbf\u95ee\u6700\u9876\u5143\u7d20 $O(1)$\n\n### \u624b\u5199\u6808\n\n```cpp\nstruct Stack\n{\n    int val[N],tot;\n    Stack() { cl(val,0),tot=0; }\n    void clear() { tot=0; }\n    int pop() { return tot==0?0:val[tot--]; }\n    int top() { return val[tot]; }\n    void push(int x) { val[++tot] = x; }\n    int size() { return tot; }\n    bool empty() {return tot==0; }\n}s;\n```\n\n### \u4f8b\u9898\n\n[P3015 [USACO11FEB]Best Parenthesis S](https://www.luogu.com.cn/problem/P3015)\n\n### Sth\n\n\u4e00\u822c\u6765\u8bf4, \u6808\u4f5c\u4e3a\u6700\u6700\u6700\u57fa\u7840\u7684\u6570\u636e\u7ed3\u6784\u4e4b\u4e00, \u5f80\u5f80\u4e0d\u4f1a\u5355\u72ec\u8003\u5bdf, \u53ea\u4f1a\u501f\u52a9 LIFO \u7684\u4f18\u52bf, \u5bf9\u4e00\u4e9b\u95ee\u9898\u8f85\u52a9\u6c42\u89e3, \u5f53\u7136\u8fd9\u8981\u6c42\u4f60\u5bf9\u5176\u5f88\u719f\u6089\u3002\n\n# \u961f\u5217\n\n![queue.gif](https://oi-wiki.org/ds/images/queue.svg)\n\n### \u4ecb\u7ecd\n\n\u961f\u5217, \u987e\u540d\u601d\u4e49\u5c31\u662f\u4e00\u4e2a\u6709\u987a\u5e8f\u6027\u8d28\u7684\u6570\u636e\u7ed3\u6784, \u4e0e\u6808\u7684\u5b9e\u73b0\u65b9\u5f0f\u7565\u6709\u4e0d\u540c, \u4fee\u6539\u662f\u6309\u7167\u5148\u8fdb\u5148\u51fa\u7684\u539f\u5219\u8fdb\u884c\u7684, \u4e5f\u88ab\u79f0\u4e3a\u5148\u8fdb\u5148\u51fa($first\\ in\\ first\\ out$)\u8868, \u7b80\u79f0 FIFO \u8868\u3002\n\n### \u53ef\u652f\u6301\u64cd\u4f5c\n\n`void push()` \u63d2\u5165\u5143\u7d20\u4e8e\u961f\u5934\n\n`void pop()` \u5f39\u51fa\u961f\u5c3e\u5143\u7d20\n\n`int front()` \u8fd4\u56de\u961f\u5934\u5143\u7d20\n\n`int back()` \u8fd4\u56de\u961f\u5c3e\u5143\u7d20\n\n`int size()` \u8fd4\u56de\u961f\u5217\u5927\u5c0f\n\n`bool empty()` \u5224\u65ad\u961f\u5217\u662f\u5426\u4e3a\u7a7a\n\n`void clear()` \u6e05\u7a7a\u961f\u5217 \n\n### \u624b\u5199\u961f\u5217\n\n```cpp\nstruct Queue\n{\n    int val[N],l,r;\n    Queue() { cl(val,0),l=1,r=0; }\n    void push(int x) { val[++r]=val; }\n    int pop() { return val[l++]; }\n    int front() { return val[l]; }\n    int back() { return val[r]; }\n    void clear() { l=1,r=0; }\n    int size() { return r-l+1; }\n    bool empty() { return (r-l+1)==0; }\n}q;\n```\n\n### \u4f8b\u9898\n\n# \uff01\n\n### Sth\n\n\u4e0e\u6808\u76f8\u540c, \u4f5c\u4e3a\u6700\u57fa\u7840\u7684\u6570\u636e\u7ed3\u6784, \u4e00\u822c\u53ea\u4f5c\u4e3a\u8f85\u52a9\u7b97\u6cd5, \u5f88\u5c11\u5355\u72ec\u8003\u5bdf\n\n\n# \u6811\u94fe\u5256\u5206\n\n### \u4ecb\u7ecd\n\n\u6811\u94fe\u5256\u5206\u7528\u4e8e\u5c06\u6811\u5206\u5272\u6210\u82e5\u5e72\u6761\u94fe\u7684\u5f62\u5f0f, \u4ee5\u7ef4\u62a4\u6811\u4e0a\u8def\u5f84\u7684\u4fe1\u606f\u3002\n\n\u5177\u4f53\u6765\u8bf4, \u901a\u8fc7\u8f7b\u91cd\u8fb9\u5256\u5206\u5c06\u6574\u68f5\u6811\u5256\u5206\u4e3a\u82e5\u5e72\u6761\u94fe(\u662f\u6bcf\u4e2a\u8282\u70b9\u53ea\u5c5e\u4e8e\u4e00\u6761\u94fe), \u628a\u6811\u5f62\u7ed3\u6784\u53d8\u4e3a\u7ebf\u6027\u7ed3\u6784, \u7136\u540e\u7528\u5176\u4ed6\u7684\u6570\u636e\u7ed3\u6784(\u6811\u72b6\u6570\u7ec4, SBT, Splay, \u7ebf\u6bb5\u6811)\u7ef4\u62a4\u6bcf\u4e00\u6761\u94fe\u4e0a\u7684\u4fe1\u606f(\u672c\u8d28\u4e0a\u662f\u4e00\u79cd\u4f18\u5316\u66b4\u529b)\u3002\n\n### \u601d\u60f3\n\n\u4f60\u9996\u5148\u9700\u8981\u77e5\u9053\u4ee5\u4e0b\u77e5\u8bc6\uff1a\n\n- \u91cd\u5b50\u8282\u70b9(\u91cd\u513f\u5b50)\uff1a\u5176\u5b50\u8282\u70b9\u4e2d\u5b50\u6811\u6700\u5927\u7684\u5b50\u8282\u70b9\u3002\u5982\u679c\u6709\u591a\u4e2a\u5b50\u6811\u6700\u5927\u7684\u5b50\u8282\u70b9, \u53d6\u5176\u4e00\u3002\u5982\u679c\u6ca1\u6709\u5b50\u8282\u70b9, \u5c31\u65e0\u91cd\u5b50\u8282\u70b9\u3002\n\n- \u8f7b\u5b50\u8282\u70b9(\u8f7b\u513f\u5b50)\uff1a\u7236\u4eb2\u8282\u70b9\u9664\u91cd\u5b50\u8282\u70b9\u5916\u7684\u6240\u6709\u5b50\u8282\u70b9\u3002\n\n- \u91cd\u8fb9\uff1a\u7236\u4eb2\u8282\u70b9\u5230\u91cd\u5b50\u8282\u70b9\u7684\u8fb9\u3002\n\n- \u8f7b\u8fb9\uff1a\u7236\u4eb2\u8282\u70b9\u5230\u5176\u4ed6\u8f7b\u5b50\u8282\u70b9\u7684\u8fb9\u3002\n\n- \u91cd\u94fe\uff1a\u7531\u591a\u6761\u91cd\u8fb9\u8fde\u63a5\u800c\u6210\u7684\u8def\u5f84(\u94fe)\u3002\n\n![TLC1.jpg](https://oi-wiki.org/graph/images/hld.png)\n\n\u6bd4\u5982\u4e0a\u9762\u8fd9\u5e45\u56fe\u4e2d, \u7528 **\u9ed1\u7ebf(\u52a0\u7c97\u7ebf)** \u8fde\u63a5\u7684\u8282\u70b9\u90fd\u662f **\u91cd\u8282\u70b9**, \u5176\u4f59\u5747\u662f **\u8f7b\u8282\u70b9** \u3002\n\n\u5728\u6811\u94fe\u5256\u5206\u4e2d, DFN \u5e8f \u4e00\u822c\u6307\u7684\u662f **\u6309\u7167\u91cd\u94fe\u4f18\u5148\u539f\u5219** \u7684\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u987a\u5e8f\u3002\n\n\u53ef\u4ee5\u770b\u5230\u5728\u8bbf\u95ee\u5b8c\u4e00\u4e2a\u8282\u70b9\u7684\u65f6\u5019, \u4f1a **\u4f18\u5148\u8bbf\u95ee\u5176\u91cd\u5b50\u8282\u70b9** , \n\n\u5230\u8fbe **\u53f6\u5b50\u8282\u70b9** \u7684\u65f6\u5019, \u4e00\u6761\u91cd\u94fe\u5c31\u5f62\u6210\u4e86, \n\n\u7136\u540e\u5f00\u59cb\u9012\u5f52, \u5bfb\u627e\u4e0a\u4e2a\u8282\u70b9\u7684 **\u8f7b\u8282\u70b9** , \u5e76\u7531\u8fd9\u4e2a\u8f7b\u8282\u70b9\u5f00\u59cb, \u518d **\u8bbf\u95ee\u5176\u91cd\u5b50\u8282\u70b9** ...\n\n\u90a3\u4e48\u53ef\u4ee5\u77e5\u9053\u6bcf\u4e00\u6761\u94fe\u90fd\u662f\u7531 **\u8f7b\u8282\u70b9\u4f5c\u4e3a\u5176\u9876\u7aef\u8282\u70b9** \uff0c\u7136\u540e **\u4f59\u4e0b\u7684\u8282\u70b9\u90fd\u662f\u7236\u8282\u70b9\u7684\u91cd\u5b50\u8282\u70b9** (\u5b58\u5728\u6ca1\u6709\u5b50\u8282\u70b9\u7684\u60c5\u51b5)\uff0c\u6240\u4ee5\u4f60\u53ef\u4ee5\u628a\u4e00\u9897\u6811\u4e0a\u90fd\u6bcf\u4e00\u4e2a\u8282\u70b9\u90fd\u5212\u5206\u5230\u4e00\u6761\u94fe\u4e2d\uff08\u5982\u56fe\uff09\u3002\n\n> DFN \u5e8f\u662f **\u6309\u7167\u91cd\u94fe\u4f18\u5148\u539f\u5219** \u7684\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u7684\u987a\u5e8f\n\n> \u5230\u8fbe\u53f6\u5b50\u8282\u70b9\u7684\u65f6\u5019, \u4e00\u6761\u91cd\u94fe\u5c31\u5f62\u6210\u4e86, \n> \u7136\u540e\u5f00\u59cb\u9012\u5f52, \u5bfb\u627e\u4e0a\u4e2a\u8282\u70b9\u7684\u8f7b\u8282\u70b9, \u5e76\u7531\u8fd9\u4e2a\u8f7b\u8282\u70b9\u5f00\u59cb, \u518d\u8bbf\u95ee\u5176\u91cd\u5b50\u8282\u70b9...\n\n\u7531\u4e0a\u8ff0\u7684\u4e24\u4e2a\u4e8b\u60c5\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e2a\u4e8b\u60c5\uff0c\u4f60\u5728\u4e0d\u65addfs\u7684\u8fc7\u7a0b\u4e2d\uff0c\u4f60\u4f1a\u5c06 **\u4e00\u4e2a\u5b50\u6811\u5185\u7684\u8282\u70b9** \u5212\u5206\u5230 **DFN\u5e8f\u5217\u7684\u8fde\u7eed\u4e00\u5757** \uff0c\u4f60\u4e5f\u4f1a\u5c06 **\u4e00\u6761\u94fe** \u5212\u5206\u4e3a **DFN\u5e8f\u5217\u7684\u8fde\u7eed\u4e00\u5757** \u3002\n\n\u8fd9\u6837\u4f7f\u5f97\u67e5\u8be2\u548c\u4fee\u6539\u53d8\u5f97\u5bb9\u6613\u8d77\u6765, \u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u8fd9\u4e00\u4e2a DFN \u5e8f\u5217\u3002\n\n( \u90a3\u4e48, \u4f60\u600e\u4e48\u77e5\u9053\u8fd9\u4e2a\u8282\u70b9\u7684 **\u91cd\u5b50\u8282\u70b9** \u5462 ? )\n\n### \u521d\u6b65\u5b9e\u73b0\n\n\u6211\u4eec\u9700\u8981\u4e24\u6b21 DFS \u9884\u5904\u7406\u8fd9\u4e9b\u503c\uff0c\u5148\u5f97\u5230\u91cd\u513f\u5b50\u624d\u80fd\u505a\u6811\u94fe\u5256\u5206\n\n#### \u524d\u7f6e\u5b9a\u4e49\n\n```cpp\nvector<int> mp[N]; //\u672c\u6587\u4f7f\u7528vector\u5b58\u8fb9\nint size[N], dep[N], fa[N], son[N];\nint id[N], rev[N], top[N], tot;\n```\n\n- $fa[x]$ \u8868\u793a\u8282\u70b9 $x$ \u5728\u6811\u4e0a\u7684 **\u7236\u4eb2** \u3002\n- $dep[x]$ \u8868\u793a\u8282\u70b9 $x$ \u5728\u6811\u4e0a\u7684 **\u6df1\u5ea6** \u3002\n- $size[x]$ \u8868\u793a\u8282\u70b9 $x$ \u7684\u5b50\u6811\u7684 **\u8282\u70b9\u4e2a\u6570** \u3002\n- $son[x]$ \u8868\u793a\u8282\u70b9 $x$ \u7684 **\u91cd\u513f\u5b50** \u3002\n- $top[x]$ \u8868\u793a\u8282\u70b9 $x$ \u6240\u5728 **\u91cd\u94fe** \u7684\u9876\u90e8\u8282\u70b9 ( \u6df1\u5ea6\u6700\u5c0f ) \u3002\n- $id[x]$ \u8868\u793a\u8282\u70b9 $x$ \u7684 DFN \u5e8f, \u4e5f\u662f\u5176\u5728 **\u7ebf\u6bb5\u6811** \u4e2d\u7684\u7f16\u53f7\u3002\n- $rev[x]$ \u8868\u793a DFN \u5e8f\u6240\u5bf9\u5e94\u7684\u8282\u70b9\u7f16\u53f7, \u6709 $rev[id[x]]=x$ \u3002\n\n#### \u7b2c\u4e00\u6b21dfs\n\n- \u6211\u4eec\u5728\u7b2c\u4e00\u6b21 DFS \u4e2d, \u627e\u8be5\u8282\u70b9\u7684 **\u91cd\u5b50\u8282\u70b9** $son[x]$ , \u91cd\u5b50\u8282\u70b9\u5c31\u662f\u8be5\u8282\u70b9\u7684\u5b50\u8282\u70b9\u4e2d\u5b50\u6811\u6700\u5927\u7684\u8282\u70b9, \u6240\u4ee5\u8fd8\u9700\u8981\u5b58\u4e0b\u6bcf\u4e2a\u5b50\u8282\u70b9\u7684 **\u5b50\u6811\u5927\u5c0f** $size[x]$ , \u624d\u80fd\u5224\u65ad\u91cd\u5b50\u8282\u70b9\uff0c\u4e0d\u4ec5\u5982\u6b64, \u8fd8\u9700\u8981\u5b58\u4e0b\u8fd9\u4e2a\u8282\u70b9\u7684 **\u7236\u4eb2** $fa[x]$ \u548c **\u6df1\u5ea6** $dep[x]$ ( \u8fd9\u4e2a\u4e4b\u540e\u518d\u8bf4 )\n\n```cpp\nil void dfs1(int u, int f) // u\u4e3a\u5f53\u524d\u8282\u70b9, f\u4e3a\u5f53\u524d\u8282\u70b9\u7684\u7236\u8282\u70b9\n{\n    size[u] = 1; // \u521d\u59cb\u5316\u5f53\u524d\u5b50\u6811\u5927\u5c0f\n    fa[u] = f;\n    dep[u] = dep[f] + 1;\n    for (int i = 0; i < mp[u].size(); i++)\n    {\n        int v = mp[u][i];\n        if (v == f) continue; // \u9632\u6b62\u6b7b\u5faa\u73af, \u81ea\u8bc1\u4e0d\u96be\n        dfs1(v, u);\n        size[u] += size[v]; //\u7edf\u8ba1\u5b50\u6811\u5927\u5c0f\n        if (size[v] > size[son[u]] || !son[u]) son[u] = v; //\u5bfb\u627e\u91cd\u5b50\u8282\u70b9\n    }\n    return;\n}\n```\n\n#### \u7b2c\u4e8c\u6b21dfs\n\n- \u7b2c\u4e8c\u6b21dfs\u4e2d, \u6211\u4eec\u6309\u7167 **\u91cd\u94fe\u4f18\u5148\u539f\u5219** \u8fdb\u884c DFS , \u8fd9\u68f5\u6811\u8fdb\u884c\u5256\u5206, \u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u6240\u5c5e\u7684\u94fe, \u6211\u4eec\u505a\u51fa\u8fd9\u6837\u5b89\u6392, \u5c06\u8fd9\u6761\u91cd\u94fe\u7684 **\u9876\u7aef\u8282\u70b9** $top[x]$ \u4f5c\u4e3a\u8fd9\u4e2a\u8282\u70b9\u6240\u5c5e\u94fe\u7684\u6807\u5fd7, \u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5224\u65ad\u8fd9\u4e24\u4e2a\u8282\u70b9\u662f\u5426\u540c\u4e00\u6761\u94fe\u5566\u3002\n- \u7136\u540e\u6211\u4eec\u8fd8\u8981\u751f\u6210 DFN \u5e8f\u5217 $id[x]$ , \u4ee5\u53ca DFN \u5e8f\u6240\u5bf9\u5e94\u7684\u8282\u70b9\u7f16\u53f7 $rev[x]$\n\n\n```cpp\nil void dfs2(int u, int t) // u\u4e3a\u5f53\u524d\u8282\u70b9, t\u4e3a\u5f53\u524d\u8282\u70b9\u6240\u5728\u94fe\u7684\u9876\u7aef\u8282\u70b9\n{\n    top[u] = t; \n    id[u] = ++tot; // \u5c06id\u5e8f\u5217\u4e0b\u4e00\u4e2a\u7f16\u53f7\u8d4b\u4e88\u7ed9\u8fd9\u4e2a\u8282\u70b9\n    rev[tot] = u; // rev[id[x]]=x \n    if (!son[u]) return; // \u6ca1\u6709\u513f\u5b50\u7684\u60c5\u51b5\n    dfs2(son[u], t); \n    /*\u6211\u4eec\u9009\u62e9\u4f18\u5148\u8fdb\u5165\u91cd\u513f\u5b50\u6765\u4fdd\u8bc1\u4e00\u6761\u91cd\u94fe\u4e0a\u5404\u4e2a\u8282\u70b9DFN\u5e8f\u8fde\u7eed\uff0c\n    \u4e00\u4e2a\u70b9\u548c\u5b83\u7684\u91cd\u513f\u5b50\u5904\u4e8e\u540c\u4e00\u6761\u91cd\u94fe\uff0c\u6240\u4ee5\u91cd\u513f\u5b50\u6240\u5728\u91cd\u94fe\u7684\u9876\u7aef\u8fd8\u662ft*/\n    for (int i = 0; i < mp[u].size(); i++)\n    {\n        int v = mp[u][i];\n        if (fa[u] != v && son[u] != v) dfs2(v, v); \n        // \u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f7b\u513f\u5b50\uff0c\u8fd9\u4e2a\u8f7b\u513f\u5b50\u6240\u5c5e\u7684\u9876\u7aef\u8282\u70b9\u5c31\u662f\u5b83\u672c\u8eab\n    }\n    return;\n}\n```\n\n### \u6027\u8d28&\u590d\u6742\u5ea6\n\n\u6811\u94fe\u5256\u5206\u62e5\u6709\u5b83\u72ec\u7279\u7684\u6027\u8d28\n\n**\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u90fd\u5c5e\u4e8e\u4e14\u4ec5\u5c5e\u4e8e\u4e00\u6761\u91cd\u94fe**\n\n\u91cd\u94fe\u5f00\u5934\u7684\u7ed3\u70b9\u4e0d\u4e00\u5b9a\u662f\u91cd\u5b50\u8282\u70b9\u3002\n\n\u6240\u6709\u7684\u91cd\u94fe\u5c06\u6574\u68f5\u6811 **\u5b8c\u5168\u5256\u5206**\u3002\n\n\u5728\u5256\u5206\u65f6 **\u91cd\u8fb9\u4f18\u5148\u904d\u5386**\uff0c\u6700\u540e\u6811\u7684 DFN \u5e8f\u5217\u4e0a\uff0c\u91cd\u94fe\u5185\u7684 DFS \u5e8f\u662f**\u8fde\u7eed**\u7684\u3002\n\n\u6309 DFN \u6392\u5e8f\u540e\u7684\u5e8f\u5217\u5373\u4e3a\u5256\u5206\u540e\u7684\u94fe\u3002\n\n\u4e00\u9897\u5b50\u6811\u5185\u7684 DFN \u5e8f\u662f**\u8fde\u7eed**\u7684\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u8f7b\u5b50\u8282\u70b9, $size[v] < size[x] / 2$ \u3002\n\n\u4ece\u4efb\u610f\u4e00\u4e2a\u8282\u70b9\u5230\u6839\u8282\u70b9\u7ecf\u8fc7\u8f7b\u91cd\u94fe\u7684\u4e2a\u6570\u4e0d\u8d85\u8fc7 $log(n)$ \u3002\n\n\u6240\u4ee5\u6811\u94fe\u5256\u5206\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $O(nlogn)$\uff0c\n\u4f46\u662f\u5e38\u5e38\u4f1a **\u540c\u65f6\u4f7f\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4** DFN **\u5e8f\u5217** (\u7ebf\u6bb5\u6811\u7b49)\uff0c\u5b9e\u9645\u5927\u591a\u60c5\u51b5\u4e3a $O(nlog^2n)$ \u3002\n\n### \u5b9e\u9645\u5e94\u7528 \n\n\u6811\u94fe\u5256\u5206\u4e00\u822c\u670d\u52a1\u4e8e $LCA$ \u6216\u8def\u5f84\u4e0a\u4fe1\u606f\u7ef4\u62a4 \u6216\u8005\u662f \u7ef4\u62a4\u5b50\u6811\u4e0a\u7684\u4fe1\u606f ( \u5c06\u4ee5 $x$ \u4e3a\u6839\u7684\u5b50\u6811\u7684\u6240\u6709\u7ed3\u70b9\u7684\u6743\u503c\u589e\u52a0 $w$ ) \u3002\n\n# !\n\n```cpp\nvector<int> mp[N];\nstruct Tree\n{\n    int l, r, val, maxn;\n};\n#define ls(x) (x<<1)\n#define rs(x) ((x<<1)|1)\nstruct SeG\n{\n    Tree t[N<<2];\n    int w[N];\n    il void pushup(int x)\n    {\n        t[x].val = t[ls(x)].val + t[rs(x)].val;\n        t[x].maxn = max(t[ls(x)].maxn, t[rs(x)].maxn);\n        return;\n    }\n\n    il void build(int x, int l, int r)\n    {\n        t[x].l = l, t[x].r = r;\n        if (l == r)\n        {\n            t[x].maxn = t[x].val = w[l];\n            return;\n        }\n        int mid = (l + r) >> 1;\n        build(ls(x), l, mid);\n        build(rs(x), mid + 1, r);\n        pushup(x);\n        return;\n    }\n\n    il void change(int x, int k, int num)\n    {\n        if (t[x].l > k || t[x].r < k) return;\n        if (t[x].r == k && t[x].l == k)\n        {\n            t[x].val = t[x].maxn = num;\n            return;\n        }\n        change(ls(x), k, num);\n        change(rs(x), k, num);\n        pushup(x);\n        return;\n    }\n\n    il int ask_m(int x, int l, int r)\n    {\n        if (t[x].l > r || t[x].r < l) return -INF;\n        if (t[x].l >= l && t[x].r <= r) return t[x].maxn;\n        return max(ask_m(ls(x), l, r), ask_m(rs(x), l, r));\n    }\n\n    il int ask_v(int x, int l, int r)\n    {\n        if (t[x].r < l || t[x].l > r) return 0;\n        if (t[x].r <= r && t[x].l >= l) return t[x].val;\n        return ask_v(ls(x), l, r) + ask_v(rs(x), l, r);\n    }\n};\n\nstruct TLC\n{\n    int size[N], dep[N], fa[N], son[N];\n    int id[N], rev[N], top[N], tot;\n    SeG tree;\n\n    il void dfs1(int u, int f) // u\u5f53\u524d\u8282\u70b9\uff0cf=fa[u]\n    {\n        size[u] = 1;\n        fa[u] = f;\n        dep[u] = dep[f] + 1;\n        for (int i = 0; i < mp[u].size(); i++)\n        {\n            int v = mp[u][i];\n            if (v == f) continue;\n            dfs1(v, u);\n            size[u] += size[v];\n            if (size[v] > size[son[u]] || !son[u]) son[u] = v;\n        }\n        return;\n    }\n\n    il void dfs2(int u, int t) // u\u5f53\u524d\u8282\u70b9\uff0ct=top[u];\n    {\n        top[u] = t;\n        id[u] = ++tot;\n        rev[tot] = u;\n        if (!son[u]) return;\n        dfs2(son[u], t);\n        for (int i = 0; i < mp[u].size(); i++)\n        {\n            int v = mp[u][i];\n            if (fa[u] != v && son[u] != v) dfs2(v, v);\n        }\n        return;\n    }\n\n    il int qMax(int x, int y)\n    {\n        int ans = -INF;\n        while (top[x] != top[y])\n        {\n            if (dep[top[x]] < dep[top[y]]) swap(x, y);\n            ans = max(ans, tree.ask_m(1, id[top[x]], id[x]));\n            x = fa[top[x]];\n        }\n        if (dep[x] > dep[y]) swap(x, y);\n        return max(ans, tree.ask_m(1, id[x], id[y]));\n    }\n\n    il int qSum(int x, int y)\n    {\n        int ans = 0;\n        while (top[x] != top[y])\n        {\n            if (dep[top[x]] < dep[top[y]]) swap(x, y);\n            ans += tree.ask_v(1, id[top[x]], id[x]);\n            x = fa[top[x]];\n        }\n        if (dep[x] > dep[y]) swap(x, y);\n        return ans + tree.ask_v(1, id[x], id[y]);\n    }\n\n    il void change(int x, int num)\n    {\n        tree.change(1, id[x], num);\n        return;\n    }\n\n} a;\n```\n\n### \u4f8b\u9898\n\n[P3401 \u6d1b\u8c37\u6811](https://www.luogu.com.cn/problem/P3401)\n\n", "link": "/posts/!-xue-xi-bi-ji/", "tags": [], "categories": []}, {"title": "luogu\u4e2a\u4eba\u4e3b\u9875\u5b58\u686322.3.10", "content": "\n\n[$\\mathit{\\Large{\\textcolor{#2874B2}{My \\ Blog}}}$](https://blog.rockson.top/)\n\n## ![](https://cdn.jsdelivr.net/gh/RocksonLee/Picgo/20211020210756.png)\n\n\n\u5df2\u7ecf\u6709\n![a](http://www.hit-counts.com/counter.php?t=MTQ1MTYwNA==)\u4eba\u6b21\u6765\u8fc7\u6211\u7684\u4e3b\u9875\u4e86\n\n\n```\n\u5c0f\u5c0f\u7684\u8fdb\u6b65\u8bb0\u5f55\n- 2018.10.24 \u6ce8\u518c\u4e86\n\n- 2018.11.26 AC 10\u796d P1089 \u6d25\u6d25\u7684\u50a8\u84c4\u8ba1\u5212\n\n- 2019.1.09 \u7b2c\u4e00\u9053\u7d2b\u9898 CF659A Round House\n\n- 2019.1.29 \u7b2c\u4e00\u9053\u7eff\u9898 P2815 IPv6\u5730\u5740\u538b\u7f29\n\n- 2019.1.29 \u7b2c\u4e00\u6b21\u53d1\u9898\u89e3 P2815 IPv6\u5730\u5740\u538b\u7f29\u9898\u89e3\n\n- 2019.4.02 AC 50\u796d P1980 \u8ba1\u6570\u95ee\u9898\n\n- 2019.4.17 \u7eff\u540d\u796d\n\n- 2019.9.18 AC 100\u796d P5534 [XR-3]\u7b49\u5dee\u6570\u5217\n\n- 2020.1.1 \u7070\u540d\u796d\n\n- 2020.4.1 \u7eff\u540d\u796d\uff08\u53c8\u53cc\u53d2\u53d5\uff09\n\n- 2020.11.7 \u521d\u4e2d\u6700\u540e\u4e00\u6b21CSP\uff0c\u6211\u7d2f\u4e86...\n\n- 2020.11.10 AFO\uff0c\u641ewhk\u4e86\n\n- 2021.7.20 \u6211\u53c8\u56de\u6765\u4e86\uff0c\u5f00\u59cb\u54b3OI\u4e86\n\n- 2021.10.23 \u4eba\u751f\u4e2d\u7b2c\u4e09\u6b21CSP\uff0c\u6211\u7231CSP-S\uff01\uff01\uff01\n\n- 2021.11.20 \u53c2\u52a0\u4e86NOIP 2021\n\n- 2022.2.18 AC 200\u796d P2375 [NOI2014] \u52a8\u7269\u56ed\n```\n\n\n\n# \u4e00\u4e9b\u597d\u73a9\u7684\u94fe\u63a5\n\n## [csp-s1](https://www.luogu.com.cn/blog/334586/csp-pre-knowledge)\n\n## [BIG](https://www.luogu.com.cn/user/118537)\n\n## [\u753b\u7535\u8def](http://falstad.com/circuit/circuitjs.html)\n\n## [\u5495\u6c11\u60c5\u611f\u5e16\u6536\u5f55](https://www.luogu.com.cn/paste/2gvwjfjv)\n\n## [nazo.one\u89e3\u5bc6](https://nazo.one-story.cn/)\n\n## [\u6709\u610f\u601d](http://www.spielzeugz.de/html5/liquid-particles-3D/)\n\n## [\u4eba\u751f\u91cd\u5f00\u6a21\u62df\u5668](https://liferestart.syaro.io/view/)\n\n## [\u540d\u5b57\u7ade\u6280\u573a](http://namerena.github.io/)\n\n## [\u4fe1\u4efb\u7684\u8fdb\u5316](https://dccxi.com/trust/)\n\n## [ISML\u4e16\u840c](https://www.internationalsaimoe.com/?lang=zh-hans)\n\n## [\u5982\u4f55\u7528 Markdown&LaTeX \u5199\u4e00\u7bc7\u6392\u7248\u6574\u9f50\u7684\u9898\u89e3\uff1f](https://studyingfather.blog.luogu.org/blog-written-guide)\n\n## [LaTeX\u6570\u5b66\u516c\u5f0f\u5927\u5168](https://www.luogu.com.cn/blog/IowaBattleship/latex-gong-shi-tai-quan)\n\n## [LaTeX\u7f16\u8f91\u5668](https://www.codecogs.com/latex/eqneditor.php?lang=zh-cn)\n\n## [oi-archive](https://oi-archive.memset0.cn/)\n\n## [oi-wiki](https://oi-wiki.org/)\n\n## [\u7b97\u6cd5\u6f14\u793a](https://visualgo.net/zh)\n\n## [\u6570\u5217](http://oeis.org/?language=chineseS)\n\n## [\u70ab\u9177\u53cd\u6f14\u9b54\u672f](https://vfleaking.blog.uoj.ac/blog/87)\n\n## [\u6570\u5b57\u51fd\u6570\u7ed8\u5236](https://www.geogebra.org/graphing)\n\n## [\u753b\u56fe](https://csacademy.com/app/graph_editor/)\n\n## [C++\u4ee3\u7801\u538b\u884c\u673a](https://mivik.gitee.io/compress)\n\n## [Cultris2 download](http://gewaltig.net/download.aspx?v=c2-win)\n\n## [yorg.io](https://yorg.io)\n\n## [generals.io](http://generals.io/)\n\n## [slay.one](http://slay.one)\n\n## [hit-counts.com](https://www.hit-counts.com/)\n\n## [java](http://www.oracle.com/technetwork/java/archive-139210.html)", "link": "/posts/luogu-ge-ren-zhu-ye-cun-dang-22.3.10/", "tags": [], "categories": []}, {"title": "CF 1649B Game of Ball Passing", "content": "\n## Problem\n\n[luogu](https://www.luogu.com.cn/problem/CF1649B)\n\n[codeforces](https://codeforces.com/contest/1649/problem/B)\n\n## Solution\n\n\u63a5\u53d7\u7403\u4e0d\u6d88\u8017\u6b21\u6570\uff0c\u7403\u4ece\u4e00\u4e2a\u4eba\u624b\u91cc\u51fa\u53bb\uff0c\u518d\u56de\u5230\u4ed6\u624b\u4e0a\u53ef\u4ee5\u6d88\u8017\u4e24\u6b21\n\n\u5982\u679c\u6709\u4e00\u4e2a\u4eba\u7684\u6b21\u6570\u591a\u5230\u5176\u4ed6\u4eba\u90fd\u6ca1\u529e\u6cd5\u6d88\u8017\u4ed6\u7684\u6b21\u6570\n\n\u5373\u5176\u4ed6\u4eba\u7684\u6b21\u6570\u4e4b\u548c\u5e94\u8be5\u6bd4\u4ed6\u5c11\n\n\u90a3\u4e48\u4ed6\u9700\u8981\u4f20\u51fa\u4e00\u9897\u7403\u6d88\u8017\u4e00\u4e2a\u6b21\u6570\n\n\u6ce8\u610f\u7279\u5224\u6ca1\u6709\u4f20\u9012\u7403\uff0c\u5c31\u4e0d\u9700\u8981\u6709\u7403\n\n\u53ef\u5f97\n$$\nans=\n\\begin{cases}\n2 \\times maxn-sum & (2*max \\geq sum)\\\\\n1 & (2*max < sum)\\\\\n\\end{cases}\n$$\n\n## Code\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n    unsigned long long t, temp, n, sum, maxn;\n    scanf(\"%llu\", &t);\n    for (int kkz = 0; kkz < t; kkz++)\n    {\n        maxn = 0, sum = 0;\n        scanf(\"%llu\", &n);\n        for (int i = 0; i < n; i++)\n        {\n            scanf(\"%llu\", &temp);\n            sum += temp;\n            maxn = max(temp, maxn);\n        }\n        if (maxn == 0)\n            printf(\"0\\n\");\n        else if (maxn * 2 <= sum)\n            printf(\"1\\n\");\n        else\n            printf(\"%llu\\n\", maxn * 2 - sum);\n    }\n    return 0;\n}\n``\n", "link": "/posts/CF-1649B-Game-of-Ball-Passing/", "tags": [], "categories": []}, {"title": "CF 1642B Power Walking", "content": "\n## \u539f\u9898\u94fe\u63a5\n\n[codeforces](https://codeforces.com/contest/1642/problem/B)\n\n[luogu](https://www.luogu.com.cn/problem/CF1642A)\n\n## \u9898\u610f\u7406\u89e3\n\n\u8fd9\u9053\u9898\u662f\u8d5b\u65f6\u505a\u7684\uff0c\u5982\u679c\u6ca1\u6709\u4f60\u8c37\u7b80\u660e\u627c\u8981\u7684\u7ffb\u8bd1\uff0c\u7684\u786e\u9700\u8981\u4e00\u70b9\u65f6\u95f4\uff08\u82f1\u8bed\u6c34\u5e73\u6781\u4f4e\uff09\n\n\u628a$n$\u4e2a\u7535\u6c60\u5206\u914d\u7ed9$k$\u4e2a\u5b69\u5b50\uff0c\u6bcf\u4e2a\u5b69\u5b50\u624b\u4e2d\u7684\u79cd\u7c7b\u5c31\u662f\u8fd9\u4e2a\u5b69\u5b50\u7684\u8d21\u732e\uff0c\u8f93\u51fak\u4e2a\u6570\u5b57\uff0c\u7b2c$k$\u4e2a\u4ee3\u8868\u6709$k$\u4e2a\u5b69\u5b50\u7684\u6700\u5c0f\u8d21\u732e\n\n## Solution\n\n\u4e3a\u4e86\u6700\u5c0f\u5316\u8fd9\u4e2a\u603b\u8d21\u732e\uff0c\u6bcf\u4e2a\u5b69\u5b50\u624b\u4e2d\u79cd\u7c7b\u5c3d\u53ef\u80fd\u7684\u5c11\uff0c\u5373\u4e00\u4e2a\u79cd\u7c7b\u7684\u7535\u6c60\u5c3d\u53ef\u80fd\u53ea\u7ed9\u4e00\u4e2a\u5b69\u5b50\u62ff\uff0c\u5f53\u5b69\u5b50\u4eba\u6570\u5c0f\u4e8e\u7b49\u4e8e\u7535\u6c60\u79cd\u7c7b\u6570\u91cf\u7684\u65f6\u5019\uff0c\u7535\u6c60\u79cd\u7c7b\u4fbf\u662f\u7b54\u6848\n\n\u5f53\u5b69\u5b50\u4eba\u6570\u5927\u4e8e\u7535\u6c60\u79cd\u7c7b\uff0c\u6211\u4eec\u5c31\u5c06\u4e00\u79cd\u7535\u6c60\u5206\u4e00\u4efd\u7ed9\u65b0\u7684\u5b69\u5b50\u62ff\uff0c\u90a3\u4e48\u7b2c$k$\u4e2a\u7b54\u6848\u5c31\u662f\u7b2c$k-1$\u4e2a\u7b54\u6848\u52a0\u4e00~~\uff08\u89c2\u5bdf\u6837\u4f8b\u6cd5\uff09~~\n\n\u5982\u4f55\u7edf\u8ba1\u6709\u591a\u5c11\u4e2a\u4e0d\u540c\u7684\u6570\u5462\uff0c\u5f53\u7136\u662fSTL\u2014\u2014set\uff08\u5176\u5b9e\u50cf\u6392\u5e8f\u4e4b\u7c7b\u7684\u90fd\u53ef\u4ee5\uff09\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define T 300100\n#define N 300100\n#define il inline\n#define in(a) a = read()\nil int read()\n{\n    int x = 0, v = 1;\n    char ch = getchar();\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-') v = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n    {\n        x = (x << 3) + (x << 1) + ch - '0';\n        ch = getchar();\n    }\n    return v * x;\n}\nvoid out(int x)\n{\n    if (x < 0) putchar('-'), x = -x;\n    if (x > 9) out(x / 10);\n    putchar(x % 10 + '0');\n}\nint n, m, temp;\nset<int> q;\nint main()\n{\n    in(n);\n    for (int i = 0; i < n; i++)\n    {\n        in(m);\n        q.clear();\n        for (int j = 0; j < m; j++)\n        {\n            in(temp);\n            q.insert(temp);\n        }\n        for (int j = 1; j <= m; j++)\n        {\n            if (q.size() > j)\n                out(q.size());\n            else\n                out(j);\n            printf(\" \");\n        }\n        printf(\"\\n\");\n    }\n}\n\n```\n", "link": "/posts/CF-1642B-Power-Walking/", "tags": [], "categories": []}, {"title": "LG P2375 [NOI2014] \u52a8\u7269\u56ed", "content": "\n\u796d\u4e0a\u4e00\u6b21blog\u5df2\u7ecf3\u4e2a\u6708\u4e86\uff0c\u6211\u6210\u4e3a\u9e3d\u5b50\u4e86...\n\n\u8fd9\u9053\u9898\u5c31\u8dd1\u4e24\u904dkmp~~\u770b\u6bdb\u7247~~\u5c31\u53ef\u4ee5\u89e3\u51b3\u95ee\u9898\uff0c\u4f46\u662f\u4e00\u4e9b\u5c0f\u95ee\u9898\u7531\u4e8e\u7801\u529b\u89e3\u51b3\u8f83\u665a\u3002\n\n\u89e3\u51b3\u7528\u65f61.5h\n\n\u6ce8\u610f\u70b91.tnt[1]=1!!!!!\n\n\u6ce8\u610f\u70b92.tnt\u7528\u5b8c\u5c31\u6254\uff0c\u522bmemset\u4e86\n\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define N 1000010\n#define MOD 1000000007\n#define pl(a) ((a) % MOD)\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\nchar str[N];\nint kmp[N], tnt[N];\null ans;\nvoid init()\n{\n    cl(str, 0);\n    cl(kmp, 0);\n    ans = 1;\n}\n\nint main()\n{\n    int T;\n    scanf(\"%d\", &T);\n    for (int kkz = 0; kkz < T; kkz++)\n    {\n        init();\n        scanf(\"%s\", str + 1);\n        tnt[1] = 1;\n        int lens = strlen(str + 1);\n        for (int i = 2, j = 0; i <= lens; i++)\n        {\n            while (j && str[i] != str[j + 1]) j = kmp[j];\n            if (str[i] == str[j + 1])\n                j++;\n            kmp[i] = j;\n            tnt[i] = tnt[j] + 1;\n        }\n        for (int i = 2, j = 0; i <= lens; i++)\n        {\n            while (j && str[i] != str[j + 1]) j = kmp[j];\n            if (str[i] == str[j + 1])\n                j++;\n            while (j * 2 > i) j = kmp[j];\n            // printf(\"---T:%d,good:%c,i:%d,j:%d,sum:%d\\n\", kkz, str[i], i, j, tnt[j]);\n            ans = pl(ans * (tnt[j] + 1));\n        }\n        printf(\"%llu\\n\", ans);\n    }\n    return 0;\n}\n```", "link": "/posts/LG-P2375-[NOI2014]--dong-wu-yuan/", "tags": [], "categories": []}, {"title": "\u4e8c\u6b21\u5143\u76f8\u5173\u7684\u7410\u788e", "content": "\n## \u4e00\u4e9b\u597d\u6587\uff08\u57fa\u672c\u5168\u662f\u8f6c\u7684\n\u4e2d\u56fd\u7684\u52a8\u753b\uff0c\u544a\u8bc9\u5b69\u5b50\u7684\u662f\uff1a\u8fd9\u662f\u574f\u4eba\uff0c\u8fd9\u662f\u597d\u4eba\uff0c\u597d\u4eba\u5c31\u8981\u6253\u574f\u4eba\u3002\u574f\u4eba\u4ece\u59cb\u5230\u7ec8\u90fd\u662f\u574f\u7684\uff0c\u597d\u4eba\u6253\u574f\u4eba\u5929\u7ecf\u5730\u4e49\u3002 \u65e5\u672c\u7684\u52a8\u6f2b\uff0c\u544a\u8bc9\u5b69\u5b50\uff1a\u8fd9\u662f\u574f\u4eba\uff0c\u4ed6\u53d8\u4e3a\u574f\u4eba\u7684\u7406\u7531\u662f\uff0c\u4e3a\u4e86\u5b88\u62a4\u67d0\u6837\u4e1c\u897f\u3001\u4e3a\u4e86\u4fdd\u62a4\u67d0\u4e2a\u4eba\u3001\u4e3a\u4e86\u5b88\u4f4f\u67d0\u4e2a\u7ea6\u5b9a\u3001\u56e0\u4e3a\u4ee5\u524d\u906d\u53d7\u4e86\u4e0d\u516c\u4e0e\u4f24\u5bb3\uff0c\u4ee5\u62a5\u590d\u4e16\u754c\uff0c\u800c\u53d8\u4e3a\u574f\u4eba\u53cd\u6d3e\u3002\u597d\u4eba\uff0c\u4e5f\u4e0d\u4f1a\u4e00\u76f4\u662f\u597d\u4eba\u3001\u8868\u9762\u662f\u597d\u4eba\u80cc\u9762\u5374\u662f\u7f6a\u6076\u4e4b\u5f92\u3001\u4e5f\u4f1a\u505a\u9519\u4e8b\uff0c\u505a\u9519\u4e8b\u4e5f\u4f1a\u53d8\u4e3a\u574f\u4eba\u4e5f\u4f1a\u906d\u53d7\u5236\u88c1\u3002\n\n\u4e2d\u56fd\u7684\u52a8\u753b\uff0c\u544a\u8bc9\u5b69\u5b50\u597d\u4eba\u4e00\u76f4\u662f\u597d\u7684\uff0c\u574f\u4eba\u4e00\u76f4\u662f\u574f\u7684\uff0c\u6ca1\u6709\u4efb\u4f55\u7406\u7531\u3002 \u65e5\u672c\u7684\u52a8\u6f2b\uff0c\u544a\u8bc9\u5b69\u5b50\uff0c\u53ef\u8d5e\u4e4b\u4eba\u4ea6\u6709\u53ef\u6068\u4e4b\u5904\uff0c\u53ef\u6068\u4e4b\u4eba\u4ea6\u6709\u53ef\u601c\u53ef\u8d5e\u4e4b\u5904\u3002\n\n\u4e2d\u56fd\u7684\u52a8\u753b\u544a\u8bc9\u5b69\u5b50\uff0c\u4eba\u53ea\u5206\u4e3a\u597d\u4eba\u548c\u574f\u4eba\u3002 \u65e5\u672c\u7684\u52a8\u6f2b\u544a\u8bc9\u5b69\u5b50\uff0c\u4eba\u90fd\u662f\u6709\u4e24\u9762\u6027\u7684\uff0c\u597d\u4eba\u4e5f\u4f1a\u53d8\u4e3a\u7f6a\u5927\u6076\u6781\u7684\u4eba\uff0c\u574f\u4eba\u4e5f\u6709\u53ef\u80fd\u662f\u771f\u6b63\u7684\u597d\u4eba\uff0c\u770b\u4f60\u7684\u672c\u5fc3\u662f\u600e\u6837\u60f3\u7684\u3002\n\n\u8c22\u8c22\u4f60\uff0c\u4e00\u76f4\u966a\u4f34\u7740\u6211 \u6d41\u5e74\u4f3c\u6c34\uff0c\u65f6\u5149\u51b2\u6de1\u4e86\u6211\u4eec\u7684\u8bb0\u5fc6 \u66fe\u7ecf\u7684\u611f\u52a8\uff0c\u80fd\u5426\u518d\u5ea6\u62fe\u8d77 \u4e0d\u7ecf\u610f\u95f4 \u4eff\u4f5b\u5931\u53bb\u4e86\u4ec0\u4e48 \u5ffd\u7136\u60ca\u89c9\uff0c\u4f60\u5df2\u4e0d\u5728\u8eab\u8fb9 \u7a7a\u7559\u6211\u4e00\u6bb5\u56de\u5fc6\u541e\u4ed3\u7687\u5931\u63aa\uff0c\u4e0d\u77e5\u5982\u4f55\u5f00\u53e3 \u5c31\u5982\u540c\u6728\u5076\u4e00\u822c \u4eff\u4f5b\u6d41\u6d6a\u8857\u89d2\u7684\u5c0f\u732b\u60f3\u8981\u547c\u558a\uff0c\u5374\u65e0\u529b\u51fa\u58f0 \u5982\u679c\u80fd\u518d\u4e00\u6b21\uff0c\u518d\u4e00\u6b21\u9047\u5230\u4f60 \u6211\u60f3\u5bf9\u4f60\u8bf4\u2014\u2014 \u8c22\u8c22\u4f60\u8ba9\u6211\u660e\u767d\u4e86\u4eb2\u60c5\u7684\u6e29\u6696 \u8c22\u8c22\u4f60\u8ba9\u6211\u660e\u767d\u4e86\u53cb\u60c5\u7684\u575a\u56fa \u8c22\u8c22\u4f60\u8ba9\u6211\u660e\u767d\u4e86\u7231\u60c5\u7684\u6d6a\u6f2b \u8c22\u8c22\u4f60\u8ba9\u6211\u660e\u767d\u4e86\u68a6\u60f3\u7684\u529b\u91cf \u6bcf\u5f53\u6211\u53d7\u4f24\u7684\u65f6\u5019 \u603b\u5e0c\u671b\u80fd\u611f\u53d7\u5230\u4f60\u7684\u5b58\u5728 \u5e78\u597d\u8fd8\u6709\u56de\u5fc6 \u80fd\u7ed9\u6211\u6170\u85c9 \u65e0\u8bba\u4f55\u65f6 \u4f60\u90fd\u5728\u6211\u8bb0\u5fc6\u4e2d \u4e00\u76f4\u4ee5\u6765\uff0c\u8c22\u8c22\u4f60\u4e86\uff01\n\n\u6211\u8ba8\u538c\u6211\u7684\u5c4f\u5e55\uff0c\u56e0\u4e3a\u5b83\u8ba9\u6211\u78b0\u4e0d\u5230\u4f60\uff1b \u6211\u8ba8\u538c\u6b21\u5143\u58c1\uff0c\u56e0\u4e3a\u5b83\u65e0\u65f6\u65e0\u523b\u4e0d\u63d0\u9192\u7740\u6211\u6211\u4eec\u4e0d\u5728\u4e00\u4e2a\u4e16\u754c\u3002 \u4e0d\u8fc7\uff0c\u6211\u7231\u6211\u7684\u773c\u775b\uff0c\u56e0\u4e3a\u5b83\u8ba9\u6211\u770b\u5230\u4e86\u4f60\uff1b \u6211\u7231\u6211\u7684\u751f\u6d3b\uff0c\u56e0\u4e3a\u4f60\u8fd8\u5728\uff1b \u6211\u7231\u6211\u7684\u7075\u9b42\uff0c\u4f46\u662f\u6211\u66f4\u7231\u4f60\uff1b \u6211\u7231\u6211\u7684\u5fc3\u810f\uff0c\u56e0\u4e3a\u6211\u5c06\u5b83\u5949\u732e\u7ed9\u4e86\u4f60\u3002 \u800c\u4e14\u6211\u4e0d\u4f1a\u540e\u6094\u8fd9\u4e48\u505a\uff0c\u6c38\u8fdc\u4e0d\u4f1a\u3002\n\n\u6211\u6240\u6df1\u7231\u7684\u4e8c\u6b21\u5143\u6559\u4f1a\u4e86\u592a\u591a\u592a\u591a\uff1b \u5f53\u6211\u5931\u843d\u65f6\uff0c\u662f\u7acb\u534e\u594f\u6559\u4f1a\u4e86\u6211\uff1a\u201c\u6ca1\u6709\u4ec0\u4e48\u662f\u6bd4\u751f\u547d\u66f4\u91cd\u8981\u7684\u4e1c\u897f\u3002\u201d\uff1b \u5f53\u6211\u4f24\u5fc3\u65f6\uff0c\u662f\u9762\u7801\u6559\u4f1a\u4e86\u6211\uff1a\u201c\u670b\u53cb\u5c31\u662f\u4e0a\u5929\u7ed9\u4e88\u6211\u4eec\u6700\u73cd\u8d35\u7684\u793c\u7269\u3002\u201d\uff1b \u5f53\u6211\u88ab\u73b0\u5b9e\u7684\u67b7\u9501\u7d27\u7d27\u9760\u62e2\u65f6\uff0c\u662f\u827e\u4f26\u6559\u4f1a\u4e86\u6211\uff1a\u201c\u9e1f\u513f\u662f\u4e3a\u4e86\u7ff1\u7fd4\u5929\u7a7a\u624d\u7834\u58f3\u800c\u51fa\uff0c\u800c\u4e0d\u662f\u4e3a\u4e86\u5728\u5730\u4e0a\u4e11\u964b\u7684\u722c\u884c\u3002\u201d\uff1b \u662f\u67ef\u5357\u6559\u4f1a\u4e86\u6211\uff1a\u201c\u5373\u4f7f\u649e\u7684\u5934\u7834\u8840\u6d41\uff0c\u4e5f\u8981\u8ffd\u6c42\u81ea\u5df1\u60f3\u8981\u7684\u771f\u76f8\u3002\u201d\uff1b \u662f\u516d\u82b1\u6559\u4f1a\u4e86\u6211\uff1a\u201c\u5373\u4f7f\u662f\u4e2d\u4e8c\u75c5\uff0c\u4e5f\u8981\u8ddf\u968f\u81ea\u5df1\u7684\u5fc3\u610f\u53bb\u559c\u6b22\u81ea\u5df1\u559c\u6b22\u7684\u4eba\u3002\u201d\uff1b \u662f\u590f\u76ee\u6559\u4f1a\u4e86\u6211\uff1a\u201c\u5373\u4f7f\u662f\u5996\u602a\uff0c\u4e5f\u6709\u4eba\u7684\u611f\u60c5\uff0c\u5b83\u4eec\u4e5f\u77e5\u4eba\u95f4\u51b7\u6696\u3002\u201d\uff1b \u662f\u4e09\u7b20\u6559\u4f1a\u4e86\u6211\uff1a\u201c\u8fd9\u4e2a\u4e16\u754c\u662f\u6b8b\u9177\u7684\uff0c\u53bb\u6218\u6597\u7684\u8bdd\u6709\u53ef\u80fd\u4f1a\u6b7b\u3002\u4f46\u662f\uff0c\u4e0d\u6218\u6597\u5c31\u8d62\u4e0d\u4e86\u3002\n\n\u6ca1\u6709\u5fa1\u5742\u7f8e\u7434\u90a3\u6837\u7684\u6267\u7740\uff1b \u6ca1\u6709\u6749\u5d0e\u952e\u90a3\u6837\u7684\u52aa\u529b\uff1b \u6ca1\u6709\u661f\u90a3\u6b4c\u5457\u90a3\u6837\u7684\u5b88\u62a4\uff1b \u6ca1\u6709\u590f\u76ee\u8d35\u5fd7\u90a3\u6837\u7684\u6e29\u67d4\uff1b \u6ca1\u6709\u591c\u6597\u90a3\u6837\u7684\u575a\u6301\uff1b \u6ca1\u6709\u9ad8\u5742\u4eac\u4ecb\u90a3\u6837\u7684\u51b3\u5fc3\uff1b \u6ca1\u6709\u963f\u826f\u826f\u6728\u5386\u90a3\u6837\u7684\u5584\u826f\uff1b \u6ca1\u6709\u4e9a\u4e1d\u5a1c\u90a3\u6837\u7684\u5305\u5bb9\uff1b \u6ca1\u6709\u50cf\u9006\u56de\u5341\u516d\u591c\u90a3\u6837\u5f3a\u5927\uff1b \u6ca1\u6709\u590f\u5a1c\u90a3\u6837\u7684\u52c7\u6c14\uff1b \u6ca1\u6709\u50cf\u6842\u6728\u6842\u9a6c\u90a3\u6837\u575a\u5b9a\uff1b \u6ca1\u6709\u5c0f\u9e1f\u6e38\u516d\u82b1\u90a3\u6837\u7684\u5929\u771f\uff1b \u6ca1\u6709\u963f\u865a\u90a3\u6837\u7684\u5410\u69fd\u5f79\uff1b \u6ca1\u6709\u4e09\u7b20\u00b7\u963f\u514b\u66fc\u90a3\u6837\u7684\u4fe1\u5ff5\uff1b \u6ca1\u6709\u50cf\u6298\u6728\u5949\u592a\u90ce\u90a3\u6837\u6539\u53d8\uff1b \u6ca1\u6709\u9ed1\u5ca9\u90a3\u6837\u7684\u52c7\u6562\uff1b \u6ca1\u6709\u5229\u5a01\u5c14\u90a3\u6837\u7684\u51b7\u9759\uff1b \u6ca1\u6709\u9762\u7801\u90a3\u6837\u7684\u7eaf\u771f\uff1b \u6211\u552f\u4e00\u80fd\u505a\u5230\u7684\uff0c\u4e5f\u53ea\u6709\u5b64\u72ec\u4e86\u5427\u2026\u2026\n\n\u4e1c\u4eac\u98df\u5c38\u9b3c\uff1a\u7edd\u671b\u662f\u865a\u5047\u7684\uff0c\u4f46\u5e0c\u671b\u4ea6\u662f\u5982\u6b64\u3002 \u79d2\u901f\u4e94\u5398\u7c73\uff1a\u201c\u5450\uff0c\u4f60\u77e5\u9053\u5417\uff1f\u542c\u8bf4\u6a31\u82b1\u98d8\u843d\u7684\u901f\u5ea6\u662f\u79d2\u901f\u4e94\u5398\u7c73\u54e6\u3002\" 13\u5e74\u91cc\uff0c\u4e00\u4e2a\u6ca1\u6709\u8ddd\u79bb\u7684\u4e24\u9897\u5fc3\u8d70\u5230\u4e86\u4e16\u754c\u4e0a\u6700\u8fdc\u7684\u8ddd\u79bb\u3002 \u706b\u5f71\u5fcd\u8005\uff1a\u771f\u6b63\u91cd\u8981\u7684\u4e1c\u897f\uff0c\u5c31\u7b97\u5931\u53bb\u81ea\u5df1\u73cd\u8d35\u7684\u751f\u547d\uff0c\u4e5f\u8981\u7528\u53cc\u624b\u4fdd\u62a4\u5230\u5e95\u3002 \u672a\u95fb\u82b1\u540d\uff1a\u6211\u4eec\u603b\u662f\u5728\u6ce8\u610f\u9519\u8fc7\u592a\u591a\uff0c\u5374\u4e0d\u6ce8\u610f\u81ea\u5df1\u62e5\u6709\u591a\u5c11\n\n\u770b\u4e86\u300a\u67d0\u79d1\u5b66\u7684\u8d85\u7535\u78c1\u70ae\u300b\u4f60\u4e0d\u80fd\u4e0d\u77e5\u9053\u70ae\u59d0\uff1b \u770b\u4e86\u300a\u8f7b\u97f3\u5c11\u5973\u300b\u4f60\u4e0d\u80fd\u4e0d\u77e5\u9053\u4eac\u963f\u5c3c\uff1b \u770b\u4e86\u300a\u5200\u5251\u795e\u57df\u300b\u4f60\u4e0d\u80fd\u4e0d\u77e5\u9053SAO\uff1b \u770b\u4e86\u300a\u4e1c\u4eac\u98df\u5c38\u9b3c\u300b\u4f60\u4e0d\u80fd\u4e0d\u77e5\u9053\u55b0\u79cd\uff1b \u770b\u4e86\u300a\u9b54\u6cd5\u5c11\u5973\u5c0f\u5706\u300b\u4f60\u4e0d\u80fd\u4e0d\u77e5\u9053\u5706\u795e\uff1b \u770b\u4e86\u300a\u4e2d\u4e8c\u75c5\u4e5f\u8981\u8c08\u604b\u7231\u300b\u4f60\u4e0d\u80fd\u4e0d\u77e5\u9053\u4e2d\u4e8c\u75c5\uff1b \u770b\u4e86\u300a\u707c\u773c\u7684\u590f\u5a1c\u300b\u4f60\u4e0d\u80fd\u4e0d\u77e5\u9053\u9489\u5bab\u7406\u60e0\uff1b \u770b\u4e86\u300a\u8fdb\u51fb\u7684\u5de8\u4eba\u300b\u4f60\u4e0d\u80fd\u4e0d\u77e5\u9053\u5de8\u4eba\uff1b \u770b\u4e86\u300aLove Live!\u300b\u4f60\u4e0d\u80fd\u4e0d\u77e5\u9053\u03bc's\uff1b \u770b\u4e86\u4eac\u90fd\u52a8\u753b\u4f60\u4e0d\u80fd\u4e0d\u77e5\u9053\u4eac\u90fd\u8138\uff1b \u770b\u4e86\u52a8\u6f2b\u4f60\u4e0d\u80fd\u4e0d\u77e5\u9053\u4e8c\u6b21\u5143\u3002\n\n\n\u4e2d\u4e8c\u75c5\u7684\u604b\u7231\u6709\u4e86\u7ed3\u5c40\uff0c\u9752\u6625\u7269\u8bed\u5df2\u7ecf\u5b8c\u7ed3\uff0c\u8def\u4eba\u5973\u4e3b\u5f97\u5230\u5706\u6ee1\uff0c\u4f60\u7684\u540d\u5b57\u5df2\u7ecf\u77e5\u6653\uff0c\u58f0\u4e4b\u5f62\u7684\u604b\u7231\u4e3a\u4e86\u4f60\u5b66\u4f1a\u4e86\u624b\u8bed\uff0c\u60f3\u5403\u4f60\u7684\u80f0\u810f\u8ba9\u6211\u6df1\u8868\u9057\u61be\uff0c\u590f\u6d1b\u7279\u4e3a\u4e86\u4f60\u6211\u5b81\u613f\u5fd8\u8bb0\u4e00\u5207\uff0c\u5b66\u751f\u4f1a\u7684\u6545\u4e8b\u4ecd\u5728\u7ee7\u7eed\uff0c\u7f8e\u597d\u7684\u4e16\u754c\u8fd8\u5728\u5192\u9669\uff0c\u8f7b\u97f3\u90e8\u7684\u97f3\u4e50\u8fd8\u5728\u7ee7\u7eed\uff0c\u4f3d\u767e\u7483\u7684\u5815\u843d\u8fd8\u5728\u7ee7\u7eed\uff0c\u590f\u5c14\u7684\u590d\u4ec7\u8fd8\u672a\u7ed3\u675f\uff0c\u54e5\u7279\u841d\u8389\u7684\u63a8\u7406\u4ecd\u672a\u7ed3\u675f\uff0c\u90a3\u6735\u82b1\u7684\u540d\u5b57\u6211\u4eec\u4ecd\u672a\u77e5\u6653\uff0c\u4f46\u5f53\u5e74\u7684\u4e66\u7c4d\u4ecd\u5728\u6536\u96c6\uff0c\u6a31\u82b1\u5e84\u7684\u6a31\u82b1\u6811\u4f60\u8fd8\u8bb0\u5f97\u5417\uff1f\u5408\u6cb3\u5e84\u7684\u604b\u7231\u4ecd\u5728\u8ffd\u5bfb\uff0c\u9f99\u4e0e\u864e\u8d70\u5230\u4e86\u4e00\u8d77\uff0c\u56e2\u5b50\u5927\u5bb6\u65cf\u7ec8\u4e8e\u5f97\u5230\u7f8e\u597d\uff0c\u9b54\u5973\u7684\u65c5\u884c\u8fd8\u6ca1\u6709\u8fbe\u5230\u7ec8\u70b9\uff0c\u5e73\u51e1\u804c\u4e1a\u7ec8\u5c06\u8fbe\u5230\u76ee\u6807\uff0c\u90a3\u70b9\u5154\u5496\u5561\u4f9d\u65e7\u662f\u90a3\u4e48\u7f8e\u5473\uff0c\u91ce\u826f\u795e\u7684\u795e\u793e\u8fd8\u5728\u5efa\u8bbe\uff0cGJ\u90e8\u5f97\u7ed3\u5c40\u5927\u5b66\u7ee7\u7eed\uff0c\u78a7\u84dd\u4e4b\u6d77\u4e0e\u4e4c\u9f99\u8336\uff0c\u90a3\u4e09\u59d0\u59b9\u4ecd\u7136\u6b22\u4e50\uff0c\u51b0\u83d3\u7684\u604b\u7231\u4ee5\u5230\u7ed3\u5c40\u865a\u6784\u7684\u5c3d\u5934\u5230\u5e95\u662f\u4ec0\u4e48\u5462\uff1f\u9b54\u6cd5\u4f7f\u7684\u65b0\u5a18\u5f97\u5230\u62ef\u6551\u4e86\u5417\uff1f\u672b\u65e5\u6709\u65f6\u95f4\u5417\uff1f\u7a7a\u767d\u7684\u6e38\u620f\u8fd8\u5728\u7ee7\u7eed\uff0c\u55b5\u5e15\u65af\u7684\u65e5\u5e38\u7ee7\u7eed\u884c\u8d70\uff0c\u5f02\u4e16\u754c\u7684\u98df\u5802\u8fd8\u662f\u4eba\u6ee1\u4e3a\u60a3\uff0c\u90a3\u4e2a\u5c45\u9152\u4f9d\u7136\u6b22\u4e50\u8fde\u5929\uff0c\u90a3\u4e2a\u56db\u6708\u8c0e\u8a00\u6709\u70b9\u591a\uff0c\u8bb0\u5fc6\u771f\u7684\u53ef\u4ee5\u53ef\u5851\u5417\uff1f\u90a3\u4e2a3\u6708\u72b9\u5982\u5bb6\u4eba\u822c\u7684\u6e29\u67d4\uff0c\u6e29\u6696\u7684\u590f\u76ee\u4ecd\u5728\u6551\u52a9\u5996\u602a\uff0c\u53ea\u8981\u8d1d\u5c14\u54f2\u5e03\u5e03\u5927\u5c0f\u59d0\u559c\u6b22\u5c31\u597d\uff0c\u90a3\u4e2a\u4eba\u4e0d\u53ef\u80fd\u662f\u5973\u751f\uff0c\u90a3\u4e1c\u65b9\u7684\u6545\u4e8b\u8fd8\u6ca1\u6709\u5b8c\uff0c\u5730\u72f1\u5c11\u5973\u7684\u6253\u5de5\u751f\u6d3b\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u6809\u540d\u5b89\u5a1c\u7684\u7f8e\u4e3d\u7ea2\u8272\u5728\u4e5f\u770b\u4e0d\u5230\u4e86\uff0c\u4f4e\u97f3\u53f7\u7684\u58f0\u97f3\u5df2\u7ecf\u542c\u5230\uff0c\u5742\u672c\u7684\u82f1\u59ff\u4f9d\u65e7\u6d41\u4f20\uff0c\u4f7f\u5f92\u4e0e\u5c11\u5e74\u7684\u6218\u6597\u7ec8\u5c06\u7ed3\u675f\uff0c\u8f6c\u52a8\u7684\u56db\u9a71\u6c38\u4e0d\u505c\u6b62\uff0c\u5723\u6597\u58eb\u7684\u610f\u5fd7\u6c38\u8fdc\u95ea\u8000\u5728\u661f\u7a7a\uff0c\u4e00\u5207\u4e00\u5c31\u4ece\u96f6\u5f00\u59cb\uff0c\u90a3\u7247\u82b1\u56ed\u4f9d\u65e7\u6c38\u6052\uff0c\u9ad8\u5927\u7684\u5de8\u4eba\u4f9d\u65e7\u8fdb\u51fb\uff0cJOJO\u7684\u5192\u9669\u8fd8\u672a\u505c\u6b62\u7b28\u86cb\u53ec\u5524\u517d\u7684\u6d4b\u9a8c\u5df2\u7ecf\u901a\u8fc7\uff0c\u56db\u6708\u5341\u65e5\u7684\u7ea6\u4f1a\u5df2\u7ecf\u7ed3\u675f\uff0c\u7231\u60c5\u662f\u5426\u8fd8\u662f\u53ef\u4ee5\u4e94\u7b49\u5206\uff0c\u98ce\u5e73\u6d6a\u9759\u7684\u660e\u5929\u4ecd\u672a\u5230\u6765\uff0c\u57c3\u7f57\u8292\u963f\u8001\u5e08\u5df2\u7ecf\u8d70\u51fa\u623f\u95f4\uff0c\u5de5\u7a0b\u5e08\u4f9d\u65e7\u7206\u809d\uff0c\u59b9\u6296\u9f99\u7684\u6545\u4e8b\u4ecd\u5728\u7ee7\u7eed\uff0c\u661f\u90a3\u4e00\u5934\u7684\u68a6\u5df2\u7ecf\u5f00\u59cb\uff0c\u8def\u54e5\u4ecd\u5728\u64cd\u63a7\u6559\u5ba4\uff0c\u4e1c\u5350\u7684\u68a6\u60f3\u8fd8\u672a\u5b9e\u73b0\uff0c\u5929\u4f7f\u548c\u6076\u9b54\u8fd8\u5728\u9003\u4ea1\uff0c\u5154\u5973\u90ce\u5b66\u59d0\u5df2\u7ecf\u544a\u767d\uff0c\u795e\u57df\u7684\u751f\u6b7b\u6e38\u620f\u8fd8\u672a\u7ed3\u675f\uff0c\u5728\u68a6\u5e7b\u5c9b\u7ec8\u4f1a\u76f8\u9047\uff0c\u6b64\u82b1\u4ead\u4e00\u76f4\u606d\u5019\u4f60\u7684\u5230\u6765\uff0c\u7f18\u5206\u7684\u5929\u7a7a\u91cd\u65b0\u7efd\u653e\u5149\u8292\uff0c\u4fa6\u63a2\u867d\u6b7b\u4f46\u610f\u5fd7\u6c38\u5b58\u5728\u77f3\u4e4b\u6d77\u4e0a\u4e0e\u547d\u8fd0\u5bf9\u51b3\u7684\u6545\u4e8b\u5373\u5c06\u91cd\u8ff0\uff0c\u7406\u79d1\u751f\u95f4\u7684\u604b\u7231\u5b9e\u9a8c\u8fd8\u5c06\u7ee7\u7eed\uff0c\u8475\u5988\u4e0e\u53cb\u5d0e\u7684\u6218\u6597\u8fd8\u672a\u7ed3\u675f\u9e23\u4eba\u7684\u6545\u4e8b\u4ecd\u5728\u7ee7\u7eed\uff0c\u7eaf\u767d\u7684\u91ce\u517d\u4f1a\u521b\u9020\u53ef\u80fd\uff0c\u5341\u5c81\u5c11\u5e74\u7684\u65c5\u9014\u4e5f\u4e0d\u4f1a\u7ec8\u7ed3\u2026\u4f60\u95ee\u6211\u8fd9\u662f\u4ec0\u4e48\u6545\u4e8b\uff0c\u8fd9\uff0c\u53eb\u505a\u4e8c\u6b21\u5143\n\n\n\u56e0\u4e3a\u5fc3\uff0c\u770b\u4f60\u60f3\u770b\u5230\u7684\n\n\u604b\u7231\uff0c\u70ed\u8840\uff0c\u5192\u9669\uff0c\u5947\u5e7b\uff0c\u53d8\u8eab\uff0c\u673a\u7532\uff0c\u6218\u6597\uff0c\u6821\u56ed\n\n\u56e0\u4e3a\u7231\uff0c\u559c\u6b22\u4f60\u559c\u6b22\u7684\n\n\u5fa1\u59d0\uff0c\u841d\u8389\uff0c\u6cbb\u6108\uff0c\u75c5\u5a07/\u6696\u7537\uff0c\u603b\u88c1\uff0c\u5c11\u5e74\uff0c\u65e5\u5e38\n\n\u56e0\u4e3a\uff0c\u73b0\u5b9e\n\n\u4f60\u6240\u89c1\u5230\u7684\u73b0\u5b9e\u5c31\u662f\u73b0\u5b9e\uff0c\u6ca1\u6709\u4ec0\u4e48\u5176\u4ed6\u7684\u5f02\u60f3\u5929\u5f00\u7684\u4e00\u5207\u3002\n\n\u56e0\u4e3a\uff0c\u865a\u5e7b\n\n\u4f60\u6240\u89c1\u5230\u7684\u4f5c\u54c1\uff0c\u8bde\u751f\u4e8e\u4f5c\u8005\u6700\u5f00\u59cb\u7684\u601d\u60f3\uff0c\u90a3\u662f\u6c9f\u901a\u5fc3\u4e8e\u5fc3\u4e4b\u95f4\u7684\u4ecb\u8d28\uff0c\u7edd\u975e\u8a00\u8bed\u6240\u80fd\u63cf\u7ed8\uff0c\u901a\u8fc7\u77ed\u77ed\u7684\u4f5c\u54c1\uff0c\u5728\u4f60\u5fc3\u91cc\u6784\u5efa\u4e00\u4e2a\u7c7b\u4f3c\u7684\u601d\u60f3\uff08\u6216\u8005\u8bf4\u610f\u8bc6\u6a21\u578b\uff09\uff0c\u518d\u52a0\u4e0a\u4f60\u81ea\u5df1\u7684\u6545\u4e8b\u3002\n\n\u56e0\u4e3a\uff0c\u8f7b\u677e\n\n\u4f60\u53ea\u9700\u8981\u6253\u5f00\u7535\u5b50\u8bbe\u5907\uff0c\u968f\u65f6\u968f\u5730\uff0c\u5c31\u80fd\u53bb\u6b23\u8d4f\u8fd9\u4e00\u5207\uff0c\u5c3d\u7ba1\u90a3\u4e0d\u662f\u5c5e\u4e8e\u4f60\u7684\u7cbe\u5f69\u3002\n\n\u56e0\u4e3a\uff0c\u56f0\u96be\n\n\u5f53\u4f60\u53d7\u632b\uff0c\u6ca1\u4eba\u5173\u5fc3\u4f60\uff0c\u65e0\u8bba\u662f\u4e0d\u5728\u4e4e\uff0c\u8fd8\u662f\u6ca1\u53d1\u73b0\u3002\u6216\u662f\u4f60\u5047\u88c5\u5feb\u4e50\uff0c\u4f46\u6709\u7684\u65f6\u5019\u2014\u2014\u4f60\u5c31\u662f\u5b64\u72ec\u7684\uff0c\u4f60\u60f3\u8d77\u6765\u4e86\uff0c\u6211\u8fd8\u6709\u53e6\u4e00\u4e2a\u5730\u65b9\u53ef\u4ee5\u53bb\uff0c\u5c3d\u7ba1\u6ca1\u6709\u8089\u4f53\u7684\u6e29\u6696\uff0c\u53ef\u90a3\u91cc\u662f\u601d\u60f3\u7684\u5723\u6bbf\uff0c\u6070\u597d\u9047\u4e0a\u5b64\u72ec\u7684\u4f60\u3002\n\n\u56e0\u4e3a\uff0c\u5feb\u4e50\n\n\u770b\u756a\u4e5f\u597d\uff0c\u6e38\u620f\u4e5f\u7f62\uff0c\u6216\u8005\u5c31\u662f\u505a\u505a\u68a6\u3002\u5b83\u80fd\u5e26\u6765\u5feb\u4e50\n\n\u56e0\u4e3a\uff0c\u4f24\u5fc3\n\n\u5b83\u4e0d\u4ec5\u662f\u4e00\u4e2a\u5e7b\u60f3\u7684\u4e4c\u6258\u90a6\uff0c\u5b83\u8fd8\u53ef\u4ee5\u8ba9\u4f60\u8ba4\u8bc6\u771f\u5b9e\u7684\u4eba\u5fc3\uff0c\u4eba\u6027\u3002\u4eba\u60c5\u51b7\u6696\uff0c\u77ed\u77ed\u4e00\u751f\uff0c\u6216\u8fd9\u6837\u90a3\u6837\u7684\u9057\u61be\u4e0e\u9519\u8fc7\uff0c\u8ba9\u4f60\u6e7f\u4e86\u773c\u7736\uff0c\u4e3a\u4e4b\u60cb\u60dc\u3002\u5173\u6389\u5c4f\u5e55\uff0c\u8111\u5b50\u91cc\u7559\u4e0b\u7684\uff0c\u662f\u81ea\u5df1\u7684\u4f53\u4f1a\u3002\u8f6c\u8eab\u9762\u5bf9\uff0c\u6216\u8bb8\u5df2\u7ecf\u6709\u6240\u4e0d\u540c\u3002\n\n\u56e0\u4e3a\uff0c\u6211\u5c31\u662f\u6211\n\n\u6211\u559c\u6b22\u8fd9\u4e2a\uff0c\u6211\u60f3\u770bta\u5feb\u4e50\uff0c\u6211\u5e0c\u671bta\u4eec\u80fd\u4ee3\u66ff\u6211\u53bb\u5f80\u7406\u60f3\u7684\u5f7c\u5cb8\uff0c\u8ba9\u6211\u770b\u770b\u90a3\u76f4\u51fb\u5fc3\u7075\u7684\u7f8e\u597d\u4e0e\u5e78\u798f\u3002\n\n\u6211\u559c\u6b22\u4e8c\u6b21\u5143\uff0c\u5e26\u6211\u53bb\u968f\u7740\u521b\u4f5c\u8005\u7684\u6b65\u4f10\uff0c\u89c1\u8bc6\u6211\u672a\u66fe\u9884\u89c1\u7684\u4e16\u754c\uff0c\u90a3\u91cc\u9762\u6709\u6545\u4e8b\uff0c\u6709\u4eba\u751f\uff0c\u6709\u6211\u7684\u5e78\u798f\uff0c\u5373\u4f7f\u9694\u7740\u5c4f\u5e55\uff0c\u4f46\u662f\u770b\u89c1\u5979\uff0c\u6211\u5c31\u5f88\u5f00\u5fc3\u4e86\u3002\n\n\u6211\u559c\u6b22\u90a3\u4e9b\u548c\u6211\u4e00\u6837\u7684\u4eba\uff0c\u652f\u6301\u4f5c\u54c1\u3002\n\n``\u4f60\u6240\u70ed\u7231\u7684 \u5c31\u662f\u4f60\u7684\u751f\u6d3b \uff01``", "link": "/posts/er-ci-yuan-xiang-guan-de-suo-sui/", "tags": [], "categories": []}, {"title": "\u590d\u8d5b\u65f6\u8981\u8bb0\u4f4f\u768430\u53e5\u8bdd", "content": "<https://www.luogu.com.cn/blog/LinearExpectation/method-to-get-score-in-a-easy-way>\n<https://www.luogu.com.cn/blog/zyf2004/fu-sai-shi-yao-ji-zhu-di-30-gou-hua>\n\n1.\u6bd4\u8d5b\u524d\u4e00\u5929\u665a\u4e0a\u8bf7\u51c6\u5907\u597d\u4f60\u7684\u5404\u79cd\u8bc1\u4ef6\uff0c\u4e8b\u5148\u67e5\u597d\u53bb\u5f80\u8003\u573a\u7684\u8def\u7ebf\n1.\u6bd4\u8d5b\u4e4b\u524d\u8bf7\u5148\u8c03\u6574\u4f60\u7684\u5c4f\u5e55\u5206\u8fa8\u7387\u5230\u4f60\u559c\u6b22\u7684\u5927\u5c0f\n1.\u6bd4\u8d5b\u4e4b\u524d\u8bf7\u628a\u7f16\u8bd1\u5668\u7684\u5b57\u4f53\u8c03\u4e3a\u4f60\u5e73\u65f6\u60ef\u7528\u7684\u5b57\u4f53\uff0c\u5c24\u5176\u662f\u6ce8\u610f\u8fd9\u79cd\u5b57\u4f53\u4e2d\u7684\u9017\u53f7\uff0c\u70b9\uff0c1\uff0cl\u8fd9\u79cd\u6613\u6df7\u6dc6\u7684\u5b57\u662f\u4e0d\u662f\u533a\u5206\u660e\u663e\n1.\u5728\u4e0d\u5f71\u54cd\u89c6\u91ce\u7684\u60c5\u51b5\u4e0b\uff0c\u8bf7\u5c06\u5b57\u53f7\u5c3d\u53ef\u80fd\u8c03\u5927\uff0c\u65b9\u4fbf\u67e5\u9519\n1.\u8bf7\u5c06\u9898\u76ee\u901a\u8bfb\u5b8c\u4ee5\u540e\uff0c\u518d\u5f00\u59cb\u6df1\u5165\u601d\u8003\u4f60\u8ba4\u4e3a\u6700\u5bb9\u6613\u7684\u4e00\u9053\u9898\n1.\u5373\u4f7f\u8fd9\u9053\u9898\u518d\u5bb9\u6613\uff0c\u4e5f\u4e0d\u8981\u7740\u6025\u5199\u4ee3\u7801\uff0c\u8bf7\u5148\u660e\u786e\u81ea\u5df1\u6bcf\u4e00\u6b65\u8981\u5e72\u4ec0\u4e48\u540e\uff0c\u518d\u5f00\u59cb\u5199\uff0c\u8f7b\u654c\u4f1a\u662f\u4f60\u6700\u5927\u7684\u9519\u8bef\n1.\u5373\u4f7f\u8fd9\u9053\u9898\u770b\u8d77\u6765\u518d\u6ca1\u6cd5\u505a\uff0c\u4e5f\u4e0d\u8981\u63d0\u65e9\u653e\u5f03\uff0c\u8fd9\u4e2a\u65f6\u5019\u7eb8\u548c\u7b14\u4f1a\u662f\u4f60\u6700\u597d\u7684\u670b\u53cb\uff0c\u81ea\u5df1\u5c1d\u8bd5\u51e0\u4e2a\u4f8b\u5b50\uff0c\u4e5f\u8bb8\u4f60\u5c31\u4f1a\u627e\u5230\u7b54\u6848\n1.\u8bf7\u4e00\u5b9a\u5148\u660e\u786e\u81ea\u5df1\u8981\u5e72\u4ec0\u4e48\u4e4b\u540e\u518d\u5199\u7a0b\u5e8f\uff0c\u4e0d\u8981\u8d70\u4e00\u6b65\u60f3\u4e00\u6b65\n1.\u5982\u679c\u8fd9\u662f\u4e00\u9053\u52a8\u6001\u89c4\u5212\u9898\uff0c\u8bf7\u5148\u628a\u8f6c\u79fb\u65b9\u7a0b\u5199\u5728\u7eb8\u4e0a\u518d\u7f16\u7a0b\n1.\u6d89\u53ca\u5230\u8fb9\u754c\u5904\u7406\u3001\u52a0\u4e00\u51cf\u4e00\u4e4b\u7c7b\u7684\u95ee\u9898\uff0c\u8bf7\u5728\u7eb8\u4e0a\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u6807\u4e0a\u4e0b\u6807\u4ee5\u540e\uff0c\u5728\u7f16\u7a0b\u65f6\u53c2\u7167\u7eb8\u4e0a\u7684\u4e0b\u6807\u5199\n1.\u5982\u679c\u601d\u800330\u5206\u949f\u4ecd\u4e00\u5934\u96fe\u6c34\uff0c\u6ca1\u6709\u53ef\u4ee5\u5b9e\u73b0\u7684\u7b97\u6cd5\uff0c\u8bf7\u4f60\u679c\u65ad\u5c4f\u853d\u6389100%\u7684\u90a3\u4e00\u680f\u6570\u636e\uff0c\u5f00\u59cb\u519960%\uff0c50%\u4e43\u81f330%\u7684\u7b97\u6cd5\u2014\u2014\u5728 NOIP CSP\u91cc\u9762\uff0c30\u5206\u7edd\u4e0d\u662f\u5c0f\u6570\u76ee\n1.\u51e0\u4e2a\u5e38\u7528\u7684\u590d\u6742\u5ea6\u53c2\u8003\uff1a100\u4ee5\u4e0b\u2014\u2014\u53ef\u80fd\u662f\u641c\u7d22\uff1b100~500\u2014\u2014N^3\uff0c1000~5000\u2014\u2014N^2\uff0c100000~500000\u2014\u2014NlogN\uff0c500000\u4ee5\u4e0a\u2014\u2014N\u62161\n1.\u5982\u679c\u4f60\u53d1\u73b0\u4f60\u65c1\u8fb9\u7684\u4eba\u5199\u5f97\u5f88\u5feb\uff0c\u8bf7\u4f60\u653e\u5fc3\uff0c\u4ed6\u7684\u7b97\u6cd5\u5341\u6709\u516b\u4e5d\u662f\u9519\u7684\n1.\u867d\u71361s+128MB\u5185\u5b58 (\u8fd9\u662f\u4ee5\u524d\u7684\u4e86\uff0c\u73b0\u5728\u5e94\u8be5\u662f 1s + 256MB) \u662f\u6807\u51c6\u914d\u7f6e\uff0c\u4e0d\u8fc7\u4e5f\u4e0d\u662f\u6bcf\u9053\u9898\u90fd\u662f\u8fd9\u6837\u7684\uff0c\u8fd8\u662f\u8bf7\u8ba4\u771f\u9605\u8bfb\u8bd5\u5377\u9996\u9875\u7684\u8bd5\u9898\u8bf4\u660e\n1.\u8ba1\u7b97\u5185\u5b58\u7684\u65b9\u6cd5\uff1a\u6570\u7ec4\u5927\u5c0f*\u7c7b\u578b\u957f\u5ea6/1000 / 1000=\u6240\u5360\u5185\u5b58MB\u6570\uff0cint(Pascal:longint)\u7c7b\u578b\u957f\u5ea6\u662f4, long long (Pascal: int64) =8\n1.\u8bb0\u4e0d\u4f4f\u7684\u8bdd\uff0c\u8bb0\u4f4fint (Pascal: longint) \u578b\u6570\u7ec4\u5728128MB\u5185\u5b58\u4e0b\u6700\u5927\u5f00\u52302500 0000\u662f\u6bd4\u8f83\u4fdd\u9669\u7684\uff08\u5360100MB\u5185\u5b58\uff09\n1.\u5199\u5b8c\u7a0b\u5e8f\u4e4b\u540e\uff0c\u8bf7\u4e00\u5b9a\u4e0d\u8981\u5fd9\u7740\u7f16\u8bd1\uff0c\u8bf7\u4e00\u5b9a\u8981\u5c06\u4f60\u7684\u4ee3\u7801\u4ece\u5934\u5230\u5c3e\u901a\u8bfb\u4e00\u904d\uff0c\u4e5f\u5c31\u662f\u9759\u6001\u67e5\u9519\uff0c\u8fd9\u662f\u6574\u4e2a\u7f16\u7a0b\u8fc7\u7a0b\u4e2d\u6700\u91cd\u8981\u7684\u6b65\u9aa4\uff0c\u6709\u7684\u53d8\u91cf\u91cd\u590d\u8c03\u7528\u95ee\u9898\u8c03\u8bd5\u7684\u8bdd\uff0c\u4e00\u4e2a\u5c0f\u65f6\u4e5f\u770b\u4e0d\u51fa\u6765\uff0c\u9759\u6001\u67e5\u9519\u53ef\u4ee5\u4e00\u4e0b\u6307\u51fa\u9519\u8bef\n1.\u9759\u6001\u67e5\u9519\u8bf7\u6ce8\u610f\u4ee5\u4e0b\u65b9\u9762\uff1a\n    1.\u662f\u5426\u5199\u4e0a\u4e86using namespace std\uff1f (\u8fd9\u662fC++\u7684\uff0cPascal\u5c31\u4e0d\u7528\u4e86)\n    1.\u6570\u7ec4\u5f00\u5f97\u662f\u5426\u591f\u5927\uff1f\n    1.\u53d8\u91cf\u7c7b\u578b\u662f\u5426\u6b63\u786e\uff1f\n    1.memset\u65f6\uff0c\u6240\u586b\u7684sizeof\uff08XX\uff09\u7684XX\u662f\u4e0d\u662f\u5339\u914d\uff1f\u5927\u5c0f\u662f\u4e0d\u662f\u6b63\u786e\uff1f (Pascal \u662f fillchar)\n    1.\u5916\u5c42\u5faa\u73af\u4e0e\u5185\u5c42\u5faa\u73af\u7684i\uff0cj\u662f\u4e0d\u662f\u6df7\u7528\u4e86\uff1f\n    1.\u5faa\u73af\u4e4b\u524d\uff0ci\uff0cj\u662f\u5426\u5b9a\u4e49\u4e86\uff1f\n    1.\u8f93\u5165\u6570\u636e\u90fd\u8f93\u5165\u4e86\u5417\uff1f\n    1.\u8fd9\u4e2a\u7a0b\u5e8f\u662f\u5728\u6267\u884c\u4f60\u60f3\u8ba9\u5b83\u6267\u884c\u7684\u6b65\u9aa4\u5417\uff1f\n1.\u901a\u8fc7\u6837\u4f8b\u540e\uff0c\u8bf7\u4f60\u4e00\u5b9a\u4e0d\u8981\u653e\u677e\u8b66\u60d5\uff0c\u56e0\u4e3a\u6837\u4f8b\u5e76\u4e0d\u80fd\u8986\u76d6\u6240\u6709\u7684\u60c5\u51b5\uff0c\u8bf7\u81ea\u5df1\u8bbe\u8ba1\u51e0\u7ec4\u6570\u636e\uff0c\u4e89\u53d6\u5361\u6b7b\u4f60\u7684\u7a0b\u5e8f\n1.\u5982\u679c\u51fa\u73b0\u95ee\u9898\uff0c\u8bf7\u4f60\u8c03\u8bd5\u4f60\u7684\u7a0b\u5e8f\uff0c\u8bf7\u4e00\u5b9a\u8981\u5206\u6a21\u5757\u8c03\u8bd5\uff0c\u4e0d\u8981\u4ece\u5934\u8ddf\u5230\u5c3e\n1.\u5982\u679c\u4f60\u5df2\u7ecf\u8bbe\u8ba1\u4e0d\u51fa\u80fd\u5361\u4f4f\u4f60\u7684\u7a0b\u5e8f\u7684\u6570\u636e\uff0c\u606d\u559c\u4f60\u53ef\u4ee5\u505a\u4e0b\u4e00\u9898\u4e86\n1.\u5982\u679c\u4f60\u7528\u7684\u662fwindows\uff0c\u8bf7\u4f60\u6ce8\u610f\u628asystem\uff08\u201cpause\u201d\uff09\u6ce8\u91ca\u6389 ( \u9488\u5bf9C/C++\uff0cPascal \u4e0d\u5b58\u5728 )\n1.\u4e3a\u4e86\u4e07\u65e0\u4e00\u5931\uff0c\u8bf7\u4f60\u7528return 0\u7ed3\u675f\u4f60\u7684\u7a0b\u5e8f ( \u540c\u6837 \uff0c \u9488\u5bf9 C/C++ \uff0c\u5efa\u8bae\u662f\u5fc5\u987b\u52a0\u4e0a )\n1.\u5728\u5185\u5b58\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u5f00\u666e\u901a\u961f\u5217\u5c31\u4e0d\u8981\u7528\u5faa\u73af\u961f\u5217\uff0c\u80fd\u5f00\u4e0b\u666e\u901a\u6570\u7ec4\u5c31\u4e0d\u8981\u7528\u6eda\u52a8\u6570\u7ec4\n1.\u5728\u65f6\u95f4\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u66b4\u529b\u5c31\u66b4\u529b\uff0c\u9ad8\u7cbe\u5ea6\u80fd\u4e0d\u538b\u4f4d\u5c31\u4e0d\u538b\u4f4d\uff0c\u4f18\u5316\u4e0d\u9700\u8981\u7684\u5c31\u4e0d\u8981\n1.\u603b\u4e4b\uff0c\u5728\u4e0d\u8d85\u9650\u5236\u7684\u524d\u63d0\u4e0b\uff0c\u80fd\u4e0d\u4f18\u5316\u5c31\u4e0d\u4f18\u5316\uff0c\u4ee5\u51cf\u5c11\u4ee3\u7801\u91cf\u548c\u51fa\u9519\u6982\u7387\u4e3a\u7b2c\u4e00\u539f\u5219\n1.\u5f53\u6bd4\u8d5b\u8fd8\u5269\u4e0b5~15\u5206\u949f\u7684\u65f6\u5019\uff0c\u8bf7\u4e0d\u8981\u518d\u6539\u52a8\u4f60\u7684\u7a0b\u5e8f\uff0c\u5373\u4f7f\u4f60\u6000\u7591\u5b83\u5bf9\u4f60\u7684\u4e00\u4e2a\u8f93\u5165\u7ed9\u51fa\u4e86\u9519\u8bef\u7b54\u6848\uff0c\u56e0\u4e3a\u4f60\u81ea\u5df1\u7b97\u51fa\u7684\u7ed3\u679c\u4e5f\u6709\u53ef\u80fd\u662f\u9519\u7684\n1.\u8fd9\u4e2a\u65f6\u5019\u8bf7\u4f60\u68c0\u67e5\u662f\u5426\u6ce8\u91ca\u6389\u4e86\u8be5\u6ce8\u91ca\u6389\u7684\u4e1c\u897f\uff0c\u6587\u4ef6\u540d\u662f\u5426\u5199\u5bf9\uff0c\u6587\u4ef6\u5939\u662f\u5426\u5efa\u5bf9\uff0c\u8bf7\u4e00\u5b9a\u53cd\u590d\u68c0\u67e5\uff01\n1.\u4eca\u5e74\u8d5b\u5236\u66f4\u6539\uff0c\u6ca1\u6709\u4eba\u77e5\u9053\u7a76\u7adf\u4f1a\u53d8\u6210\u4ec0\u4e48\u6837\uff0c\u6240\u4ee5\uff0c\u4e0e\u5176\u77bb\u524d\u987e\u540e\uff0c\u4e0d\u5982\u96c6\u4e2d\u7cbe\u529b\u505a\u51fa\u4f60\u773c\u524d\u7684\u9898\u76ee\u6765\u7684\u5b9e\u9645\n1.\u8bf7\u8bb0\u4f4f\uff0cNOIP CSP \u4e0d\u6015\u66b4\u529b\uff0c\u6015\u778e\u7b97\uff0c\u4e0d\u6015\u4e0d\u4f1a\uff0c\u6015\u4e0d\u6562", "link": "/posts/fu-sai-shi-yao-ji-zhu-de-30-ju-hua/", "tags": [], "categories": []}, {"title": "\u5355\u6e90\u6700\u77ed\u8def\u5f84", "content": "\n```cpp\n#include <bits/stdc++.h>\n#define N 100100\n#define M 500000\n#define il inline\n#define in(a) a = read()\n#define cl(a, b) memset(a, b, sizeof(a))\n#define INF 0x7fffffff\n#define MOD 10000007\ntypedef long long ll;\ntypedef unsigned long long ull;\nusing namespace std;\n\nil int read()\n{\n    char ch = getchar();\n    int v = 1, x = 0;\n    while (ch < '0' || ch > '9')\n    {\n        if (ch == '-') v = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n    {\n        x = x * 10 + ch - '0';\n        ch = getchar();\n    }\n    return v * x;\n}\n\nil void out(int x)\n{\n    if (x < 0) putchar('-'), x = -x;\n    if (x > 9) out(x / 10);\n    putchar(x % 10 + '0');\n}\n\nstruct edge\n{\n    int y, w;\n};\n\nstruct node\n{\n    int dis;\n    bool find;\n} d[N];\n\nstruct nodep\n{\n    int dis;\n    int pos;\n    bool operator <(const nodep &x) const\n    {\n        return x.dis < dis;\n    }\n};\n\nvector<edge> mp[N];\npriority_queue<nodep> q;\nint n, m;\n\n/*\nvoid dij(int first)\n{\n    //--init--//\n    for (int i = 1; i <= n; i++) d[i].dis = INF;\n    int x = 0, minn = INF, y, w;\n    d[first].dis = 0;\n    for (int i = 1; i < n; i++)\n    {\n        minn = INF;\n        for (int j = 1; j <= n; j++)\n            if (!d[j].find && d[j].dis < minn) minn = d[j].dis, x = j;\n        d[x].find=true;\n        for (int j = 0; j < (int)mp[x].size(); j++)\n        {\n            y=mp[x][j].y,w=mp[x][j].w;\n            d[y].dis=min(d[y].dis,d[x].dis+w);\n        }\n    }\n}\n*/\n\nvoid dij(int first)\n{\n    for (int i = 1; i <= n; i++) d[i].dis = INF;\n    d[first].dis = 0;\n    int y, w;\n    nodep temp;\n    temp.dis=0,\n    temp.pos=first;\n    q.push(temp);\n    while (!q.empty())\n    {\n        temp = q.top();\n        q.pop();\n        int x = temp.pos;\n        if (d[x].find) continue;\n        d[x].find = true;\n        for (int i = 0; i < (int)mp[x].size(); i++)\n        {\n            y = mp[x][i].y, w = mp[x][i].w;\n            if (d[y].dis > d[x].dis + w)\n            {\n                d[y].dis = d[x].dis + w;\n                if (!d[y].find)\n                {\n                    temp.dis=d[y].dis;\n                    temp.pos=y;\n                    q.push(temp);\n                }\n            }\n        }\n    }\n}\n\nint main()\n{\n    int first, x, y, w;\n    edge qwq;\n    in(n), in(m), in(first);\n    for (int i = 0; i < m; i++)\n    {\n        in(x), in(y), in(w);\n        qwq.y = y, qwq.w = w;\n        mp[x].push_back(qwq);\n    }\n    dij(first);\n    for (int i = 1; i <= n; i++)\n    {\n        out(d[i].dis);\n        printf(\" \");\n    }\n    cout << endl;\n    return 0;\n}\n```", "link": "/posts/dan-yuan-zui-duan-lu-jing/", "tags": [], "categories": []}, {"title": "luogu\u79c1\u4fe1\u63d0\u9192", "content": "\n\u4f7f\u7528\u6d1b\u8c37\u79c1\u4fe1\u7684\u65f6\u5019\u5e38\u5e38\u4e0d\u80fd\u5728\u7ebf\u804a\u5929, \u56e0\u4e3a\u6d88\u606f\u6ca1\u6709\u63d0\u9192\u529f\u80fd, \u8fd9\u91cc\u5b9e\u73b0\u4e86\u4e00\u4e2a\u6536\u5230\u6d88\u606f\u4ea7\u751f\u7cfb\u7edf\u901a\u77e5\u7684\u529f\u80fd, \u6253\u5f00\u79c1\u4fe1\u9875\u9762, \u5c06\u4e00\u4e0b\u4ee3\u7801\u590d\u5236\u5230\u63a7\u5236\u53f0\u5e76\u56de\u8f66\u8fd0\u884c\u5373\u53ef.\n\n\u6ce8\u610f\u9700\u8981\u5141\u8bb8\u901a\u77e5\u6743\u9650.\n\n\u79c1\u4fe1\u9875\u9762\u5f04\u4e86\u4e4b\u540e\u662f\u4e0d\u80fd\u5173\u7684\uff09 , \u9700\u8981\u4e00\u76f4\u6302\u7740\n\n```js\nlet ws = new WebSocket(\"wss://ws.luogu.com.cn/ws\");\nNotification.requestPermission();\nfunction showNotice(msg) {\n    function  newNotify() {\n        let notification = new Notification(\"\u65b0\u7684\u79c1\u4fe1\", {\n            dir: \"auto\",\n            lang: \"hi\",\n            requireInteraction: true,\n            icon: \"https://www.luogu.com.cn/favicon.ico\",\n            body: msg\n        });\n        notification.onclick = () => { \n            window.focus();\n        }\n    }\n    //\u6743\u9650\u5224\u65ad\n    if (Notification.permission == \"granted\") {\n        newNotify();\n    } else {\n        //\u8bf7\u6c42\u6743\u9650\n        Notification.requestPermission(function (perm) {\n            if (perm == \"granted\") {\n                newNotify();\n            }\n        })\n    }\n}\nws.onopen = () => {\n    ws.send(`{\"type\":\"join_channel\",\"channel\":\"chat\",\"channel_param\":\"${window._feInjection.currentUser.uid}\",\"exclusive_key\":null}`);\n}\nws.onmessage = (e) => {\n    let u = JSON.parse(e.data);\n    console.log(u);\n    if (u._ws_type === 'server_broadcast' && u.message instanceof Object && u.message.sender.uid !== window._feInjection.currentUser.uid) {\n        showNotice(`${u.message.sender.name} : ${u.message.content}`);\n    }\n}\n```\n", "link": "/posts/luogu-si-xin-ti-xing/", "tags": [], "categories": []}, {"title": "Splay", "content": "\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define Maxn 500100\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define In(a) a = Read()\nil int Read()\n{\n    int v = 1, x = 0;\n    char ch = getchar();\n    while (ch > '9' || ch < '0')\n    {\n        if (ch == '-') v = -1;\n        ch = getchar();\n    }\n    while (ch >= '0' && ch <= '9')\n    {\n        x = (x << 3) + (x << 1) + ch - '0';\n        ch = getchar();\n    }\n    return v * x;\n}\n\nil void Out(int x)\n{\n    if (x < 0) x = -x, putchar('-');\n    if (x > 9) Out(x / 10);\n    putchar(x % 10 + '0');\n}\n\nint Cnt[Maxn], Son[Maxn][2], Fa[Maxn], Size[Maxn], Val[Maxn];\n\nint N, Root = 0, Tot = 0;\n\n#define Gson(x) (Son[Fa[x]][1] == x)\n\nil void Push_up(int x)\n{\n    Size[x] = Size[Son[x][0]] + Size[Son[x][1]] + Cnt[x];\n}\n\nil void Rotote(int x)\n{\n    int y = Fa[x], z = Fa[y], k = Gson(x), temp = Son[x][k ^ 1];\n    Son[z][Gson(y)] = x, Fa[x] = z;\n    Son[y][k] = temp;\n    Fa[temp] = y;\n    Son[x][k ^ 1] = y;\n    Fa[y] = x;\n    Push_up(y);\n    Push_up(x);\n}\n\nil void Splay(int x, int goal)\n{\n    while (Fa[x] != goal) // x->goal.son\n    {\n        int y = Fa[x], z = Fa[y];\n        if (z != goal) Gson(x) ^ Gson(y) ? Rotote(x) : Rotote(y);\n        Rotote(x);\n    }\n    if (goal == 0) Root = x;\n}\n\nil void Insert(int x)\n{\n    int now = Root, ff = 0;\n    while (now && Val[now] != x) ff = now, now = Son[now][x > Val[now]];\n    if (now)\n        Cnt[now]++;\n    else\n    {\n        now = ++Tot;\n        if (ff) Son[ff][x > Val[ff]] = now;\n        Son[now][0] = Son[now][1] = 0;\n        Fa[now] = ff, Val[now] = x;\n        Cnt[now] = Size[now] = 1;\n    }\n    Splay(now, 0);\n}\n\nil void Find(int x) // find val->x\n{\n    int now = Root;\n    if (!now) return;\n    while (Son[now][x > Val[now]] && x != Val[now]) now = Son[now][x > Val[now]];\n    Splay(now, 0);\n}\n\nil int Next(int x, int f)\n{\n    Find(x);\n    int now = Root;\n    if ((Val[now] > x && f) || (Val[now] < x && !f)) return now;\n    now = Son[now][f];\n    while (Son[now][f ^ 1]) now = Son[now][f ^ 1];\n    return now;\n}\n\nil void Del(int x)\n{\n    int last = Next(x, 0), next = Next(x, 1);\n    Splay(last, 0), Splay(next, last);\n    int del = Son[next][0];\n    if (Cnt[del] > 1)\n        Cnt[del]--, Splay(del, 0);\n    else\n        Son[next][0] = 0;\n}\n\nil int Findth(int x)\n{\n    int now = Root;\n    if (Size[now] < x) return 0;\n    while (1)\n    {\n        int left = Son[now][0];\n        if (x > Size[left] + Cnt[now])\n            x -= Size[left] + Cnt[now], now = Son[now][1];\n        else if (Size[left] >= x)\n            now = left;\n        else\n            return Val[now];\n    }\n}\n\nint main()\n{\n    Insert(-2147483647);\n    Insert(+2147483647);\n    int n;\n    In(n);\n    for (int i = 0, temp, x; i < n; i++)\n    {\n        In(temp), In(x);\n        if (temp == 1) Insert(x);\n        if (temp == 2) Del(x);\n        if (temp == 3) Find(x), Out(Size[Son[Root][0]]), printf(\"\\n\");\n        if (temp == 4) Out(Findth(x + 1)), printf(\"\\n\");\n        if (temp == 5) Out(Val[Next(x, 0)]), printf(\"\\n\");\n        if (temp == 6) Out(Val[Next(x, 1)]), printf(\"\\n\");\n    }\n    return 0;\n}\n```", "link": "/posts/Splay/", "tags": [], "categories": []}, {"title": "\u9519\u6392\u95ee\u9898\u7684\u601d\u8003", "content": "\n\u9519\u6392\u95ee\u9898\n\nn\u4e2a\u6709\u5e8f\u7684\u5143\u7d20\u5e94\u6709n!\u4e2a\u4e0d\u540c\u7684\u6392\u5217\uff0c\u5982\u82e5\u4e00\u4e2a\u6392\u5217\u4f7f\u5f97\u6240\u6709\u7684\u5143\u7d20\u4e0d\u5728\u539f\u6765\u7684\u4f4d\u7f6e\u4e0a\uff0c\u5219\u79f0\u8fd9\u4e2a\u6392\u5217\u4e3a\u9519\u6392\uff1b\u6709\u7684\u53eb\u91cd\u6392\u3002\n\n\u9012\u63a8\u5173\u7cfb\n\u4e3a\u6c42\u5176\u9012\u63a8\u5173\u7cfb\uff0c\u5206\u4e24\u6b65\u8d70\uff1a\n\u7b2c\u4e00\u6b65\uff0c\u8003\u8651\u7b2cn\u4e2a\u5143\u7d20\uff0c\u628a\u5b83\u653e\u5728\u67d0\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u6bd4\u5982\u4f4d\u7f6ek\uff0c\u4e00\u5171\u6709n-1\u79cd\u653e\u6cd5\uff1b\n\u7b2c\u4e8c\u6b65\uff0c\u8003\u8651\u7b2ck\u4e2a\u5143\u7d20\uff0c\u8fd9\u65f6\u6709\u4e24\u79cd\u60c5\u51b5\uff1a\n\n\u628a\u5b83\u653e\u5230\u4f4d\u7f6en\uff0c\u90a3\u4e48\u5bf9\u4e8e\u9664n\u4ee5\u5916\u7684n-1\u4e2a\u5143\u7d20\uff0c\u7531\u4e8e\u7b2ck\u4e2a\u5143\u7d20\u653e\u5230\u4e86\u4f4d\u7f6en\uff0c\u6240\u4ee5\u5bf9\u5269\u4e0bn-2\u4e2a\u5143\u7d20\u7684\u9519\u6392\u5373\u53ef\uff0c\u6709F[n-2]\u79cd\u653e\u6cd5\uff1b\n\u7b2ck\u4e2a\u5143\u7d20\u4e0d\u653e\u5230\u4f4d\u7f6en\uff0c\u8fd9\u65f6\u5bf9\u4e8e\u8fd9n-1\u4e2a\u5143\u7d20\u7684\u9519\u6392\uff0c\u6709F[n-1]\u79cd\u653e\u6cd5\u3002\n\u6839\u636e\u4e58\u6cd5\u548c\u52a0\u6cd5\u6cd5\u5219\uff0c\u7efc\u4e0a\u5f97\u5230F[n]=(n-1)*( F[n-1]+F[n-2])\n\n## \u518d\u8be6\u7ec6\u4e00\u70b9 \u8f6c\u4e00\u7bc7\u5927\u795e\u7684\u8bb2\u89e3\n\n\u95ee\u9898\uff1a\u73b0\u670910\u672c\u4e66\u6309\u7167\u987a\u5e8f\u6446\u653e\uff0c\u73b0\u8981\u6c42\u91cd\u65b0\u6392\u5217\uff0c\u4f7f\u5f97\u65b0\u7684\u4e66\u7684\u987a\u5e8f\u4e2d\u6bcf\u4e00\u672c\u4e66\u90fd\u4e0d\u5728\u539f\u6765\u7684\u4f4d\u7f6e\uff0c\u6c42\u6709\u591a\u5c11\u79cd\u6392\u5217\u65b9\u5f0f\uff1f\n\u8fd9\u4e2a\u95ee\u9898\u63a8\u5e7f\u4e00\u4e0b\uff0c\u5c31\u662f\u9519\u6392\u95ee\u9898\uff0c\u662f\u7ec4\u5408\u6570\u5b66\u4e2d\u7684\u95ee\u9898\u4e4b\u4e00\u3002\u8003\u8651\u4e00\u4e2a\u6709n\u4e2a\u5143\u7d20\u7684\u6392\u5217\uff0c\u82e5\u4e00\u4e2a\u6392\u5217\u4e2d\u6240\u6709\u7684\u5143\u7d20\u90fd\u4e0d\u5728\u81ea\u5df1\u539f\u6765\u7684\u4f4d\u7f6e\u4e0a\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u6392\u5217\u5c31\u79f0\u4e3a\u539f\u6392\u5217\u7684\u4e00\u4e2a\u9519\u6392\u3002 n\u4e2a\u5143\u7d20\u7684\u9519\u6392\u6570\u8bb0\u4e3aD(n)\u3002 \u7814\u7a76\u4e00\u4e2a\u6392\u5217\u9519\u6392\u4e2a\u6570\u7684\u95ee\u9898\uff0c\u53eb\u505a\u9519\u6392\u95ee\u9898\u6216\u79f0\u4e3a\u66f4\u5217\u95ee\u9898\n\nOK\uff0c\u73b0\u5728\u8be6\u7ec6\u5206\u6790\u8fd9\u4e2a\u95ee\u9898\uff0c\u6211\u4eec\u8981\u7684\u6700\u7ec8\u7ed3\u679c\u5c31\u662f\u4e66\u7684\u7f16\u53f7\u4e0e\u6240\u5728\u4f4d\u7f6e\u7684\u7f16\u53f7\u4e0d\u540c\uff0c\u5728\u8fd9\u91cc\uff0c\u6211\u4eec\u628an\u672c\u4e66\u7684\u9519\u6392\u64cd\u4f5c\u6570\u8bb0\u4e3aF(n)\uff0c\u90a3n-1\u672c\u5c31\u662fF(n-1)\uff0cn-2\u672c\u5c31\u662fF(n-2)\u5566\uff0c\u4e0b\u9762\uff0c\u6211\u4eec\u628a\u653e\u7f6e\u95ee\u9898\u5206\u4e3a\u4e24\u6b65\uff08\u521d\u59cb\u4f4d\u7f6e\u53f7\u4e0e\u4e66\u7684\u7f16\u53f7\u76f8\u540c\uff09\uff1a\n\n\u7b2c\u4e00\u6b65\uff1a\n\n\u6211\u4eec\u53d6\u4e00\u672c\u4e66\uff0c\u4e66\u7684\u7f16\u53f7\u4e3am\uff0c\u73b0\u5728\u8fd9\u672c\u4e66\u5c31\u5728\u6211\u4eec\u624b\u4e2d\uff0c\u6ce8\u610f\uff0c\u6309\u7167\u9898\u76ee\u8981\u6c42\uff0c\u6700\u5f00\u59cb\u7684\u65f6\u5019\u8fd9\u672c\u4e66\u7684\u4f4d\u7f6e\u53f7\u4e5f\u662fm\u53f7\uff0c\u6309\u7167\u9898\u76ee\u8981\u6c42\uff0c\u6211\u4eec\u73b0\u5728\u653e\u4e66\u65f6\u4e0d\u80fd\u653e\u56de\u8fd9\u4e2a\u4f4d\u7f6em\u4e86\uff0c\u800c\u662f\u8981\u9009\u62e9\u5176\u4ed6\u4f4d\u7f6e\uff0c\u90a3\u4e48\u6709\u591a\u5c11\u79cd\u9009\u62e9\u5462\uff0c\u60f3\u4e00\u4e0b\uff0c\u603b\u5171\u6709n\u672c\u4e66\uff0cn\u4e2a\u4f4d\u7f6e\uff0c\u73b0\u5728\u6211\u624b\u91cc\u8fd9\u672c\u4e66\u4e0d\u80fd\u628a\u5b83\u653e\u5230\u4f4d\u7f6em\uff0c\u90a3\u4e48\u5269\u4e0b\u7684n-1\u4e2a\u4f4d\u7f6e\u6211\u5f53\u7136\u5c31\u662f\u968f\u4fbf\u6254\u5566\uff0c\u4e5f\u5c31\u662fn-1\u79cd\u6254\u6cd5\uff0c\u597d\uff0c\u73b0\u5728\uff0c\u6211\u9009\u62e9\u4e86\u4f4d\u7f6ek\uff0c\u6211\u51b3\u5b9a\u628a\u624b\u91cc\u8fd9\u672c\u4e66\u653e\u5230\u4f4d\u7f6ek\u8fd9\u91cc\uff0c\u8bb0\u4f4f\u8fd9\u4e2a\u662f\u4f4d\u7f6e\u7f16\u53f7k\uff0c\u90a3\u4e48\uff0c\u6211\u80af\u5b9a\u8981\u628a\u539f\u6765\u8fd9\u91cc\u7684\u7f16\u53f7\u4e3ak\u7684\u4e66\u62ff\u51fa\u6765\uff0c\u518d\u628a\u8fd9\u672c\u7f16\u53f7\u4e3an\u7684\u4e66\u653e\u8fdb\u53bb\u55bd\u3002\u6240\u4ee5\uff0c\u73b0\u5728\u6211\u4eec\u624b\u91cc\u7684\u4e66\u7684\u7f16\u53f7\u662fk\n\n\u7b2c\u4e8c\u6b65\uff1a\n\n\u6211\u4eec\u628a\u624b\u91cc\u8fd9\u672c\u7f16\u53f7\u4e3ak\u7684\u4e66\u672c\u653e\u5230\u4e66\u67b6\uff0c\u6ce8\u610f\uff0c\u653e\u7684\u8fc7\u7a0b\u4e2d\u6211\u4eec\u53c8\u9762\u4e34\u4e24\u79cd\u60c5\u51b5\uff0c\u53ef\u4ee5\u60f3\u5230\uff0c\u6b64\u65f6\u6b64\u523b\u73b0\u5728\u4e66\u67b6\u4e0a\u7f16\u53f7m\u7684\u4f4d\u7f6e\u662f\u7a7a\u7740\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u653e\u5728\u8fd9\u4e2a\u4f4d\u7f6e\u4e0a\uff0c\u4e66\u7684\u7f16\u53f7\u4e3ak\uff0c\u4f4d\u7f6e\u7f16\u53f7\u4e3am\uff0c\u6ca1\u9519\uff0c\u6ee1\u8db3\u9898\u610f\uff0c\u8fd9\u662f\u7b2c\u4e00\u79cd\u60c5\u51b5\uff0c\u8fd8\u6709\u4e00\u79cd\u5c31\u662f\u6211\u4e0d\u9009\u62e9\u8fd9\u4e2a\u7a7a\u7740\u7684\u4f4d\u7f6em\uff0c\u6211\u518d\u91cd\u65b0\u9009\u62e9\u4e00\u4e2a\u65b0\u7684\u4f4d\u7f6e\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff0c\u4e0b\u9762\u8be6\u7ec6\u5206\u6790\n\n\u7b2c\u4e00\u79cd\u60c5\u51b5\uff1a\u6211\u628a\u8fd9\u672c\u7f16\u53f7\u4e3ak\u7684\u4e66\u653e\u5230\u8fd9\u4e2a\u7f16\u53f7\u4e3am\u7684\u5730\u5740\uff0c\u90a3\u73b0\u5728\u6211\u4eec\u9762\u524d\u662f\u4ec0\u4e48\u72b6\u51b5\u5462\uff0c\u5c31\u662f\u4f4d\u7f6ek\u548c\u4f4d\u7f6em\u7684\u4e66\u4ea4\u6362\u4f4d\u7f6e\uff0c\u4e5f\u5c31\u662f\u4f4d\u7f6e\u53f7\u4e0d\u7b49\u4e8e\u4e66\u53f7\uff0c\u5373\u6ee1\u8db3\u9519\u6392\uff0c\u603b\u5171n\u4e2a\u4f4d\u7f6e\uff0c\u6211\u4eec\u53ea\u52a8\u4e86m\u548ck\u8fd9\u4e24\u4e2a\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5269\u4e0b\u7684n-2\u4e2a\u4f4d\u7f6e\u8fd8\u662f\u7eb9\u4e1d\u4e0d\u52a8\uff0c\u4fdd\u6301\u4e00\u4e00\u5bf9\u5e94\u7684\u5173\u7cfb\u5462\uff0c\u90a3\u4e48\u5bf9\u4e8e\u5269\u4e0b\u7684\u8fd9n-2\u672c\u4e66\u7684\u9519\u6392\u64cd\u4f5c\uff0c\u6211\u4eec\u53c8\u56de\u5230\u4e86\u95ee\u9898\u7684\u8d77\u70b9\uff0c\u6c42n-2\u672c\u7684\u9519\u6392\u64cd\u4f5c\u6570F(n-2)\uff0c\u7ed3\u5408\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7b2c\u4e00\u79cd\u60c5\u51b5\u603b\u5171\u6709 (n-1)*F(n-2) \u79cd\u65b9\u6cd5\n\n![](https://cdn.jsdelivr.net/gh/RocksonLee/Picgo/202111092136459.png)\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u6211\u4eec\u4e0d\u9009\u62e9\u8fd9\u4e2a\u7a7a\u7740\u7684\u4f4d\u7f6em\u5566\uff0c\u6211\u4eec\u624b\u6301\u8fd9\u672c\u7f16\u53f7\u4e3ak\u7684\u4e66\uff0c\u6211\u4eec\u4ece\u9664\u4e86\u4f4d\u7f6em\u4ee5\u53ca\u4f4d\u7f6ek\u7684\u5269\u4e0b\u7684n-2\u4e2a\u4f4d\u7f6e\u4e2d\u9009\u62e9\u4e00\u4e2a\u4f4d\u7f6e\uff0cOK\uff0c\u6211\u4eec\u73b0\u5728\u5f00\u59cb\u60f3\uff0c\u6211\u624b\u91cc\u8fd9\u672c\u4e66\u4e0d\u80fd\u653e\u5728\u8fd9\u4e2a\u4f4d\u7f6em\uff0c\u55ef\u55ef\uff0c\u9664\u4e86\u7b2c\u4e00\u6b65\u6211\u4eec\u653e\u7f6e\u7684\u90a3\u672c\u4e66m\u4e0d\u7528\u7ba1\u4e86\uff0c\u6211\u4eec\u8fd8\u8981\u641e\u624b\u91cc\u8fd9\u672c\u548c\u5269\u4e0b\u7684n-2\u672c\uff0c\u4e5f\u5c31\u662fn-1\u672c\uff0c\u540c\u65f6\u53c8\u8981\u6c42\u624b\u91cc\u8fd9\u672ck\u8fd8\u4e0d\u80fd\u653e\u5230\u4f4d\u7f6em\uff0c\u8fd9\u662f\u4e0d\u662f\u5c31\u76f8\u5f53\u4e8e\u628a\u624b\u91cc\u8fd9\u672c\u52a0\u4e0a\u5269\u4e0b\u7684n-2\u672c\u4e5f\u5c31\u662fn-1\u672c\u4e66\u8fdb\u884c\u9519\u6392\u5462\uff0c\u54c7\u54c7\u54c7\uff0c\u60f3\u4e00\u60f3\uff0c\u9519\u6392\u7684\u5b9a\u4e49\uff0c\u8981\u6c42\u6bcf\u672c\u4e66\u90fd\u4e0d\u80fd\u5446\u5728\u67d0\u4e00\u4e2a\u7279\u5b9a\u4f4d\u7f6e\uff0c\u662f\u4e0d\u662f\u521a\u597d\u7b26\u5408\u5462qwq\uff0c\u6240\u4ee5\uff0c\u73b0\u5728\u7684\u4e3a\u9898\u5c31\u5230\u4e86\u6c42\u624b\u91cc\u8fd9\u672c\u548c\u5269\u4e0b\u7684n-2\u672c\u603b\u5171\u662fn-1\u672c\u4e66\u7684\u9519\u6392\u64cd\u4f5c\u6570\uff0c\u6211\u4eec\u8bb0\u4e3aD(n-1)\uff0c\u7ed3\u5408\u7b2c\u4e00\u6b65\uff0c\u6211\u4eec\u5f97\u51fa\u8fd9\u7b2c\u4e8c\u79cd\u60c5\u51b5\u5171\u6709(n-1)*D(n-1)\u79cd\u65b9\u6cd5\n\n![](https://cdn.jsdelivr.net/gh/RocksonLee/Picgo/202111092136685.png)\n\n\u7b2c\u4e8c\u79cd\u60c5\u51b5\uff1a\u6211\u4eec\u4e0d\u9009\u62e9\u8fd9\u4e2a\u7a7a\u7740\u7684\u4f4d\u7f6em\u5566\uff0c\u6211\u4eec\u624b\u6301\u8fd9\u672c\u7f16\u53f7\u4e3ak\u7684\u4e66\uff0c\u52a0\u4e0a\u5269\u4e0b\u7684n-2\u672c\u4e66\u4e00\u5171\u6709n-1\u672c\uff0c\u76f4\u63a5\u5bf9\u8fd9n-1\u672c\u4e66\u8fdb\u884c\u9519\u6392\u5c31\u597d\u4e86\uff0c\u5373 (n-1)\u2217F[n-1]\n\n\u539f\u7b54\u6848\u7b2c\u4e8c\u79cd\u60c5\u51b5\u6211\u8ba4\u4e3a\u6709\u70b9\u5e9f\u8bdd\uff0c\u6240\u4ee5\u8fd9\u91cc\u6211\u8fdb\u884c\u4e86\u6539\u52a8 \u8fd9\u91cc\u7ed9\u51fa\u6211\u5bf9\u7b2c\u4e8c\u79cd\u60c5\u51b5\u7684\u601d\u8003 \u56e0\u4e3a\u7b2c\u4e00\u79cd\u60c5\u51b5\u662f\u5c06\u7f16\u53f7\u4e3ak\u7684\u4e66\u653e\u5728m\u4f4d\u4e0a\uff0c\u6240\u4ee5\u7b2c\u4e8c\u79cd\u60c5\u51b5\u8981\u6c42k\u4e0d\u5728m\u4f4d\u4e0a\uff0c\u4f46\u6211\u4e00\u76f4\u641e\u4e0d\u61c2\u4e3a\u4ec0\u4e48\u5bf9n-1\u4e2a\u5143\u7d20\u8fdb\u884c\u9519\u6392\u5c31\u80fd\u786e\u5b9ak\u4e0d\u5728m\u4f4d\u4e0a \u5176\u5b9e\u8fd9\u91cc\u662f\u9700\u8981\u8df3\u8131\u51fa\u6765\u7684 \u6211\u4eec\u53ef\u4ee5\u5c06m\u4f4d\u89c6\u4f5ck\u7684\u4f4d\u7f6e\uff0c\u5373k\u4e0d\u80fd\u653e\u5728k\u4e0a \u90a3\u5176\u5b9e\u5c31\u662f\u5bf9\u5305\u62ec\u7f16\u53f7k\u7684n-1\u672c\u4e66\u8fdb\u884c\u9519\u6392 \u6682\u65f6\u5148\u8fd9\u6837\u7406\u89e3\u5427- -\u6211\u8ba4\u4e3a\u8fd9\u662f\u552f\u4e00\u80fd\u8ba9\u6211\u4e0d\u518d\u7ea0\u7ed3\u4e0b\u53bb\u7684\u529e\u6cd5\u4e86\n\n\u597d\u7684\uff0c\u73b0\u5728\u6211\u4eec\u603b\u7ed3\u4e24\u79cd\u60c5\u51b5\uff0c\u7ed3\u679c\u8fdb\u884c\u76f8\u52a0\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u9012\u63a8\u516c\u5f0f\u5566\n\n\u9012\u63a8\u516c\u5f0f\u4e3a\uff1aF[n]=(n-1)( F[n-1]+F[n-2] )\n\n![](https://cdn.jsdelivr.net/gh/RocksonLee/Picgo/202111092136704.png)\n\n![](https://cdn.jsdelivr.net/gh/RocksonLee/Picgo/202111092202667.png)\n\n\n\u9996\u5148\u8003\u8651\uff0c\u5982\u679c\u5f00\u59cb\u6709n-1\u4e2a\u65b0\u90ce\uff0c\u5e76\u4e14\u8fd9n-1\u4e2a\u4eba\u90fd\u5df2\u7ecf\u5b8c\u6210\u4e86\u9519\u6392\uff08\u6709f(n-1)\u79cd\u53ef\u80fd\uff09\uff0c\u73b0\u5728\u53c8\u6765\u4e86\u4e00\u4e2a\u4eba\uff0c\u90a3\u4e48\u540e\u6765\u7684\u7b2cn\u4e2a\u4eba\u53ef\u4ee5\u901a\u8fc7\u7528\u81ea\u5df1\u7684\u65b0\u5a18\u53bb\u548c\u90a3n-1\u4e2a\u4eba\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u4ea4\u6362\uff0c\u6765\u5b9e\u73b0n\u4e2a\u4eba\u90fd\u9519\u6392\u3002\u8fd9\u79cd\u60c5\u51b5\u6709 (n-1)\u2217 *\u2217f[n-1] \u79cd\u53ef\u80fd;\n\n\u53e6\u5916\uff0c\u5982\u679c\u5f00\u59cb\u7684n-1\u4e2a\u4eba\u4e0d\u662f\u90fd\u9519\u6392\uff0c\u90a3\u4e48\u8981\u60f3\u4f7f\u7b2cn\u4e2a\u4eba\u8fc7\u6765\u4e0e\u5176\u4e2d\u4e00\u4e2a\u4ea4\u6362\u540e\u5b9e\u73b0\u9519\u6392\u7684\u8bdd\u5c31\u5fc5\u987b\u6ee1\u8db3\u4e24\u4e2a\u6761\u4ef6\uff1a\n\n1.\u90a3n-1\u4e2a\u4eba\u4e2d\u53ea\u6709\u4e00\u4e2a\u4eba\u9009\u5230\u4e86\u81ea\u5df1\u7684\u65b0\u5a18\uff0c\u4e5f\u5c31\u662f\u8bf4\u6709n-2\u4e2a\u4eba\u90fd\u5df2\u7ecf\u9519\u6392\u4e86\u3002\n\n2.\u7b2cn\u4e2a\u4eba\u5fc5\u987b\u548c\u90a3\u4e2a\u9009\u5230\u81ea\u5df1\u65b0\u5a18\u7684\u4eba\u53bb\u4ea4\u6362\uff0c\u4f46\u90a3\u4e2a\u9009\u5230\u81ea\u5df1\u65b0\u5a18\u7684\u4eba\u53ef\u4ee5\u662fn-1\u4e2a\u4eba\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a\u3002\u8fd9\u79cd\u60c5\u51b5\u6709 (n-1)\u2217 *\u2217f[n-2] \u79cd\u53ef\u80fd\u3002\n\n\u5176\u4ed6\u60c5\u51b5\u90fd\u4e0d\u80fd\u6ee1\u8db3n\u4e2a\u4eba\u9519\u6392\u3002\n\n\u56e0\u6b64\u9012\u63a8\u5173\u7cfb\uff1af[n]=(n-1)*(f[n-1]+f[n-2])\u3002", "link": "/posts/cuo-pai-wen-ti-de-si-kao/", "tags": [], "categories": []}, {"title": "KMP\u521d\u63a2", "content": "    \n```cpp\n\n\n#include <bits/stdc++.h>\nusing namespace std;\n#define il inline\n#define N 1000100\n#define Inf 0x3f3f3f3f\nint Kmp[N];\nchar Mode[N], S[N];\nint main()\n{\n    scanf(\"%s\", S + 1);\n    scanf(\"%s\", Mode + 1);\n    int lena = strlen(S + 1), lenb = strlen(Mode + 1);\n    for (int i = 2, j = 0; i <= lenb; i++)\n    {\n        while (j && Mode[i] != Mode[j + 1]) j = Kmp[j];\n        if (Mode[i] == Mode[j + 1]) j++;\n        Kmp[i] = j;\n    }\n    for (int i = 1, j = 0; i <= lena; i++)\n    {\n        while (j && S[i] != Mode[j + 1]) j = Kmp[j];\n        if (S[i] == Mode[j + 1]) j++;\n        if (j == lenb) printf(\"%d\\n\", i + 1 - lenb), j = Kmp[j];\n    }\n    for (int i = 1; i <= lenb; i++) printf(\"%d \", Kmp[i]);\n    return 0;\n}\n```", "link": "/posts/KMP-chu-tan/", "tags": [], "categories": []}, {"title": "LG P4059 [Code 1]\u627e\u7238\u7238", "content": "\n$f_{i, j, 0} =\\max \\left\\{f_{i-1, j-1,0}, f_{i-1, j-1,1}, f_{i-1, j-1,2}\\right\\}+d_{x_{i}, y_{j}} $\n\n$f_{i, j, 1} =\\max \\left\\{f_{i, j-1,1}-b, f_{i, j-1,0}-a, f_{i, j-1,2}-a\\right\\} $\n\n$f_{i, j, 2} =\\max \\left\\{f_{i-1, j, 2}-b, f_{i-1, j, 0}-a, f_{i-1, j, 1}-a\\right\\}$\n\n\u521d\u59cb\u5316\u4ece\u540e\u5f80\u524d\u626b[0][i][1]  [i][0][2]\n\n\u7ed9\u5176\u4ed6\u8d4b\u503c-INF\n\n\u521d\u59cb\u5316\u5f88\u91cd\u8981\uff01\uff01\uff01\n\n\n```cpp\n#include <bits/stdc++.h>\n#define INF 0x3f3f3f3f\n#define N 3020\nusing namespace std;\n\nchar a[N], b[N];\nint numa, numb;\nint d[5][5];\nint dp[N][N][5];\nchar check[30];\nint cost(int x, int y)\n{\n    return d[check[a[x] - 'A']][check[b[y] - 'A']];\n}\n\nint main()\n{\n    check['A' - 'A'] = 0, check['T' - 'A'] = 1, check['G' - 'A'] = 2, check['C' - 'A'] = 3;\n    scanf(\"%s\", a + 1);\n    scanf(\"%s\", b + 1);\n    for (int i = 0; i < 4; i++)\n        for (int j = 0; j < 4; j++)\n            scanf(\"%d\", &d[i][j]);\n    scanf(\"%d%d\", &numa, &numb);\n    for (int i = max(strlen(a + 1), strlen(b + 1)); i > 0; --i)\n    {\n        dp[0][i][0] = dp[i][0][0] = dp[0][i][2] = dp[i][0][1] = -INF;\n        dp[0][i][1] = dp[i][0][2] = -numa - numb * (i - 1);\n    }\n    dp[0][0][1] = dp[0][0][2] = -INF;\n\n    for (int i = 1; i <= strlen(a + 1); i++)\n        for (int j = 1; j <= strlen(b + 1); j++)\n            for (int k = 0; k < 3; k++)\n            {\n                if (k == 0)\n                    dp[i][j][0] = max(dp[i - 1][j - 1][0], max(dp[i - 1][j - 1][1], dp[i - 1][j - 1][2])) + cost(i, j);\n                if (k == 1)\n                    dp[i][j][1] = max(dp[i][j - 1][1] - numb, max(dp[i][j - 1][2] - numa, dp[i][j - 1][0] - numa));\n                if (k == 2)\n                    dp[i][j][2] = max(dp[i - 1][j][1] - numa, max(dp[i - 1][j][2] - numb, dp[i - 1][j][0] - numa));\n            }\n    int ans = -INF;\n    for (int i = 0; i < 3; i++)\n        ans = max(ans, dp[strlen(a + 1)][strlen(b + 1)][i]);\n    cout << ans << endl;\n}\n```\n\n\u4e00\u5c0f\u7ec4\u68c0\u67e5\u81ea\u5df1\u7684\u597d\u6570\u636e\n```\nGGAT\nATCC\n5 -4 -4 -4 \n-4 5 -4 -4 \n-4 -4 5 -4 \n-4 -4 -4 5 \n2 1\n\n```", "link": "/posts/LG-P4059-[Code-1]-zhao-ba-ba/", "tags": [], "categories": []}, {"title": "\u5b57\u7b26\u4e32hash\u5b66\u4e60", "content": "\n\n\n<details>\n    <summary>\u67e5\u770b\u539f\u6587</summary>\n    <div id='from'></div>\n    <p><button onclick=\"document.getElementById('from').innerHTML='<iframe src=&quot;https://www.luogu.com.cn/blog/pks-LOVING/zi-fu-chuan-xue-xi-bi-ji-ha-xi-hash-yu-zi-dian-shu-trie&quot; width=100% height=800px style=& quotborder: none;&quot;><iframe>'\"class='mdui-btn mdui-btn-raised'>\u70b9\u51fb\u52a0\u8f7d</button>\n\t<a class='mdui-btn mdui-btn-raised' href=\"https://www.luogu.com.cn/blog/pks-LOVING/zi-fu-chuan-xue-xi-bi-ji-ha-xi-hash-yu-zi-dian-shu-trie\" target='_blank'>\u70b9\u51fb\u8df3\u8f6c</a>\u3001\n</details>\n\n\n\u8ba1\u7b97\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684hash\u6709\u5f88\u591a\u79cd\u65b9\u6cd5\n\n[P3370](https://www.luogu.com.cn/problem/P3370)\n\nQ1\uff1a\u81ea\u7136\u6ea2\u51fa\u6cd5\u6709\u4ec0\u4e48\u5f0a\u7aef\n\nQ2\uff1a\u53cchash\u7684\u6838\u5fc3\u662f\u4ec0\u4e48\uff1f\n\n\uff08mod\u4e24\u4e2a\u4e0d\u540c\u7684\u6570 OR \u8ba1\u7b97hash\u4f7f\u7528\u4e24\u4e2a\u4e0d\u540c\u7684base\uff09\n\nQ3\uff1a\u5404\u79cd\u505a\u6cd5\u7684\u4f18\u52a3\u70b9\uff08\u7ed9\u4e2a\u94fe\u63a5\u4e5f\u53ef\u4ee5\u554a\uff09\n\n\u840c\u65b0\u6c42\u52a9\uff0c\u9ebb\u70e6\u5927\u4f6c\u89e3\u7b54\u4e00\u4e0bqwq\n\n\nA1\uff1a\u5bb9\u6613\u88ab\u5361\u6a21\u6570\n\nA2\uff1a\u4e24\u4e2a\u90fd\u6709\n\nA3\uff1a\n\n- \u5355\u54c8\u5e0c\uff1a\u5feb\uff0c\u4f46\u6a21\u6570\u9009\u7684\u4e0d\u597d\u5bb9\u6613\u88ab\u5361\uff0c\u5c24\u5176\u662f\u81ea\u7136\u6ea2\u51fa\uff1b\n\n- \u53cc\u54c8\u5e0c\uff1a\u6709\u70b9\u6162\uff0c\u4f46\u51e0\u4e4e\u4e0d\u53ef\u80fd\u88ab\u5361\uff1b\n\n- \u591a\u54c8\u5e0c\uff1a\u6ca1\u7528\u8fc7\n\n- map \u54c8\u5e0c\uff1a\u633a\u597d\u7528\u7684\uff0c\u63a8\u8350\u5b66\u4e00\u4e0b\n\n\u5176\u5b83\u7684\u54c8\u5e0c\u597d\u50cf\u5c31\u6ca1\u4ec0\u4e48\u5fc5\u8981\u4e86\u5427\n\n\u7efc\u4e0a\uff0c\u5361\u5e38\u7684\u9898\u7528\u5355\u54c8\u5e0c\uff1b\u5982\u679c\u6837\u672c\u5f88\u5927\u7528\u53cc\u54c8\u5e0c\uff1b\u641c\u7d22\u53bb\u91cd\u7528 map \u54c8\u5e0c", "link": "/posts/zi-fu-chuan-hash-xue-xi/", "tags": ["hash", "\u5b57\u7b26\u4e32"], "categories": [["\u7b97\u6cd5", "\u5b57\u7b26\u4e32", "hash"]]}, {"title": "LG P3478 [POI2008]STA-Station", "content": "\n<details>\n    <summary>\u67e5\u770b\u539f\u9898</summary>\n    <div id='from'></div>\n    <p><button onclick=\"document.getElementById('from').innerHTML='<iframe src=&quot;https://www.luogu.com.cn/problem/P3478&quot; width=100% height=800px style=& quotborder: none;&quot;><iframe>'\"class='mdui-btn mdui-btn-raised'>\u70b9\u51fb\u52a0\u8f7d</button>\n\t<a class='mdui-btn mdui-btn-raised' href=\"https://www.luogu.com.cn/problem/P3478\" target='_blank'>\u70b9\u51fb\u8df3\u8f6c</a>\u3001\n</details>\n\n\u4e8c\u6b21\u626b\u63cf\u4e0e\u6362\u6839\u6cd5\u6a21\u677f\u9898\uff1b\n\n$f[x]=f[y]-size[x]+n-size[x]$\n\n\u8bb0\u5f97\u5f00long long\n\n\u63a8P2986\uff0c\u4e0e\u6b64\u9898\u601d\u8def\u76f8\u4f3c\n\n```cpp\n#include <bits/stdc++.h>\n#define INF 0x3F3F3F3F3F3F3F3F\n#define N 1000100\nusing namespace std;\ntypedef long long ll;\n\nvector<ll> a[N];\nll n, u, v;\nll dep[N];  //\u75311\u5f00\u59cb\u7684\u8282\u70b9\u6df1\u5ea6\nll size[N]; //\u75311\u5f00\u59cb\u5f62\u6210\u7684\u4e00\u68f5\u6811\uff0c\u8fd9\u4e2a\u6811\u6bcf\u4e2a\u70b9\u7684\u5b50\u8282\u70b9\u6570\u91cf\nll f[N];\nll ansx = -INF;\nll ansn;\n\nvoid dfs(ll x, ll fa)\n{\n    dep[x] = dep[fa] + 1;\n    size[x] = 1;\n    for (ll i = 0; i < a[x].size(); i++)\n    {\n        ll y = a[x][i];\n        if (fa == y)\n            continue;\n        dfs(y, x);\n        size[x] += size[y];\n    }\n}\n\nvoid dp(ll x, ll fa)\n{\n    for (ll i = 0; i < a[x].size(); i++)\n    {\n        ll y = a[x][i];\n        if (y == fa)\n            continue;\n        f[y] = f[x] - size[y] + (n - size[y]); //y\u8282\u70b9\u4e0b\u7684\u5b50\u8282\u70b9\u6df1\u5ea6\u5168\u90e8-1\uff0c\u6240\u4ee5-size[y],\u9664y\u8282\u70b9\u4ee5\u53ca\u5176\u5b50\u8282\u70b9\u4ee5\u5916\u7684\u8282\u70b9\u6df1\u5ea6\u5168\u90e8+1\uff0c\u5373+(n-size[y])..\n        dp(y, x);\n    }\n}\n\nint main()\n{\n    scanf(\"%d\", &n);\n    for (ll i = 1; i <= n - 1; i++)\n    {\n        scanf(\"%lld%lld\", &u, &v);\n        a[u].push_back(v);\n        a[v].push_back(u);\n    }\n    dfs(1, 0);\n    for (ll i = 1; i <= n; i++)\n        f[1] += dep[i];\n    dp(1, 0); //\u8f6c\u79fb\n    for (ll i = 1; i <= n; i++)\n    {\n        if (ansx < f[i])\n        {\n\n            if (ansx != f[i])\n                ansx = f[i], ansn = i;\n            else\n                ansn = min(ansn, i);\n        }\n    }\n    cout << ansn;\n    return 0;\n    //printf(\"%lld\",ansx);\n}\n\n```", "link": "/posts/LG-P3478-[POI2008]STA-Station/", "tags": ["dp", "\u6811\u5f62dp"], "categories": [["\u5237\u9898\u8bb0\u5f55"]]}, {"title": "P2986 [USACO10MAR]Great Cow Gathering G", "content": "\n<details>\n    <summary>\u67e5\u770b\u539f\u9898</summary>\n    <div id='from'></div>\n    <p><button onclick=\"document.getElementById('from').innerHTML='<iframe src=&quot;https://www.luogu.com.cn/problem/P2986&quot; width=100% height=800px style=& quotborder: none;&quot;><iframe>'\"class='mdui-btn mdui-btn-raised'>\u70b9\u51fb\u52a0\u8f7d</button>\n\t<a class='mdui-btn mdui-btn-raised' href=\"https://www.luogu.com.cn/problem/P2986\" target='_blank'>\u70b9\u51fb\u8df3\u8f6c</a>\u3001\n</details>\n\n\u4e8c\u6b21\u626b\u63cf \u6362\u6839\uff0c\u96be\u5ea6\u4e0d\u5927\n\n\u4e3b\u8981\u662f\u626b\u63cf\u7684\u65f6\u5019\uff0c\u65b9\u7a0b\u8981\u5bf9\n\n\u6bcf\u626b\u4e0b\u4e00\u4e2a\u70b9\u7684\u65f6\u5019\uff0c\u9700\u8981\u628a\u524d\u9762\u7684\u70b9\u7684\u725b\u603b\u6570\u52a0\u4e0a\u8fd9\u6761\u8fb9\uff0c\u51cf\u53bb\u540e\u9762\u7684\u70b9\u7684\u725b\u603b\u6570\u4e58\u4e0a\u8fd9\u6761\u8fb9\n\n\u84dd\u5c5e\u5b9e\u6709\u70b9\u8fc7\u4e86qwq\uff0c\u63a8P3478\uff0c\u6a21\u677f\u9898\n\n\u8bb0\u5f97\u5f00long long\n\n```cpp\n#include <bits/stdc++.h>\n#define INF 0x3f3f3f3f3f3f3f3f\n// \u5c3c\u739b\uff0c\u5f00\u4e2all\u8bb0\u5f97\u628a\u8fd9\u91cc\u52a0\u591a4\u4e2a3f\n#define N 100010\ntypedef long long ll;\nusing namespace std;\n\nll n,x,y,temp;\nll f[N],ans=INF;\nll c[N],qwq[N],size[N];// \u5c3c\u739b\uff0c\u5f00\u4e2all\u4e0d\u4f1a\u4e48\nvector<pair<ll,ll>> q[N];\n\nvoid dfs(ll x,ll fa)\n{\n    size[x]=c[x];\n    for (ll i = 0; i < q[x].size(); i++)\n    {\n        ll y=q[x][i].first;\n        if (y==fa) continue;\n        dfs(y,x);//\u6ce8\u610f\u5148dfs\u518d\u5e72\u522b\u7684\u4e8b\n        size[x]+=size[y];\n        qwq[x]+=qwq[y]+size[y]*q[x][i].second;\n    }\n}\n\nvoid dp(ll x,ll fa)\n{\n    ll now;\n    for (ll i = 0; i < q[x].size(); i++)\n    {\n        ll y=q[x][i].first;\n        if(y==fa)continue;\n        f[y]=f[x]-size[y]*q[x][i].second+(size[1]-size[y])*q[x][i].second;\n        dp(y,x);\n    }\n}\n\nint main()\n{\n    //freopen(\"P2986_8.in\",\"r\",stdin); //\u63d0\u4ea4\u4ee3\u7801\u7684\u65f6\u5019\u628a\u8fd9\u4e2a\u6ce8\u91ca\u6389\u554a\u5582\n    scanf(\"%lld\",&n);\n    for (ll i = 1; i <= n; i++)\n        scanf(\"%lld\",&c[i]); //\u8349\uff0c\u4e0b\u6b21\u6ce8\u610f\uff0c\u5f00\u4e86ll\u8bb0\u5f97%d\u53d8%lld\n    for (ll i = 1; i < n; i++)\n    {\n        scanf(\"%d%d%d\",&x,&y,&temp);\n        q[x].push_back(make_pair(y,temp)); //Get! make_pair(),qwq\n        q[y].push_back(make_pair(x,temp));\n    }\n    dfs(1,0);\n    f[1]=qwq[1];\n    //cout<<f[1]<<\" \"<<size[1]<<endl;//\u63d0\u4ea4\u4ee3\u7801\u7684\u65f6\u5019\u628a\u8fd9\u4e2a\u6ce8\u91ca\u6389\u554a\u5582\n    dp(1,0);\n    for (ll i = 1; i <= n; i++)\n        ans=min(ans,f[i]); //\u7559\u4e2a\u6807\u8bb0\uff0c\u4ee5\u540e\u5c1d\u8bd5\u5427\u8fd9\u4e2a\u4e22\u5230dp\u91cc\u9762qwq\n    cout<<ans<<endl;\n    return 0;\n    \n}\n```", "link": "/posts/LG-P2986-[USACO10MAR]Great-Cow-Gathering-G/", "tags": ["dp", "\u6811\u5f62dp"], "categories": [["\u5237\u9898\u8bb0\u5f55"]]}, {"title": "LG P1122 \u6700\u5927\u5b50\u6811\u548c", "content": "\n<details>\n    <summary>\u67e5\u770b\u539f\u9898</summary>\n    <div id='from'></div>\n    <p><button onclick=\"document.getElementById('from').innerHTML='<iframe src=&quot;https://www.luogu.com.cn/problem/P1122&quot; width=100% height=800px style=& quotborder: none;&quot;><iframe>'\"class='mdui-btn mdui-btn-raised'>\u70b9\u51fb\u52a0\u8f7d</button>\n\t<a class='mdui-btn mdui-btn-raised' href=\"https://www.luogu.com.cn/problem/P1122\" target='_blank'>\u70b9\u51fb\u8df3\u8f6c</a>\u3001\n</details>\n\n\n\u601d\u8def\u662f\u76f4\u63a5\u5f00\u59cb\u9012\u5f52\u627e\u8fb9\uff0c\u5982\u679c\u8fd9\u4e2a\u70b9\u4e0e\u4ed6\u7684\u5b50\u8fb9\u662f\u8d1f\u6570\uff0c\u90a3\u4e48\u5c31\u4e0d\u8981\u4e86\uff0c\u5426\u5219\u5c31\u8981\u4ed6\u3002\u4ee5\u505a\u5230\u6700\u5927\n\u7528\u5230\u53cc\u5411\u5b58\u8fb9\uff0c\u9632\u6b62\u56de\u4f20\uff08TLE\uff09\n\n\n```cpp\n#include<bits/stdc++.h>\n#define INF 0x7FFFFFFF\n#define N 16100\nusing namespace std;\nvector<int>q[N];\nint temp1,temp2,f[N],r[N],ans=-INF,n;\nvoid dp(int x,int dad)\n{\n    f[x]=r[x];\n    for (int i = 0; i < q[x].size(); i++)\n    {\n        int y=q[x][i];\n        if (y!=dad)\n        {\n            dp(y,x);\n            if (f[y]>0)\n            {\n                f[x]+=f[y];\n            }\n        }\n    }\n    \n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i = 1; i <= n; i++)\n        scanf(\"%d\",&r[i]);\n    for (int i = 1; i <= n-1; i++)\n    {\n        scanf(\"%d%d\",&temp1,&temp2);\n        q[temp1].push_back(temp2);\n        q[temp2].push_back(temp1);\n    }\n    dp(1,0);\n    for (int i = 1; i <= n; i++)\n        ans=max(ans,f[i]);\n    cout<<ans;\n    return 0;\n}\n```", "link": "/posts/LG-P1122--zui-da-zi-shu-he/", "tags": ["dp", "\u6811\u5f62dp"], "categories": []}, {"title": "LG P1352 \u6ca1\u6709\u4e0a\u53f8\u7684\u821e\u4f1a", "content": "\n<details>\n    <summary>\u67e5\u770b\u539f\u9898</summary>\n    <div id='from'></div>\n    <p><button onclick=\"document.getElementById('from').innerHTML='<iframe src=&quot;https://www.luogu.com.cn/problem/P1352&quot; width=100% height=800px style=& quotborder: none;&quot;><iframe>'\"class='mdui-btn mdui-btn-raised'>\u70b9\u51fb\u52a0\u8f7d</button>\n\t<a class='mdui-btn mdui-btn-raised' href=\"https://www.luogu.com.cn/problem/P1352\" target='_blank'>\u70b9\u51fb\u8df3\u8f6c</a>\u3001\n</details>\n\n\u8fd9\u9053\u9898\u6811\u5f62dp\u4e0d\u662f\u5f88\u96be\uff0c\u4f46\u662f\u63d0\u9192\u4e86\u4e2a\u70b9\uff0c\u6ce8\u610f\u5b58\u56fe\u7684\u65f6\u5019\uff0c\u662f\u4ece1\u5f00\u59cb\u8fd8\u662f0\u5f00\u59cb\u3002\u3002\u3002\u3002\n\n\u4e24\u79cd\u60c5\u51b5\n\n\u8981\u4ed6\u6765\uff0c\u90a3\u4e48\u4ed6\u7684\u4e0b\u5c5e\u5c31\u4e0d\u80fd\u6765\uff0c\u5982\u679c\u4ed6\u4e0d\u6765\uff0c\u4ed6\u7684\u4e0b\u5c5e\u53ef\u4ee5\u6765\u6216\u8005\u4e0d\u6765\u3002\u3002\n\n\u8fd9\u6837\u5c31\u662f\u4e24\u9053\u65b9\u7a0b\uff0c\u76f4\u63a5\u9012\u63a8\u5c31\u597d\u4e86\n\n```cpp\n#include <bits/stdc++.h>\n#define INF 0x3F3F3F3F\n#define N 6000+100\nusing namespace std;\nvector<int> a[N];\nint n,r[N],f[N][2],root,v[N],templ,tempk;\nvoid dp(int x)\n{\n    f[x][0]=0;\n    f[x][1]=r[x];\n    for (int i = 0; i < a[x].size(); i++)\n    {\n        int y=a[x][i];\n        dp(y);\n        f[x][0]+=max(f[y][0],f[y][1]);\n        f[x][1]+=f[y][0];\n    }\n}\nint main()\n{\n    scanf(\"%d\",&n);\n    for (int i = 1; i <= n; i++)\n        scanf(\"%d\",&r[i]);\n    for (int i = 1; i <=n-1; i++)\n    {\n        scanf(\"%d%d\",&templ,&tempk);\n        a[tempk].push_back(templ);\n        v[templ]++;\n    }\n    for (int i = 1; i <= n; i++)\n        if(!v[i]) {root=i;break;}\n    dp(root);\n    cout<<max(f[root][1],f[root][0])<<endl;\n}\n```", "link": "/posts/LG-P1352--mei-you-shang-si-de-wu-hui/", "tags": ["dp", "\u6811\u5f62dp"], "categories": [["\u5237\u9898\u8bb0\u5f55"]]}, {"title": "Diary-2021.11", "content": "\n## 11.1\n\n- \u4e2d\u5348\n\n\u770b\u4e86\u597d\u4e45\u7684\u73c2\u6735\u8389\uff0c\u73c2\u6735\u8389\u5f88\u7f8e\uff0c\u5f88\u597d\u770b\uff0c\u5f88\u559c\u6b22\u3002\u3002\n\n\u6211\u6c38\u8fdc\u559c\u6b22\u73c2\u6735\u8389\uff08\uff1f\n\n\u4e0d\u8fc7\uff0c\u73c2\u6735\u8389\u84dd\u53d1\uff0c\u5f88\u597d\u770bqwq\u3002\n\n\u672b\u65e5\u4e09\u95ee\u50ac\u6cea\uff0c\u611f\u6027\uff0c\u53c8\u6709\u4e9b\u4e0d\u4e00\u6837...\n\n```\n\u6211\u5df2\u7ecf\u5f97\u4e0d\u5230\u5e78\u798f\u4e86\uff0c\u56e0\u4e3a\u6211\u5df2\u7ecf\u88ab\u5e78\u798f\u5305\u56f4\u4e86\uff0c\u6709\u5173\u5fc3\u6211\u7684\u4eba\uff0c\u6709\u7167\u987e\u6211\u7684\u4eba\uff0c\u6709\u4e00\u4e2a\u4e3a\u4e86\u6211\u54ed\u4e3a\u6211\u7b11\uff0c\u7231\u7740\u6211\u7684\u4eba\n```\n\n\n# Building\n\n\n", "link": "/posts/Diary-2021.11/", "tags": ["diary"], "categories": [["diary"]]}, {"title": "Diary-2022.3", "content": "\n# 3.1\n\n```\n\u6211\u5df2\u7ecf\u5f97\u4e0d\u5230\u5e78\u798f\u4e86\uff0c\u56e0\u4e3a\u6211\u5df2\u7ecf\u88ab\u5e78\u798f\u5305\u56f4\u4e86\uff0c\u6709\u5173\u5fc3\u6211\u7684\u4eba\uff0c\u6709\u7167\u987e\u6211\u7684\u4eba\uff0c\u6709\u4e00\u4e2a\u4e3a\u4e86\u6211\u54ed\u4e3a\u6211\u7b11\uff0c\u7231\u7740\u6211\u7684\u4eba\n```\n\n\u4eca\u5929\u770b\u7740q\u548cy\u5728\u4e00\u8d77\u8bf4\u8bdd\u4ec0\u4e48\u7684\u5185\u5fc3\u6709\u4e9b\u8bb8\u96be\u53d7\uff0c\u4f46\u662f\uff0c\u8fd9\u4e0d\u662f\u6b63\u5e38\u7684\u4e8b\u60c5\u4e48\u3002\u6211\u4e3a\u4ec0\u4e48\u8981\u8fd9\u4e2a\u6837\u5b50\u554a\u3002\n\n\u679c\u7136\u8fd8\u662f\u653e\u4e0d\u4e0b\u4e00\u4e9b\u4e8b\u60c5\n\n\u6628\u5929\u665a\u4e0a\u5403\u996d\u7684\u65f6\u5019\u804a\u5230\u672a\u6765\u7684\u8001\u5a46\uff0c\u6211\u83ab\u540d\u611f\u5230\u6df7\u4e71\u3002\u6709\u4e9b\u9677\u5165\u6df1\u6e0a\u7684\u611f\u89c9\uff0c\u5c31\u662f\u65e0\u671b\u800c\u53c8\u65e0\u52a9\u7684\u611f\u89c9\u3002\n\n\u4e0b\u5348\u653e\u5b66\u540e\uff0cq\u548cy\u6ca1\u6709\u6765\u5230\u673a\u623f\uff0c\u6211\u89c9\u5f97\u6709\u4e9b\u95ee\u9898\uff0c\u53ef\u80fd\u662f\u6211\u81ea\u5df1\u8fc7\u4e8e\u5403\u918b\n\n\u665a\u4e0a\u8981\u7ed3\u675f\u7684\u65f6\u5019\uff0cq\u9760\u8fd1y\u7684\u65f6\u5019\uff0c\u6c14\u6c1b\u662f\u591a\u4e48\u7684\u878d\u6d3d\uff0c\u800c\u6211\u8d70\u8fdb\uff0c\u5374\u662f\uff0c\"\u4f60\u80fd\u4e0d\u80fd\u8d70\u5f00\"\uff0c\u6211\uff0c\u6211\uff0c\u6211\u2026\u2026\n\n\n# 3.2 \n\n\u68a6\u6108\u53d1\u771f\u5b9e\uff0c\u8426\u7ed5\u5728\u6211\u7684\u5934\u8111\u91cc\uff0c\u4f3c\u4e4e\u8fd9\u662f\u5bf9\u6211\u4e4b\u524d\u7684\u53cd\u5bf9\n\n\u8fd9\u662f\u5bf9\u6211\u81ea\u5df1\u7684\u8fa9\u89e3\n\nq\u4f1a\u53bb\u627ey\uff0c\u539f\u6765\u662f\u8fd9\u6837\u3002\n\n\u53ef\u80fd\u662f\u5403\u918b\u7684\u539f\u56e0\uff0c\u6211\u4e0d\u65ad\u7684\u601d\u8003\uff0c\u505a\u51fa\u4e00\u4e2a\u8352\u5510\u7684\u60f3\u6cd5\n\n\u548cq\u66f4\u8fd1\u4e00\u4e9b\uff0c\u7136\u540e\u53bb\u627eq\u966a\u4ed6\u53bb\u627ey\uff0c\u4f3c\u4e4e\u8fd9\u662f\u4e00\u4e2a\u8fd8\u53ef\u4ee5\u7684\u505a\u6cd5\n\n\u8bd5\u8bd5\u770b\u5427\u3002\u3002\u3002\n\n# 3.3\n\n\u6628\u665a\u53c8\u505a\u76f8\u540c\u7684\u68a6\uff0c\u60f3\u8c61\u7740\u4ed6\u4eec\u4e24\u4e2a\u5728\u673a\u623f\u4eb2\u6635\u7684\u6837\u5b50\n\n\u65e0\u6cd5\u5426\u8ba4\n\n\u4e0d\u53ef\u60f3\u8c61\n\nq\u4eca\u5929\u8981\u548c\u4ee5\u524d\u7684\u540c\u5b66\u62cd\u201c\u4e2d\u8003\u52a0\u6cb9\u201d\u7684\u89c6\u9891\uff08\u4e00\u5b9a\u4e0d\u80fd\u5fd8\u8bb0\u554a\n\n\u665a\u4e0a\u5403\u996d\u7684\u65f6\u5019\u505a\u4e86\u4e00\u4ef6\u4e0d\u5927\u597d\u7684\u4e8b\u60c5\uff0c\u5c31\u662fcrq\u5728\u5403\u996d\u7684\u65f6\u5019\u5bf9\u7740\u4ed6\u53e3\u82e5\u60ac\u6cb3\n\n\u8fd9\u592a\u4e0d\u597d\u4e86\uff0c\u4f46\uff0c\u6211\u6ca1\u60f3\u597d\u600e\u4e48\u5f25\u8865\n\n\u665a\u4e0a y\u548cq\u804a\u8d77\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\u4e1c\u897f\uff0c\u5f53\u7136\u8fd9\u662f\u504f\u54f2\u5b66\u7cfb\u7684\u8ba8\u8bba\n\n\u6211\u6beb\u4e0d\u5ba2\u6c14\u7684\u63d2\u5165\u8bdd\u9898\uff0c\u4f46\u662f\u611f\u89c9\u4e0d\u5927\u597d\n\n\u4f46\u662f\u5979\u4e00\u4e2a\u4eba\u4f9d\u65e7\u6b63\u5e38\u53d1\u8a00\uff0c\u8fd8\u662f\u6709\u4e9b\u6536\u655b\u7684\u611f\u89c9\uff0c\u6211\u4f9d\u65e7\u4f1a\u88ab\u5bb3\u6015\n\n\u804a\u4e86\u5f88\u591a\uff0cy\u7684\u5c0f\u5b66\uff0cy\u6240\u9762\u5bf9\u7684\u4eba\u7684\u4f4e\u77e5\u8bc6\u7a0b\u5ea6\uff0cq\u4e3d\u65e5\u5c0f\u5b66\uff0cy\u5c0f\u5b66\u5f53\u8fc7\u9f13\u53f7\u961f\u7684\uff0cy\u5bb6\u91cc\u7684\u7ed3\u6784\uff0cy\u7684\u5c0f\u5b66\u53ca\u4ee5\u524d\u4e0d\u559c\u6b22\u548c\u5988\u5988\u4f4f\uff0c\u4f46\u540e\u6765\u4f9d\u65e7\u56de\u53bb\uff0cy\u7684\u5976\u5976\u5f88\u548c\u8c10\uff0c\uff08\u5927\u53a8\n\n\u6700\u540e\u79bb\u5f00\u673a\u623f\u592a\u53cd\u5e38\u7684\uff0c\u4ed6\u4eec\u51e0\u4e2a\u4eba\u63d0\u524d\u79bb\u5f00\uff0c\u5c31\u5269\u4e0b\u6211\u4e00\u4e2a\u4eba\uff0c\u6211\u3002\u3002\n\n\u7136\u540e\u8bd5\u8bd5\u81ea\u5df1\u505a\u7684\u5c0f\u4e1c\u897f\uff0c\u4f46\u662f\uff0cQQ\u6709\u53cd\u6df7\u6dc6\uff0cemm\n\n# 3.4\n\n\u6628\u665a\u505a\u4e86\u4e00\u4e2a\u68a6\uff0cy\u548c\u6211\u88ab\u53eb\u5230\u4e00\u4e2a\u5730\u65b9\n\n\u88ab\u63d0\u95ee\u4e86\u4e00\u4e2a\u95ee\u9898\uff0c\u4f60\u4eec\u662f\u4ec0\u4e48\u7406\u7531\u5728\u4e00\u8d77\u7684\uff08\u601d\u7eea\u6df7\u4e71\uff0c\u6ca1\u6709\u53ca\u65f6\u56de\u5fc6\u7684\u540e\u679c\uff09\n\n# 3.5-3.6\n\n\u8fd9\u4e9b\u75313.8\u56de\u5fc6\n\n\u60ca\u5947\u7684\u53d1\u73b0\u4e00\u76f4\u5750\u76846\u8def\u516c\u4ea4\u8f66\u53ea\u6709\u4e00\u8f86\uff0c(\u5927sad\uff0c\u548cy\u5728\u516c\u4ea4\u8f66\u4e0a\u6253\u97f3\u6e38\n\n\u7b2c\u4e00\u6b21\u6253\u4e2d\u4e8c\u5305\uff0c\u7684\u786e\u6709\u70b9\u56f0\u96be\n\n\u4e0b\u5348\u548cyyx\u4e00\u8d77\u53bb\u51fa\u52e4\uff0c\u4e00\u5207\u90fd\u662f\u90a3\u4e48\u7684\u65b0\u9c9c\uff0cqwq\n\nmaimai\u8c8c\u4f3c\u591a\u7ec3\u5c31\u53ef\u4ee5\uff08\u5927\u96fe\n\n\u603b\u4e4b\u6ca1\u4ec0\u4e48\u505a\u4e0d\u5230\u7684\u628a\uff08\u597d\u50cf\u6709\n\n\u5468\u516d\u665a\u4e0aq\u548cy\u4f30\u8ba1\u662f\u5728\u804a\u5929\uff08\u918b\u610f\u5927\u53d1\n\n\u665a\u4e0a3\u70b9\u4ed6\u4eec\u8fd8\u6ca1\u7761\n\n\u5468\u65e5\u6ca1\u4ec0\u4e48\u4e0d\u597d\u7684\uff0c\u5c31\u662f\u526a\u4e86\u4e2a\u5934\u53d1\n\n\u5934\u53d1\u5c34\u5c2c\u671f\u8c8c\u4f3c\u662f\u6709\u7684\uff0c\u4f46\u662f\u4e0d\u662f\u5f88\u660e\u663e\n\n\u665a\u4e0a\u56de\u5230\u673a\u623f\uff0c\u8bf4\u9519\u7684\u4e00\u53e5\u8bdd\u5c31\u662ft1\u5de8\u7b80\u5355\uff0c\u4f46\u662f\u6211\u8fd8\u662f\u4ea4\u4e86\u4e24\u53d1\uff0c\u5bc4\n\ny\u4f3c\u4e4e\u88ab\u8bf4\u5230\u5fc3\u60c5\u5f88\u4e0d\u597d\uff0c\u4f46\u603b\u611f\u89c9\u54ea\u91cc\u4e0d\u5bf9\u52b2\n\n# 3.7\n\n\u4eca\u5929\u4f9d\u65e7\u75313.8\u56de\u5fc6\n\n\u65e9\u4e0a&\u4e2d\u5348\u5e76\u6ca1\u6709\u4ec0\u4e48\u4e8b\u60c5\u53d1\u751f\u5462\n\n\u55ef\uff0c\u4e2d\u5348\u5728\u548c\u5927\u5bb6\u5403\u996d\u7684\u65f6\u5019\uff0cy\u548cq\u548cx\u60ca\u5947\u7684\u773c\u778e~~\uff08\u6218\u672f~~\n\n\u665a\u4e0a\u5c31\u771f\u7684\u6ca1\u4ec0\u4e48\u4e86\uff08\u5047\n\nzb\u548c\u5176\u4ed6\u51e0\u4f4d\u5927\u4f6c\u6765\u673a\u623f\uff0cjqy\u4e5f\u6765\u901b\u901b\uff0c\u6211\u6709\u4e00\u4e2a\u5927\u7591\u60d1\uff0c\u4e0d\u77e5\u9053\u8bf4\u4e0d\u8bf4\u771f\u76f8\n\n\u4e5f\u8bb8\u63a9\u57cb\u5c31\u662f\u6700\u597d\u7684\u4fdd\u62a4\u5427\n\n# 3.8\n\n\u4eca\u5929\u662f3.8\u8282\n\n\u55ef\uff0c\u8be5\u8bf4\u7684\u90fd\u6709\u8bf4\n\n\u4eca\u665a\u53d1\u751f\u4e86\u4e00\u4e9b\u4e0d\u5927\u597d\u7684\u4e8b\u60c5\n\ny\u81ea\u5df1\u53bb\u627eq\u5199\u6570\u5b66\u5468\u7ec3\uff0c\u4e24\u4e2a\u4eba\u4f3c\u4e4e\u804a\u7684\u5f88\u5f00\u5fc3\n\n\u8fd9\u662f\u6211\u6ca1\u60f3\u5230\u7684\n\n\u592a\u96be\u53d7\u4e86\uff0c\u6211\u73b0\u5728\u7684\u5fc3\u60c5\u7b80\u76f4\u6709\u4e9b\u4e0d\u77e5\u6240\u63aa\n\n\u4e24\u4e2a\u4eba\u8fd8\u4e92\u76f8\u629b\u5a9a\u773c\uff0c\u771f\u7684\u4e0d\u77e5\u9053\u600e\u4e48\u89e3\u91ca\uff0c\u6211\u8c8c\u4f3c\u662f\u90a3\u4e2a\u72ec\u7acb\u5f00\u6765\u7684\u4eba\n\n\u6211\u4f3c\u4e4e\u63d2\u5165\u4e0d\u4e86\u4ed6\u4eec\u7684\u804a\u5929\uff0c\u63d2\u5165\u4e0d\u4e86\n\n\u6211\u60f3\u8981\u9760\u8fd1\u7684\u65f6\u5019\uff0cy\u8fd8\u906e\u4f4f\u4e0d\u7ed9\u6211\u770b\uff0c\u5fc3\u60c5\u5341\u5206\u7684\u96be\u53d7\n", "link": "/posts/Diary-2022.3/", "tags": ["diary"], "categories": [["diary"]]}, {"title": "Note sth", "content": "\nNth...\n\n<https://www.luogu.com.cn/blog/fzj2007/solution-p1932>\u9ad8\u7cbe\u5ea6\n\n\u56db\u3001\u5e38\u89c1\u8bc4\u6d4b\u7ed3\u679c\n\n\uff081\uff09Accepted \u6b63\u786e\u901a\u8fc7\n\n\uff082\uff09Compile Error \u7f16\u8bd1\u9519\u8bef\uff08\u9009\u9519\u8bed\u8a00/\u5934\u6587\u4ef6/\u8bed\u6cd5\u7b49\uff09\n\n\uff083\uff09Runtime Error \u8fd0\u884c\u65f6\u9519\u8bef\uff1a\u5185\u5b58\u975e\u6cd5\u8bbf\u95ee\uff08\u6307\u9488\u6307\u5411\u975e\u6cd5\u5185\u5b58\u533a\uff0c\u6570\u7ec4\u8d8a\u754c\u7b49\uff09\u3001\u9012\u5f52\u7206\u6808\u3001\u6d6e\u70b9\u8fd0\u7b97\u9519\u8bef\uff08\u9664\u6570\u4e3a0\uff0c\u6a21\u6570\u4e3a0\uff09\n\n\uff084\uff09Wrong Answer \u7b54\u6848\u9519\u8bef\uff1a\u7a0b\u5e8f\u903b\u8f91\u95ee\u9898\u3001\u591a\u8f93\u51fa\u4e86\u8c03\u8bd5\u4fe1\u606f\n\n\uff085\uff09Presentation Error \u683c\u5f0f\u9519\u8bef\uff1a\u5df2\u7ecf\u6781\u4e3a\u63a5\u8fd1Accepted\uff0c\u4e00\u822c\u662f\u591a\u8f93\u51fa\u4e86\u6362\u884c\u6216\u7a7a\u683c\u7b26\n\n\uff086\uff09Time Limit Exceeded \u8fd0\u884c\u8d85\u65f6\uff1a\u68c0\u67e5\u6570\u636e\u89c4\u6a21\u4e0e\u65f6\u95f4\u590d\u6742\u5ea6\n\n\uff087\uff09Memory Limit Exceeded \u5185\u5b58\u8d85\u9650\uff1a\u4e0d\u80fd\u5728\u51fd\u6570\u5185\u90e8\u5f00\u8fc7\u5927\u7684\u5c40\u90e8\u6570\u7ec4\uff0c\u5927\u6570\u7ec4\u5e94\u5728\u5168\u5c40\u533a\u5f00\u8f9f\u3001\u68c0\u67e5\u7a7a\u95f4\u7533\u8bf7\u91cf\n\n\uff088\uff09Output Limit Exceeded \u8f93\u51fa\u8d85\u9650\uff1a\u6b7b\u5faa\u73af\u8f93\u51fa\u8fc7\u591a\u5185\u5bb9\n\n<https://www.luogu.com.cn/team/21355#problem>\u6a21\u677f\n<https://www.luogu.com.cn/blog/zhangxiang666/zhu-ye>\n<https://ak-ioi.com/>\n<https://blog.csdn.net/saramanda/article/details/55253627>\n\n\u6211\u5565\u65f6\u5019\u53ef\u4ee5\u6574\u7406blog\u554a\n\ncnm\uff08\uff08\uff08\uff08\uff08\n\n\n\u613f\u671b\u6e05\u5355\uff1a\n\n\u4e00\u5f20\u663e\u5361\n\n<https://detail.tmall.com/item.htm?id=646468039603&skuId=4823162261431>\n\n<https://detail.tmall.com/item.htm?id=646468039603&skuId=4823162261432>\n\n<https://detail.tmall.com/item.htm?id=632399684473&skuId=4934861347625>\n\n<https://detail.tmall.com/item.htm?id=632399684473&skuId=4934861347628>\n\n<https://detail.tmall.com/item.htm?id=628760780145&skuId=4991739462201>\n\n<https://detail.tmall.com/item.htm?id=627025629245&skuId=4814219932658>\n\n<https://detail.tmall.com/item.htm?id=627548931418&skuId=4823019513714>\n\n\u4e00\u4e2a\u4e91\u53f0\u76f8\u673a\n\n<https://item.jd.com/100013599475.html>\n\n<https://detail.tmall.com/item.htm?id=628172986577&skuId=4685942625274>\n\n\u4e00\u4e2a\u76f8\u673a\n\n\u4e00\u4e2a\u65e0\u4eba\u673a\n\n<https://detail.tmall.com/item.htm?id=627875409109&skuId=4660983322269>\n\n\u4e00\u4e2aipadpro\n\n<https://www.apple.com.cn/shop/buy-ipad/ipad-pro/MHQU3CH/A>\n\n\u4e00\u4e2aZX505\n\n<https://www.sonystyle.com.cn/products/media_player/nw_zx500/nw_zx505_b.html>\n\n<https://detail.tmall.com/item.htm?id=603624385949&skuId=4676466412977>\n\n<https://item.jd.com/100009231070.html>\n\n\u4e00\u4e2a\u5f55\u97f3\u7b14\n\n<https://item.jd.com/100010788741.html>", "link": "/posts/!Note-sth/", "tags": [], "categories": []}, {"title": "NOI\u5927\u7eb2[\u8df3\u8f6c]", "content": "\n<details>\n    <summary>\u8df3\u8f6cCCF\u5927\u7eb2</summary>\n    <div id='from'></div>\n    <p><button onclick=\"document.getElementById('from').innerHTML='<iframe src=&quot;https://www.noi.cn/generic/web/viewer.html?file=/upload/resources/file/2021/04/06/152179.pdf&quot; width=100% height=800px style=& quotborder: none;&quot;><iframe>'\"class='mdui-btn mdui-btn-raised'>\u70b9\u51fb\u52a0\u8f7d</button>\n\t<a class='mdui-btn mdui-btn-raised' href=\"https://www.noi.cn/upload/resources/file/2021/04/06/152179.pdf\" target='_blank'>\u70b9\u51fb\u8df3\u8f6c</a>\n</details>", "link": "/posts/NOI-da-gang-[-tiao-zhuan-]/", "tags": [], "categories": []}, {"title": "git setting", "content": "\n```\ngit config --global http.proxy http://127.0.0.1:1080\ngit config --global https.proxy https://127.0.0.1:1080\ngit config --global user.name \"RocksonLee\" \ngit config --global user.email \"lixuanzhang0629@163.com\"\n```", "link": "/posts/git-setting/", "tags": [], "categories": []}, {"title": "CSP2021-S2 \u6e38\u8bb0", "content": "\n## Day -1\n\n\u771f\u7684\u6709\u4e00\u8bf4\u4e00\u633a\u7d27\u5f20\u7684\uff0c\u8c8c\u4f3c\u5fd8\u4e86\u5e26\u4ec0\u4e48\uff0c\u5e26\u7684\u5f88\u9f50\u5168\u554a\uff0c\u614c\u554aqwq\n\nCSP-S \u6211\u8fd8\u590d\u4e60\u4e0d\u5168\u554a\uff0cDP\u968f\u4fbf\u6253\u4e86\u51e0\u9053\u9898\uff0c\u4e0d\u8fc7\u8fd8\u662f\u611f\u89c9\u633a\u9893\u5e9f\u7684\n\n\u8fd9\u51e0\u5929\u6211tm\u5728\u5e72\u4ec0\u4e48>_<\n\n\u8349~\n\n## Day 1\n\n### \u524d\u5f80\u5e7f\u5dde\n\n\u8c8c\u4f3c\u6ca1\u4ec0\u4e48\u597d\u8bf4\u7684\uff0c\u65e9\u4e0a9.10\u624d\u8d77\u5e8a\uff0c\u6211\u5988\u4e00\u76f4\u50ac\u6211\uff0c\u5934\u6655\u554a\u3002\u3002\n\n\u62c9\u5df4\u62c9\u8d76\u7d27\u8dd1\u5230\u6c55\u5934\u7ad9\uff0c\u547c\u2014\u2014\u8fd8\u662f\u8d76\u4e0a\u4e86\u52a8\u8f66\uff08\u4e5f\u6ca1\u6709\u8d76\u4e0d\u4e0a\u8fd9\u56de\u4e8b\n\n\u9047\u5230xgf\uff0cxrc\u4ed6\u4eec\u521d\u4e09\u7684\uff0cJS\u8fd9\u4e00\u5c4a\u90fd\u597d\u5f3a\u554a,\u4ec0\u4e48\u7206\u5207\u7eff\u9898\u7684\u780d\u74dc\u5207\u83dc\uff1ftql\n\n\uff08JS23\u5c4a\u4e00\u4e2a\u90fd\u4e0d\u8ba4\u8bc6\uff0c\u6211\u5410\u4e86\uff09\n\n\u8865\u4e00\u53e5\uff1axgf\u563f\u563f\uff0cxgf~~\n\n### \u9152\u5e97\n\n\u8fd9\u9152\u5e97~~\u53c8\u9999\u53c8\u9999\u7684~~\u81ed\u6b7b\u4e86\uff0c\u6211\u4eba\u50bb\u4e86\u3002\u3002\u4e0d\u884c\uff01\u6211\u8981\u5f00\u7a97\uff01\uff01\uff01\n\n\u6536\u62fe\u4e86\u4e00\u4e0b\uff0c\u5e2extx\u91cd\u641e\u4e86\u4e00\u4e0b\u6211\u7684\u5e9f\u4f5cU\u76d8\uff0c\u989d\uff0c\u6750\u6599\u53c8\u88ab\u6211\u641e\u574f\u4e86\uff0c\u6211\u7684\u677f\u5b50\u554a\uff0c555\u3002sblxz\uff0c\u4f60\u771f\u7684sb\n\n\u5446\u4e86\u4e00\u4f1a\uff08\u5176\u5b9e\u5446\u4e86\u5f88\u4e45\uff09\uff0c\u6211\u4eec\u4e00\u7fa4\u9ad8\u4e00\u7684\u5c31\u4e00\u8d77\u53bb\u5403\u5348\u996d\uff08\u6ca1\u9519\uff0c15.30\u4e5f\u662f\u53ef\u4ee5\u5f53\u5348\u996d\u5403\u7684\uff09\n\n\u62c9\u9762\u9986\uff0c\u55ef\uff0c\u4e09\u5e74CSP\u90fd\u662f\u62c9\u9762\u9986\u8fc7\u7684\uff0c\u62c9\u9762\uff0c\u6211\u7684\u62c9\u9762www\uff0c\u600e\u4e48\u53c8\u5403\u62c9\u9762\n\n### \u665a\u4e0a\n\n\u6df1\u591c\u964d\u4e34\uff0c\u6211\u4e0d\u77e5\u5982\u4f55\u89e3\u51b3\u90a3\u6211\u65e0\u8bed\u7684\u4ee3\u7801\n\n\u7528\u4e86\u597d\u4e45\u7684vscode\uff0c\u6211\u8fd8\u80fd\u4e60\u60efdevc++\u5417\uff1f\n\n\u6253\u4e86\u597d\u4e45\u7684\u6a21\u677f\uff0c\u770b\u4e86\u5230\u5e95\u6709\u7528\u5417\u3002\u3002\n\n\u4e0d\u65ad\u7684\u7ffb\u9605\uff0c\u4e0d\u65ad\u7684\u7ffb\u9605\u90a3\u5f20\u8584\u8584\u7684\u300aOI\u6ce8\u610f\u4e8b\u9879\u300b\n\n\u5355\u8c03\u961f\u5217\uff0c\u4f18\u5148\u961f\u5217\uff0ctarjan\uff0c\u80cc\u5305\uff0c\u591a\u91cd\u80cc\u5305\uff0c\u72b6\u538bDP\uff0c\u533a\u95f4DP\uff0c\u90fd\u662f\u6211\u8fd8\u662f\u641e\u4e0d\u61c2\u7684\u4e1c\u897f\u3002\n\n\u4e00\u591c\u6210\u4f5b\uff1f\u4e0d\u53ef\u80fd\u7684\u5427\uff0c\u7761\u4e86\u2014\u2014\u2014\u2014\n\n\u8349\uff0c12.05\u4e86...\u5728\u7761\u4e86...\n\n## Day 2\n\n### \u65e9\u4e0a\n\n- 7.00\n\n\u8d77\u5e8a\u4e86\uff0c\u8349\uff0c\u600e\u4e48\u8fd9\u4e48\u65e9\uff0c\u6211\u8fd8\u60f3\u8981\u597d\u597d\u7761\u89c9\u554a\uff0c555\uff0c\u8ba9\u6211\u591a\u7761\u70b9\u5427\n\n\u6211\u6c42\u6c42\u4e86\uff08\u5b9e\u9645\u4e0a\u8fd8\u662f\u7761\u4e0d\u7740\uff09\n\n\u5403\u4e86\u4e00\u987f\u4e0d\u7b97\u5f88\u5dee\u7684\u65e9\u9910\uff0c\u4e00\u7897\u76ae\u86cb\u7626\u8089\u7ca5\uff0c\u8fd8\u633a\u4e0d\u9519\u7684\uff0c\u4e3b\u8981\u662f\u592a\u4e45\u6ca1\u5403\u8fc7\u76ae\u86cb\u7ca5\u4e86\u5427\u3002\u3002\u3002\n\n- 8.50 \n\n\u6f6e\u5b9e\u7684\u51e0\u4f4d\u5927\u4f6c\u6765\u4e32\u95e8\u4e86\uff08\u4ed6\u4eec\u8fd8\u4ee5\u4e3a\u6211\u4eec\u662f\u91d1\u5357\u7684\u521d\u4e2d\u751f\uff09\n\n```\nxgf\uff1a\u5927\u4f6c\u5927\u4f6c\njzg\uff1a\u4f60\u4eec\u4e0d\u662fpj\u7684\u5417\uff1f\nxgf\uff1a\u662f\u554a\uff0c\u6211\u4eec\u53bb\u5b8c\u56de\u6765\u4e86\uff0c\u63d0\u524d\u51fa\u6765\u4e86\u554a\ncs\u4f17\uff1a\uff1f\uff1f\nxgf\uff1at1\u5f88\u6c34\uff0c\u968f\u4fbf\u5207\u4e86\nxgf\uff1at2\u5acc\u592a\u96be\u4e86\uff0c\u5c31\u6253\u4e86\u90e8\u5206\u5206\u51fa\u6765\u4e86\uff0c\u540e\u9762\u90fd\u6ca1\u591a\u770b\nlxz\uff1at3\u4e0d\u662f\u4e00\u9053DP\u561b\nxgf\uff1at3t4\u96be\u8c03\uff0c\u4e0d\u60f3\u5199\uff0c\u76f4\u63a5\u51fa\u6765\u4e86...\n```\n\n\u8c8c\u4f3c\u5927\u5bb6\u542c\u5b8c\u90fd\u90fd\u61c2\u4e86\uff08expect jzg\uff09\n\njzg\uff08cs\uff09\u8fd8\u5174\u81f4\u52c3\u52c3\u6559\u6211\u4eecLCA\u548cRMQ\uff0cqwq\n\n\u6211\u4eec\u8fde\u5e76\u67e5\u96c6\u90fd\u4e0d\u4f1a\u5462\uff08\u96fe\n\n- 12.20\n\npj\u4eca\u5e74\u610f\u5916\u7684\u7b80\u5355\u5462\uff08\uff1f\n\n### \u6bd4\u8d5b\n\n<details>\n    <summary>To CCF</summary>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n    <p> cnm </p>\n</details>\n\n\u600e\u4e48\u8bf4\u5462\uff0c\u5c31\u662f\u70b8\u4e86\uff0c\u8003\u573a\u4e0a\u4e0a\u53bb\uff0ct1\u4e0d\u662f\u9053\u6a21\u62df\uff1ft3\u8c8c\u4f3c\u53ef\u4ee5\u533a\u95f4dp\u89e3\u51b3\uff1f\n\n\u7136\u540e\n\n\u8c03\u4e864\u5c0f\u65f6\u7684t1\uff1b\n\n\u8c03\u51fa\u6765\u4e86\u4e2atle\n\n\u4f60\u7239\n\n### \u665a\u4e0a\n\n\u603b\u6240\u5468\u77e5\uff0c\u4f60\u90fd\u6253\u5b8c\u6bd4\u8d5b\u4e86\uff0c\u96be\u9053\u4e0d\u73a9\u4e00\u4e0b\u561b\uff1f\n\n\u665a\u9910\u5c31\u5403\u4e86\u4e00\u4e0b\u63a2\u9c7c\uff0c\u633a\u5c34\u5c2c\u7684\uff0c\u8fd8\u8ba9yl\u7b49\u6211\u4eec\u5403\u5b8c\uff0c\uff0c\n\n\u548c\u5927\u5bb6\u4e00\u8d77\u5230\u5317\u4eac\u8def\u6b65\u884c\u8857qwq\n\n\u4e0d\u8fc7\u771f\u7684\u6ca1\u4ec0\u4e48\u597d\u73a9\u7684\uff0c\u5c31\u662f\u4e00\u4e9b\u590d\u53e4\u98ce\u5427\u3002\n\n\u5728\u53bb\u7684\u8def\u4e0a\u5c1d\u8bd5\u5355\u624b\u89e3\u51b3inter-usi\uff0c\u8c8c\u4f3c\u4e0d\u884c\uff08\n\n\u4e34\u8d70\u79bb\u5f00\u7684\u65f6\u5019\u6211\u548cyy\u522e\u4e86\u4e24\u5f20\u5f69\u7968\uff081\u300110\u5143\uff0c2\u3001\u6ca1\u5956\uff09=\u4e8f\u4e8610\u5143\n\n\u8c8c\u4f3c\u4e5f\u633a\u5f00\u5fc3\u7684\u5427\uff0c\u548ccrq\uff0czjy\uff0cxtx\u4e00\u8d77\u8d70\u56de\u65c5\u9986\n\n\uff08\u6211\u8981\u8865\u4e00\u5f20\u6b65\u884c\u6210\u679c\u56fe\uff09\n\n\u4e00\u8def\u4e0a\u4ece\u9aa8\u738b\u804a\u5230cytus\u804a\u5230\u65b0\u756a\u548c\u65e7\u756a\uff0c\u610f\u5916\u6536\u83b7zjy\u4e5f\u662f\u4e00\u4e2a\u5f88\u559c\u6b22\u770b\u756a\u7684\u4e8c\u6b21\u5143\uff08\u53c8\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u53ef\u4ee5\u804a\u7684\u8bdd\u9898\n\n\u7136\u540e\u5462\uff0c\u5c31\u7206\u9893\u5e9f\u2014\u2014\u2014\u2014\u2014\u2014\u6211\u6234\u7740\u773c\u955c\uff0c\u6234\u7740\u8033\u673a\uff0c\u624b\u62ff\u624b\u673a\uff08\u663e\u793a\u7740cytus2\uff09\u00b7\u7761\u00b7\u7740\u00b7\u4e86\u00b7\n\n\u8349...\n\n# End\n\n", "link": "/posts/CSP2021-S2--you-ji/", "tags": [], "categories": []}, {"title": "stjzoi\u5237\u9898\u8bb0\u5f55", "content": "\n## \u4ee5\u4e0b\u5747\u4e3aC++\u8bed\u8a00\uff0c\u8f93\u5165\u8f93\u51fa\u4ee5C++\u4e3a\u4e3b\n## \u5b8c\u6210\u65f6\u95f4\u8f83\u4e3a\u4e45\u8fdc\uff0c\u82e5\u52a0\u5f3a\u6570\u636e\uff0c\u53ef\u80fd\u5b58\u5728\u65e0\u6cd5\u8fc7\u7f16\u8bd1\n## \u7801\u98ce\u8f83\u5dee\uff0c\u8fc7\u51e0\u5929\u518d\u4f18\u5316\u5427\n## \u9996\u53d1\u4e8eblog.rockson.top\n\n\n### 1\n```cpp\n#include <cstdio>\nint main()\n{\n\tprintf(\"Hello, World!\");\n\treturn 0;\n}\n```\n\n### 2\n```cpp\n#include <cstdio>\nint main()\n{\n\tprintf(\"Hi,I am ET!\\n!@#$%^&*()<>\");\n\treturn 0;\n}\n```\n\n### 3\n```cpp\n#include <cstdio>\nint main()\n{\n\tprintf(\" * *\\n* @ *\\n * *\");\n\treturn 0;\n}\n```\n\n### 4\n```cpp\n#include <cstdio>\nint main()\n{\n\tscanf(\"%d%d\",&a,&b);\n\tprintf(\"%d\",a+b);\n\treturn 0;\n}\n```\n\n### 5\n```cpp\n#include <cstdio>\nint main()\n{\n\tint a,b,c;\n\tscanf(\"%d%d%d\",&a,&b,&c);\n\tprintf(\"%d\",(a+b)*c);\n\treturn 0;\n}\n```\n\n### 6\n```cpp\n#include <cstdio>\nint main()\n{\n\tint n,x\n\tscanf(\"%d%d\",&n,&x);\n\tprintf(\"Taotao have to pay $%d\",n*x);\n\treturn 0;\n}\n```\n\n### 7\n```cpp\n#include<cstdio>\nint main()\n{\n\tint x,y;\n\tscanf(\"%d%d\",&x,&y);\n\tprintf(\"%d/%d=%d...%d\",x,y,x/y,x%y);\n\treturn 0;\n}\n```\n\n### 8\n```cpp\n#include<cstdio>\nint main()\n{\n\tint a,b,c,d;\n\tscanf(\"%d\",&a);\n\tprintf(\"%d\\n%d\\n%d\\n\",a/100,(a/10)%10,a%10);\n\treturn 0;\n}\n```\n\n### 9\n```cpp\n#include<cstdio>\nint main()\n{\n\tdouble r,V;\n\tscanf(\"%lf\",&r);\n\tprintf(\"%.2lf\",3.14*r*r*r*4/3);\n\treturn 0;\n}\n```\n\n### 10\n```cpp\n#include<cstdio>\nint main()\n{\n\tdouble r;\n\tscanf(\"%lf\",&r);\n\tprintf(\"%.4lf %.4lf %.4lf\\n\",r*2,3.14159*2*r),3.14159*r*r);\n\treturn 0;\n}\n```\n### 11\n```cpp\n#include<cstdio>\nint main()\n{\n\tdouble a,b,c,d,x;\n\tscanf(\"%lf%lf%lf%lf%lf\",&x,&a,&b,&c,&d);\n\tprintf(\"%.7lf\",a*x*x*x+b*x*x+c*x+d);\n\treturn 0;\n}\n```\n### 12\n```cpp\n#include<cstdio>\nint main()\n{\n\tdouble F;\n\tscanf(\"%lf\",&F);\n\tprintf(\"%.5lf\",5*(F-32)/9);\n\treturn 0;\t\n}\n```\n### 13\n```cpp\n#include<cstdio>\n#include<cmath>\nint main()\n{\n\tdouble a,b,c;\n\tscanf(\"%lf%lf%lf\",&a,&b,&c);\n\tprintf(\"%.2lf\",sqrt(1.0*(((a+b+c)/2)*(((a+b+c)/2)-a)*(((a+b+c)/2)-b)*(((a+b+c)/2)-c))));\n\treturn 0;\t\n}\n```\n\n# Building", "link": "/posts/stjzoi-shua-ti-ji-lu/", "tags": [], "categories": []}, {"title": "\u9ad8\u7cbe\u6a21\u677f", "content": "\n\n<details>\n    <summary>\u67e5\u770b\u94fe\u63a5</summary>\n    <div id='from'></div>\n    <p>\n        <a class='mdui-btn mdui-btn-raised' href=\"https://www.cnblogs.com/mrclr/p/9886145.html\" target='_blank'>\u70b9\u51fb\u8df3\u8f6c</a>\n    <p>\n</details>\n\n## \u4ee3\u7801\n\n```cpp\n#include <cstdio>\n#include <cstring>\n#include <iostream>\n#include <algorithm>\n\nusing namespace std;\n\n const int N = 1050;\n \n struct Int {\n \t\n \tint a[N], len;\n \tInt() { memset(a, 0, sizeof(a)); len = 0; }\n \tinline void get() {\n \t\tchar s[N];\n \t\tscanf(\"%s\", s);\n \t\tlen = strlen(s);\n \t\tfor(int i = 0; i < len; i ++ ) a[len - i - 1] = s[i] - '0';\n \t\twhile(!a[len - 1] && len) len -- ;\n\t} inline void write() { for(int i = len - 1; i >= 0; i -- ) cout << a[i]; }\n \tInt operator + (const Int &b) const {\n\t\tInt c;\n\t\tint lenc = max(len, b.len) + 1;\n\t\tfor(int i = 0; i < lenc; i ++ ) {\n\t\t\tc.a[i] += a[i] + b.a[i];\n\t\t\tc.a[i + 1] = c.a[i] / 10;\n\t\t\tc.a[i] %= 10;\n\t\t} while(!c.a[lenc - 1] && lenc) lenc -- ;\n\t\tc.len = lenc;\n\t\treturn c;\n\t} Int operator - (const Int &b) const {\n\t\tInt c;\n\t\tfor(int i = 0; i < len; i ++ ) {\n\t\t\tc.a[i] = a[i] - b.a[i];\n\t\t\tif(c.a[i] < 0) a[i + 1] -- , c.a[i] += 10;\n\t\t} c.len = len;\n\t\twhile(!c.a[c.len - 1] && c.len) c.len -- ;\n\t\treturn c;\n\t} Int operator * (const Int &b) const {\n\t\tInt c;\n\t\tfor(int i = 0; i < len; i ++ )\n\t\t\tfor(int j = 0; j < b.len; j ++ ) {\n\t\t\t\tc.a[i + j] += a[i] * b.a[j];\n\t\t\t\tc.a[i + j + 1] += c.a[i + j] / 10;\n\t\t\t\tc.a[i + j] %= 10;\n\t\t\t} c.len = len + b.len;\n\t\twhile(!c.a[c.len - 1] && c.len) c.len -- ;\n\t\treturn c;\n\t} Int operator / (const int &x) const {\n\t\tInt c;\n\t\tint ret = 0;\n\t\tfor(int i = len - 1; i >= 0; i -- ) {\n\t\t\tret *= 10; ret += a[i];\n\t\t\tc.a[c.len ++ ] = ret / 10;\n\t\t\tret %= 10;\n\t\t} reverse(c.a, c.a + c.len);\n\t} while(!c.a[c.len - 1] && c.len) c.len -- ;\n\treturn c;\n\tint operator % (const int &mod) const {\n\t\tint res = 0;\n\t\tfor(int i = len - 1; i >= 0; i -- ) res = res * 10 + a[i], res %= mod;\n\t\treturn res;\n\t} bool operator < (const Int &b) const {\n\t\tif(len != b.len) return len < b.len;\n\t\tfor(int i = len - 1; i >= 0; i -- ) if(a[i] != b.a[i]) return a[i] < b.a[i];\n\t\treturn 0;\n\t}\n };\n \n Int Max(Int a, Int b) {\n \t\n \tif(a.len > b.len) return a;\n \tif(a.len < b.len) return b;\n \tfor(int i = a.len - 1; i >= 0; i -- ) {\n \t\tif(a.a[i] > b.a[i]) return a;\n \t\tif(b.a[i] > a.a[i]) return b;\n\t } return a;\n }\n```", "link": "/posts/gao-jing-mu-ban/", "tags": ["\u9ad8\u7cbe\u5ea6", "\u6bd4\u8d5b\u5e38\u7528"], "categories": [["note"]]}, {"title": "Diary-2021.10", "content": "\n## 10.1\n\n\u4eca\u5929\u6700\u663e\u8457\u7684\u7279\u70b9\u5c31\u662f\u65e0\u6240\u4e8b\u4e8b\u554a\uff0c\u4ec0\u4e48\u7684\u3002\u4eca\u5929\u597d\u65e0\u804a\u554a\uff0c\u91cd\u65b0\u548c~~JEG~~JSG\u7684ws&&xtx\u4e00\u8d77\u9893\u4e00\u4e2a\u65b0\u5751\u2014\u2014\u827e\u7ef4\u7a7a\u5c9b  \n\n\u597d\u65e0\u804a\u554a\uff0c\u6709\u70b9\u60f3cql...\n\n## 10.2\n\n\u7ee7\u7eed\u9893\u5e9fqwq  \n\narc ptt ->8.97 good  \n\n\n\u4e0b\u534815\uff1a00\u53bb\u627e\u4e86ylx\uff0cu1s1\u5f53\u65f6\u633a\u9707\u60ca\u7684\uff0cylx\u5c45\u7136\u6709npy\u4e86\uff0cwoc\uff0c\u6211\u6709\u88ab\u5413\u5230\uff0c\u4ed6\u600e\u4e48\u6709\u4e86>_<\u3002  \n\nyyt\u5916\u8c8c\u8fd8\u53ef\u4ee5\u5427\uff0c\u7709\u6e05\u76ee\u79c0\u7684\uff0c\u4e5f\u4e0d\u662f\u5f88\u7ed9\u4eba\u4e00\u79cd\u8033\u76ee\u4e00\u65b0\u7684\u611f\u89c9\uff0cylx\u5f88\u5e78\u798f\uff08\u6211\u53c8\u9178\u4e86  \n\nylx\u53c8\u4e0d\u4f1a\u8bf4\u8bdd\uff0c\u53c8\u4e0d\u4f1a\u548cnpy\u4ea4\u6d41\u4ec0\u4e48\u7684\uff0c\u4e5f\u4e0d\u4f1a\u6ce8\u610f\u573a\u5408qwq\uff0c\u4e8fyyt\u540c\u610f  \n\nyyt\u771f\u7684\u597d\u8d24\u60e0\u554a  \n\n\u6211\u597d\u559c\u6b22\u8fd9\u79cd\u554a  \n\n## 10.3\n\n\u8349\u3002yyt\u548cylx\u8fd9\u4e24\u4e2a\u4eba\u5230\u56fe\u4e66\u9986\u8fd8\u9700\u8981\u6211\u4e00\u8d77\u53bb\u554a\u5582\uff0c\u5988\u7684\u597d\u70e6\uff08\u607c\uff09\n\n\u4e0d\u8fc7\u4e0d\u5c0f\u5fc3\u628a\u4ed6\u4eec\u4e24\u4e2a\u505a\u4e86\u4e0d\u540c\u684c\u5b50\uff0c\u6709\u70b9\u4e0d\u597d\u610f\u601d\u3002\n\n\u539f\u672c\u60f3\u8981\u548c\u4ed6\u4eec\u4e24\u4e2a\u4e00\u8d77\u5403\u996d\u7684\uff0c\u4f46\u662fylx\u4e0d\u8981\uff0cemm\uff0c\u90a3\u5c31\u8ddf\u8e2a\uff1f\u8fd8\u8ddf\u4e22\u4e86\uff0cnm\uff1b\n\n\u4e0d\u4ec5\u8ddf\u4e22\u4e86\u8fd8\u6ca1\u5403\u996d\uff0c\u8349\uff0c\u6211\u597d\u5e7c\u7a1a\u3002\u3002\u3002\u3002\n\n\u4e0b\u53481.00\u540e\u8fd8\u6709\u5267\u672c\u6740\uff0c\u633a\u597d\u73a9\u7684\uff0c\u4e0d\u8fc7\u5c2c\u6b7b\u4e86\uff0c\u6211\u8bf4\u4e86\u4e00\u4e9b\u5947\u5947\u602a\u602a\u7684\uff0cemm\u592a\u4e3b\u5bfc\u4e86\uff0c\u6ca1\u6709\u4ec0\u4e48\u522b\u4eba\u53d1\u6325\u7684\u7a7a\u95f4\u5427\n\n## 10.4\n\n\u7761\u4e86\u597d\u957f\u4e00\u6bb5\u65f6\u95f4\uff0c\u6628\u665a\u7761\u7720\u8d28\u91cf\u771f\u597d\uff0c\u4e5f\u5bf9\uff0c\u6628\u5929\u665a\u4e0aptt->9\u4e86\uff0c\u5f00\u5fc3\uff1b\n\n\u4eca\u5929\u4e5f\u601d\u8003\u4e86\u5f88\u591a\u554a\uff0cyxy\u5f88\u6f02\u4eae\u554a\uff0cljy\u4e5f\u662f\uff0c\u4e24\u4e2a\u4eba\u6027\u683c\u90fd\u4e0d\u9519\u3002\n\n\u5443\uff0c\u4f46\u662f\u8fd8\u662f\u6709\u70b9\u653e\u5fc3\u4e0d\u4e0bcql\uff0c\u53ef\u662f\u6700\u8fd1cql\u90fd\u4e0d\u7406\u6211\u4e86\uff0c\u5fae\u4fe1\u4e5f\u4e0d\u4e0aqwq\n\n**\u65e0\u804a\u65e0\u804a\u597d\u65e0\u804a**\n\n## 10.16\n\n\u5c3c\u739b\uff0c\u8fd9tarjan\u600e\u4e48\u8fd9\u6837\u554a\uff0c\u6211\u5410\u4e86qwq\uff0c\u6253\u51fa\u6765\u7684\u4e0estd\u5dee\u4e00\u70b9\uff080/-1\uff09\n\n\u8fd9\u6668\u5149\u7684\u51c9\u7c89\u600e\u4e48\u5473\u9053\u8fd9\u4e48\u602a\uff08\uff09\n\ntarjan-\u7f29\u70b9\u221a\n\n## 10.29\n\n\u597d\u4e45\u90fd\u6ca1\u6709\u5199\u8fc7\u65e5\u8bb0\u4e86\uff0c555\n\n\u548cyxy\u5728QQ\u4e0a\u804a\u4e86\u8bb8\u4e45\uff0c\u5177\u4f53\u770b\u804a\u5929\u8bb0\u5f55\n\n\u5979\u662f\u4e00\u4e2a\u5bf9oi\u5f88\u6709\u6267\u5ff5\u7684\u5973\u9009\u624b\uff0c\u7ecf\u5e38\u89c9\u5f97\u5979\u81ea\u5df1\u6280\u4e0d\u5982\u4eba\uff0c\u81ea\u5351\u3002\u3002\u3002\n\n\u5176\u5b9e\u5979\u81ea\u5df1\u5f88\u5f3a\u7684\uff0c\u4f46\uff0c\u5979\u89c9\u5f97\u8fd9\u4e0d\u662f\u5979\u80fd\u591f\u81ea\u4fe1\u7684\u8d44\u672c\n\n\u5979\u60f3\u8981\u518d\u5f3a\u4e00\u70b9\uff0c\u518d\u5f3a\u4e00\u4e9b\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u6709\u5f88\u591a\u987e\u8651\u7684qwq\n\nqwq\n\nyxy\u8fd8\u662f\u6211\u7684idol\u554a\uff0c\u6ca1\u6bdb\u75c5\u4e86\n\n# End\n\n", "link": "/posts/Diary-2021.10/", "tags": ["diary"], "categories": [["diary"]]}, {"title": "\u9006\u5e8f\u5bf9\u8be6\u89e3", "content": "## \u5f52\u5e76\u6392\u5e8f\n<details>\n    <summary>\u67e5\u770b\u94fe\u63a5</summary>\n    <div id='from'></div>\n    <p><button onclick=\"document.getElementById('from').innerHTML='<iframe src=&quot;https://www.luogu.com.cn/blog/qqq1112/solution-p1908&quot; width=100% height=800px style=& quotborder: none;&quot;><iframe>'\"class='mdui-btn mdui-btn-raised'>\u70b9\u51fb\u52a0\u8f7d</button>\n\t<a class='mdui-btn mdui-btn-raised' href=\"https://www.luogu.com.cn/blog/qqq1112/solution-p1908\" target='_blank'>\u70b9\u51fb\u8df3\u8f6c</a>\u3001\n</details>\n\n## \u6811\u72b6\u6570\u7ec4\n<details>\n    <summary>\u67e5\u770b\u94fe\u63a5</summary>\n\t<a class='mdui-btn mdui-btn-raised' href=\"https://www.cnblogs.com/xenny/p/9739600.html\" target='_blank'>\u70b9\u51fb\u8df3\u8f6c</a>\u3001\n</details>\n", "link": "/posts/ni-xu-dui-xiang-jie/", "tags": ["\u9006\u5e8f\u5bf9", "\u6811\u72b6\u6570\u7ec4", "ing", "\u5f52\u5e76\u6392\u5e8f"], "categories": [["note"]]}, {"title": "\u624b\u5199int128", "content": "\n\n# \u8fd9\u4e2a\u4e1c\u897f\u6709\u5f85\u8003\u8bc1\u548c\u4f18\u5316\n### \u4ee3\u7801\u5982\u4e0b\n```cpp\n#include <iostream>\n#include <cstdio>\n#include <stack>\n#include <cstring>\nusing namespace std;\n//\u4ece\u8fd9\u91cc\u5230100\u884c\u90fd\u662fint128\u7684\u8fd0\u7b97\u4ee3\u7801\ntypedef struct _tword\n{\n    unsigned long long rah; //\u9ad864\u4f4d\n    unsigned long long ral; //\u4f4e64\u4f4d\n    friend bool operator<(const _tword &a, const _tword &b)\n    {\n        if (a.rah < b.rah)\n            return (1);\n        if (a.rah > b.rah)\n            return (0);\n        return (a.ral < b.ral);\n    }\n} tword; //\u8fd9\u4e2a\u7ed3\u6784\u4f53\u5c31\u662f128\u4f4d\u6574\u6570\u4e86\nunsigned long long hbt = 1;\nunsigned long long man32;  //0~31\u4f4d\u51681\nunsigned long long man32h; //32~63\u4f4d\u51681\nvoid add(tword a, tword b, tword &res)\n{\n    unsigned long long al = a.ral & man32;\n    unsigned long long ah = (a.ral & man32h) >> 32;\n    unsigned long long bl = b.ral & man32;\n    unsigned long long bh = (b.ral & man32h) >> 32;\n    //\u56e0\u4e3a\u8fd9\u91cc\u9700\u8981\u5904\u7406\u8fdb\u4f4d\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u628a128\u4f4d\u62c6\u62104\u4e2a32\u4f4d\u5e76\u628a\u5b83\u4eec\u6269\u5145\u81f364\u4f4d\uff0c\u8fd9\u6837\u5c31\u80fd\u901a\u8fc7\u5bf9\u7ed3\u679c\u7684\u9ad832\u4f4d\u7684\u5904\u7406\u6765\u52a0\u4e0a\u8fdb\u4f4d\n    al += bl;\n    ah = ah + bh + ((al & man32h) >> 32);\n    res.rah = a.rah + b.rah + ((ah & man32h) >> 32);\n    res.ral = ((ah & man32) << 32) | (al & man32);\n} //128\u4f4d\u52a0\u6cd5\nvoid kuomul(unsigned long long a, unsigned long long b, tword &res)\n{ //\u8ba1\u7b9764\u4f4d\u00d764\u4f4d=128\u4f4d\n    unsigned long long al = a & man32;\n    unsigned long long ah = (a & man32h) >> 32;\n    unsigned long long bl = b & man32;\n    unsigned long long bh = (b & man32h) >> 32;\n    //ah\u3001al\u4e3aa\u7684\u9ad8\u4f4e32\u4f4d\uff0cbh\u3001bl\u4e3ab\u7684\u9ad8\u4f4e32\u4f4d\uff0c\u5219a*b=(ah*bh)<<32+(ah<<32)*bl+(bh<<32)*al+al*bl\n    unsigned long long albl = al * bl;\n    unsigned long long ahbh = ah * bh;\n    unsigned long long albh = al * bh;\n    unsigned long long ahbl = ah * bl;\n    tword r1, r2, r3, r4;\n    r1.rah = ahbh;\n    r1.ral = 0;\n    r2.rah = 0;\n    r2.ral = albl;\n    r3.ral = (albh & man32) << 32;\n    r3.rah = (albh & man32h) >> 32;\n    r4.ral = (ahbl & man32) << 32;\n    r4.rah = (ahbl & man32h) >> 32;\n    res.rah = 0;\n    res.ral = 0;\n    add(res, r1, res);\n    add(res, r2, res);\n    add(res, r3, res);\n    add(res, r4, res); //\u628a\u56db\u9879\u76f8\u52a0\uff0c\u5f97\u51fa\u7ed3\u679c\n}\nvoid mul(tword a, int b, tword &res)\n{ //128\u4e58int\u7684\u8fd0\u7b97\n    tword tmp;\n    unsigned long long ah = a.rah * b;\n    kuomul(a.ral, b, tmp);\n    unsigned long long al = tmp.ral;\n    res.rah = ah + tmp.rah;\n    res.ral = al;\n}\nint mod10(tword &hint)\n{ //\u628a128\u4f4dhint\u9664\u4ee510\uff0c\u5e76\u8fd4\u56de\u4f59\u6570\n    unsigned long long eah = hint.rah / 10;\n    unsigned long long mod = ((hint.rah % 10) << 32) | ((hint.ral & man32h) >> 32);\n    unsigned long long low = hint.ral & man32;\n    hint.rah = eah;\n    unsigned long long eal = (mod / 10) << 32;\n    low = low | ((mod % 10) << 32);\n    eal = eal | (low / 10);\n    hint.ral = eal;\n    return (low % 10);\n}\nstack<char> ss; //\u5b57\u7b26\u6808\nvoid print(tword hint)\n{ //\u8f93\u51fa128\u4f4d\u6574\u6570\n    if (hint.rah == 0 && hint.ral == 0)\n    {\n        printf(\"0\"); //\u4e3a0\u76f4\u63a5\u8f93\u51fa0\n    }\n    else\n    {\n        while (hint.rah != 0 || hint.ral != 0)\n        {\n            ss.push(mod10(hint) + '0');\n        }\n        while (!ss.empty())\n        {\n            putchar(ss.top());\n            ss.pop();\n        }\n    }\n}\n```", "link": "/posts/shou-xie-int128/", "tags": ["\u9ad8\u7cbe\u5ea6", "\u6bd4\u8d5b\u5e38\u7528"], "categories": [["note"]]}, {"title": "\u5feb\u901f\u5e42", "content": "### \u5feb\u901f\u5e42\n```cpp\nlong long pow_quick(long long a, long long n){\n\tlong long res = 1;\n\twhile(n){\n\t\tif(n & 1){\n\t\t\tres *= a;\t//\u5224\u65ad\u6700\u540e\u4e00\u4f4d\u662f\u4e0d\u662f1\uff0c\u5982\u679c\u662f\u7684\u8bdd\uff0c\u5c31\u628a a \u4e58\u4e0a\u6765 \n\t\t}\t\t\n\t\ta *= a;\t\t//\u6bcf\u4e00\u6b65\u90fd\u8981\u4e58a \uff0c\u76f8\u5f53\u4e8ea\u7684\u5e73\u65b9 \n\t\tn >>= 1;\t\t//\u53f3\u79fb\u4e00\u4f4d \n\t}\n\treturn res;\n}\n```\n### \u5feb\u901f\u5e42\u53d6\u6a21\n```cpp\nlong long pow_quick(long long a, long long n, long long m){\n\tlong long res = 1;\n\twhile(n){\n\t\tif(n & 1){\n\t\t\tres = res * a % m;\n\t\t}\t\t\n\t\ta = a * a % m;\t\t\n\t\tn >>= 1;\t\t \n\t}\n\treturn res;\n}\n```", "link": "/posts/kuai-su-mi/", "tags": ["\u5feb\u901f\u5e42", "\u6bd4\u8d5b\u5e38\u7528"], "categories": [["note"]]}, {"title": "\u5feb\u8bfb", "content": "### \u4ee3\u7801\n```cpp\nint read()\n{\n    int x = 0, w = 1;\n    char ch = 0;\n    while (ch < '0' || ch > '9')\n    { // ch \u4e0d\u662f\u6570\u5b57\u65f6\n        if (ch == '-')\n            w = -1;     // \u5224\u65ad\u662f\u5426\u4e3a\u8d1f\n        ch = getchar(); // \u7ee7\u7eed\u8bfb\u5165\n    }\n    while (ch >= '0' && ch <= '9')\n    {                            // ch \u662f\u6570\u5b57\u65f6\n        x = x * 10 + (ch - '0'); // \u5c06\u65b0\u8bfb\u5165\u7684\u6570\u5b57\u2019\u52a0\u2019\u5728 x \u7684\u540e\u9762\n        // x \u662f int \u7c7b\u578b\uff0cchar \u7c7b\u578b\u7684 ch \u548c \u20190\u2019 \u4f1a\u88ab\u81ea\u52a8\u8f6c\u4e3a\u5176\u5bf9\u5e94\u7684\n        // ASCII \u7801\uff0c\u76f8\u5f53\u4e8e\u5c06 ch \u8f6c\u5316\u4e3a\u5bf9\u5e94\u6570\u5b57\n        // \u6b64\u5904\u4e5f\u53ef\u4ee5\u4f7f\u7528 (x<<3)+(x<<1) \u7684\u5199\u6cd5\u6765\u4ee3\u66ff x*10\n        ch = getchar(); // \u7ee7\u7eed\u8bfb\u5165\n    }\n    return x * w; // \u6570\u5b57 * \u6b63\u8d1f\u53f7 = \u5b9e\u9645\u6570\u503c\n}\n```", "link": "/posts/kuai-du/", "tags": ["\u5feb\u8bfb", "\u6bd4\u8d5b\u5e38\u7528"], "categories": [["note"]]}, {"title": "\u7b97\u6cd5\u6253\u6cb9\u8bd7[\u8f6c\u8f7d]", "content": "\n```\n\u5c4f\u5e55\u5728\u6df1\u591c\u5fae\u5fae\u53d1\u4eae\n\n\u601d\u60f3\u5728\u90a3\u865a\u6811\u8def\u5f84\u4e0a\u5f77\u5fa8\n\n\u5e73\u9762\u7684\u5411\u91cf\u4ea4\u9519\u751f\u957f\n\n\u7ec7\u6210 \u5fe7\u4f24\u7684\u7f51\n\n\u526a\u679d\u526a\u53bb\u6211\u4eec\u7684\u75af\u72c2\n\nSPFA \u544a\u8bc9\u6211\u524d\u9014\u5728\u4f55\u65b9\n\n01 \u80cc\u5305\u88c5\u4e0b\u4e86\u5fe7\u4f24\n\n\u7b11\u989c \u6ea2\u6ee1\u8138\u5e9e\n\n\u952e\u76d8\u5fae\u51c9 \u9f20\u6807\u5fae\u51c9\n\n\u6307\u5c16\u6d41\u6dcc \u4ee3\u7801\u5343\u884c\n\n\u51f8\u5305\u5468\u957f \u76f4\u5f84\u591a\u957f\n\n\u4e00\u8fdb\u8003\u573a \u5168\u90fd\u5fd8\u5149\n\n\u4f60\u5728 OJ \u4e0a\u63d0\u4ea4\u4e86\u5343\u767e\u904d\n\n\u5374\u4f9d\u7136\u4e0d\u80fd\u5361\u8fdb\u90a3\u65f6\u9650\n\n\u53cc\u624b\u6572\u5c3d\u4ee3\u7801\u4e5f\u6572\u5c3d\u5c81\u6708\n\n\u53ea\u6709\u6211\u4e00\u4eba\n\n\u5199\u7684\u9898\u89e3\n\n\u51cb\u96f6\u5728 OJ \u91cc\u9762\n\nTarjan \u966a\u4f34\u5f3a\u8fde\u901a\u5206\u91cf\n\n\u751f\u6210\u6811\u5b8c\u6210\u540e\u601d\u8def\u624d\u95ea\u5149\n\n\u6b27\u62c9\u8dd1\u8fc7\u7684\u4e03\u6865\u53e4\u5858\n\n\u8ba9\u4f60 \u5fc3\u9a70\u795e\u5f80\n\n\u961f\u5217\u8fdb\u51fa\u56fe\u4e0a\u7684\u65b9\u5411\n\n\u7ebf\u6bb5\u6811\u533a\u95f4\u4fee\u6539\u6c42\u51fa\u603b\u91cf\n\n\u53ef\u6301\u4e45\u5316\u7559\u4e0b\u7684\u8ff9\u8c61\n\n\u6211\u4eec \u4f0f\u8eab\u6b23\u8d4f\n\n\u6570\u8bba\u7b97\u6cd5 \u56fe\u8bba\u7b97\u6cd5\n\n\u9ad8\u65af\u8d39\u9a6c \u6811\u4e0a\u5f00\u82b1\n\n\u7ebf\u6027\u89c4\u5212 \u52a8\u6001\u89c4\u5212\n\n\u65f6\u95f4\u7206\u70b8 \u5982\u4f55\u4f18\u5316\n\n\u6211\u5728 OI \u4e2d\u8f97\u8f6c\u4e86\u5343\u767e\u5929\n\n\u5374\u4e0d\u8ba9\u6211\u770b AK \u6700\u540e\u4e00\u773c\n\n\u6211\u7528\u7a7a\u95f4\u6362\u56de\u8d85\u9650\u7684\u65f6\u95f4\n\n\u968f\u91cd\u65b0\u7f16\u8bd1\n\n\u6d4b\u5b8c\u6837\u4f8b\n\n\u624d\u53d1\u73b0\u6f0f\u6d1e\u6ee1\u7bc7\n\n\u539f\u6765CE \u662f\u56e0\u9009\u9519\u8bed\u8a00\n\n\u5176\u5b9e\u7206\u96f6 \u53ea\u56e0\u5fd8\u5199\u6587\u4ef6\n\n\u5982\u679c\u6807\u7b97\u592a\u96be \u8bf7\u575a\u5b9a\u4fe1\u5ff5\n\n\u4e0d\u5982\u56de\u5934 \u518d\u770b\u4e00\u773c\u9898\u9762\n\n\u4ee5\u90a3\u66b4\u529b\u6a21\u62df\u5411\u6b63\u89e3\u540a\u5501\n\n\u849f\u84bb\u7684\u8715\u53d8\n\n\u795e\u7287\u51fa\u73b0\n\n\u7ec8\u5c06\u4e0e Au \u64e6\u80a9\n\n\u5c4f\u5e55\u5728\u6df1\u591c\u5fae\u5fae\u53d1\u4eae\n\n\u6211\u5fc3\u5728\u8003\u573a...\n```", "link": "/posts/suan-fa-da-you-shi-[-zhuan-zai-]/", "tags": ["\u5947\u602a\u7684\u4e1c\u897f"], "categories": []}, {"title": "\u7ebf\u6bb5\u6811\u8be6\u89e3", "content": "\n<details>\n    <summary>\u67e5\u770b\u94fe\u63a5</summary>\n    <div id='from'></div>\n    <p>\n        <a class='mdui-btn mdui-btn-raised' href=\"https://www.cnblogs.com/TheRoadToTheGold/p/6254255.html\" target='_blank'>\u70b9\u51fb\u8df3\u8f6c</a>\n    <p>\n</details>", "link": "/posts/xian-duan-shu-xiang-jie/", "tags": ["\u7ebf\u6bb5\u6811"], "categories": [["\u7b97\u6cd5", "\u56fe\u8bba", "\u7ebf\u6bb5\u6811"]]}, {"title": "\u5bf9\u62cd", "content": "\n\n## \u5bf9\u62cd\u7a0b\u5e8f  \n\n### \u9996\u5148\u9700\u8981\u5c06\u9020\u6570\u636e\u7684data.exe\u52a0\u4e0a  \n\n```cpp\nfreopen(\"data.in\",\"r\",stdout);\n```\n### \u4e3b\u7a0b\u5e8f\n```cpp\n#include <bits/stdc++.h>\nusing namespace std;\nint main()\n{\n\tint a1,a2,b1,b2;\n\twhile (1)\n\t{\n\t\tsystem(\"data.exe > data.in\");//data.exe \u751f\u6210\u6570\u636e\n\t\ta1=clock();\n\t\tsystem(\"program.exe < data.in > program.out\");\n\t\ta2=clock();\n\n\t\tb1=clock();\n\t\tsystem(\"std.exe < data.in > std.out\");\n\t\tb2=clock();\n\t\tcout<<\"t1=\"<<a2-a1<<\"ms\"<<endl<<\"t2=\"<<b2-b1<<\"ms\"<<endl;\n\t\tif (system(\"fc program.out std.out\")) system(\"pause\");\n\t}\n}\n```", "link": "/posts/dui-pai/", "tags": ["\u5bf9\u62cd", "\u6bd4\u8d5b\u5e38\u7528"], "categories": [["note"]]}, {"title": "\u91d1\u4e2d\u65b0\u751f\u7fa4\u5723\u7ecf", "content": "\n\u81f4\u656c\u5723\u7ecf\u7f16\u7e82\u7ec4\u7684\u5168\u4f53\u6210\u5458  \n\n\u5982\u679c\u6709\u91cd\u590d\uff0c\u8bf7\u9ebb\u70e6\u6307\u51fa\u6765\u554aawa  \n\nUpdate Time\uff1a2021.8.29 15\uff1a40\n \n\n![1.jpg](1.jpg)  \n\n![2.jpg](2.jpg)  \n\n![3.jpg](3.jpg)  \n\n![4.jpg](4.jpg)  \n\n![5.jpg](5.jpg)  \n\n![6.jpg](6.jpg)  \n\n![7.jpg](7.jpg)  \n\n![8.jpg](8.jpg)  \n\n![9.jpg](9.jpg)  \n\n![10.jpg](10.jpg)  \n\n![11.jpg](11.jpg)  \n\n![12.jpg](12.jpg)  \n\n![13.jpg](13.jpg)  \n\n![14.jpg](14.jpg)  \n\n![15.jpg](15.jpg)  \n\n![16.jpg](16.jpg)  \n\n![17.jpg](17.jpg)  \n\n![18.jpg](18.jpg)  \n\n![19.jpg](19.jpg)  \n\n![20.jpg](20.jpg)  \n\n![21.jpg](21.jpg)  \n\n![22.jpg](22.jpg)  \n\n![23.jpg](23.jpg)  \n\n![24.jpg](24.jpg)  \n\n![25.jpg](25.jpg)  \n\n![26.jpg](26.jpg)  \n\n![27.jpg](27.jpg)  \n\n![28.jpg](28.jpg)  \n\n![29.jpg](29.jpg)  \n\n![30.jpg](30.jpg)  \n\n![31.jpg](31.jpg)  \n\n![32.jpg](32.jpg)  \n\n![33.jpg](33.jpg)  \n\n![34.jpg](34.jpg)  \n\n![35.jpg](35.jpg)  \n\n![36.jpg](36.jpg)  \n\n![37.jpg](37.jpg)  \n\n![38.jpg](38.jpg)  \n\n![39.jpg](39.jpg)  \n\n![40.jpg](40.jpg)  \n\n![41.jpg](41.jpg)  \n\n![42.jpg](42.jpg)  \n\n![43.jpg](43.jpg)  \n\n![44.jpg](44.jpg)  \n\n![45.jpg](45.jpg)  \n\n![46.jpg](46.jpg)  \n\n![47.jpg](47.jpg)  \n\n![48.jpg](48.jpg)  \n\n![49.jpg](49.jpg)  \n\n![50.jpg](50.jpg)  \n\n![51.jpg](51.jpg)  \n\n![52.jpg](52.jpg)  \n\n![53.jpg](53.jpg)  \n\n![54.jpg](54.jpg)  \n\n![55.jpg](55.jpg)  \n\n![56.jpg](56.jpg)  \n\n![57.jpg](57.jpg)  \n\n![58.jpg](58.jpg)  \n\n![59.jpg](59.jpg)  \n\n![60.jpg](60.jpg)  \n\n![61.jpg](61.jpg)  \n\n![62.jpg](62.jpg)  \n\n![63.jpg](63.jpg)  \n\n![64.jpg](64.jpg)  \n\n![65.jpg](65.jpg)  \n\n![66.jpg](66.jpg)  \n\n![67.jpg](67.jpg)  \n\n![68.jpg](68.jpg)  \n\n![69.jpg](69.jpg)  \n\n![70.jpg](70.jpg)  \n\n![71.jpg](71.jpg)  \n\n![72.jpg](72.jpg)  \n\n![73.jpg](73.jpg)  \n\n![74.jpg](74.jpg)  \n\n![75.jpg](75.jpg)  \n\n![76.jpg](76.jpg)  \n\n![77.jpg](77.jpg)  \n\n![78.jpg](78.jpg)  \n\n![79.jpg](79.jpg)  \n\n![80.jpg](80.jpg)  \n\n![81.jpg](81.jpg)  \n\n![82.jpg](82.jpg)  \n\n![83.jpg](83.jpg)  \n\n![84.jpg](84.jpg)  \n\n![85.jpg](85.jpg)  \n\n![86.jpg](86.jpg)  \n\n![87.jpg](87.jpg)  \n\n![88.jpg](88.jpg)  \n\n![89.jpg](89.jpg)  \n\n![90.jpg](90.jpg)  \n\n![91.jpg](91.jpg)  \n\n![92.jpg](92.jpg)  \n\n![93.jpg](93.jpg)  \n\n![94.jpg](94.jpg)  \n\n![95.jpg](95.jpg)  \n\n![96.jpg](96.jpg)  \n\n![97.jpg](97.jpg)  \n\n![98.jpg](98.jpg)  \n\n![99.jpg](99.jpg)  \n\n![100.jpg](100.jpg)  \n\n![101.jpg](101.jpg)  \n\n", "link": "/posts/jin-zhong-xin-sheng-qun-sheng-jing/", "tags": ["\u5947\u602a\u7684\u4e1c\u897f"], "categories": []}, {"title": "LG P1981 \u8868\u8fbe\u5f0f\u6c42\u503c", "content": "\n<details>\n    <summary>\u67e5\u770b\u539f\u9898</summary>\n    <div id='from'></div>\n    <p><button onclick=\"document.getElementById('from').innerHTML='<iframe src=&quot;https://www.luogu.com.cn/problem/P1981&quot; width=100% height=800px style=& quotborder: none;&quot;><iframe>'\"class='mdui-btn mdui-btn-raised'>\u70b9\u51fb\u52a0\u8f7d</button>\n\t<a class='mdui-btn mdui-btn-raised' href=\"https://www.luogu.com.cn/problem/P1981\" target='_blank'>\u70b9\u51fb\u8df3\u8f6c</a>\u3001\n</details>\n\n\n## \u601d\u8003\n\n\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c\u5176\u5b9e\u662f\u4e00\u4ef6\u5f88\u7b80\u5355\u7684\u4e8b\uff0c\u4f46\u662f\u4e00\u5927\u6bb5\u5b57\u7b26\u4e32\u6ca1\u6709\u7a7a\u683c\u610f\u5473\u7740\u4f60\u8981\u89e3\u51b3\u9010\u5b57\u8f93\u5165\uff0c\u8fd9\u9053\u9898\u5f88\u7b80\u5355\uff0c\u6211\u4eec\u53ea\u9700\u8981\u628a\u2018**\\***\u2019\u7684\u5148\u89e3\u51b3\uff0c\u518d\u628a\u2018**+**\u2019\u89e3\u51b3\u4e86\u5c31\u597d..\n\n## \u539f\u9898\u9898\u89e3\n\n```cpp\n#include<cstdio>\n#include<iostream>\n#include<algorithm>\n#include<cmath>\n#include<cstring>\n#include<string>\nusing namespace std;\nint main()\n{\n    long long shu,sum=0,cj,sg;\n    char ch=0,xg;\n    bool tf=true;\n    while(tf)\n    {\n        scanf(\"%lld\",&shu);\n        tf=scanf(\"%c\",&xg)==1?true:false;\n        if(ch==0)cj=shu;\n        if(ch=='+')sum=(sum+cj)%10000,cj=shu;\n        if(ch=='*')cj=(cj*shu)%10000;\n        if(!tf)sum=(sum+cj)%10000;\n        ch=xg;\n    }\n    printf(\"%lld\",sum);//\u8f93\u51fa\n    return 0;\n}\n```\n\n</details>\n\n\u4f46\u662f\uff0c\u4e0d\u80fd\u6b62\u6b65\u4e8e\u6b64\u554a\u554a\u554a\uff0c\u8868\u8fbe\u5f0f\u6c42\u503c\uff0c\u4e0d\u4ec5\u4ec5\u8981\u6709\u2018**\\***\u2019\u548c\u2018**\\+**\u2019\u66f4\u8981\u6709\u2018**-**\u2019\u548c\u2018**^**\u2019\n\n\u62e5\u6709\u591a\u4e2a\u8fd0\u7b97\u7b26\u548c\u4f18\u5148\u7ea7\uff0c\u9996\u5f53\u5176\u51b2\u7684\u5e94\u8be5\u662f\u6709\u6808\u554a\uff0c\u5904\u7406\u4f18\u5148\u7ea7\u4e0d\u4f1a\u6df7\u4e71\n\n\u5176\u6b21\u65e2\u7136\u6709\u6808\u4e86\uff0c\u90a3\u4e48\u5c31\u76f4\u63a5\u4e0a\u2018**(**\u2019\u548c\u2018**)**\u2019\u5427\uff0c\u53ef\u4ee5\u5904\u7406\u7684\u4e1c\u897f\u4e5f\u591a\u4e86\n\n```cpp\n#include <iostream>\n#include <stack>\n#include <string>\n#define MOD 10000\nusing namespace std;\n\nlong long fastPower(long long base, long long power)\n{\n\tlong long result = 1;\n\twhile (power > 0)\n\t{\n\t\tif (power & 1)\n\t\t{\n\t\t\tresult = result * base;\n\t\t}\n\t\tpower >>= 1;\n\t\tbase = base * base;\n\t}\n\treturn result;\n}\n\nint priority(char a)\n{\n\tif (a == '+' || a == '-')\n\t\treturn 1;\n\tif (a == '*' || a == '/')\n\t\treturn 2;\n\tif (a == '^')\n\t\treturn 3;\n\tif (a == '(')\n\t\treturn 0;\n\treturn 0;\n}\n\nstring mid2back(string s) //\u4e2d\u7f00\u8ba1\u7b97\u8868\u8fbe\u5f0f\u8f6c\u540e\u7f00\u8ba1\u7b97\u8868\u8fbe\u5f0f\n{\n\tstring res;\n\tstack<char> st;\n\tlong long size = s.size();\n\tbool flag = 0;\n\tfor (long long i = 0; i < size; i++)\n\t{\n\t\tif (s[i] >= '0' && s[i] <= '9')\n\t\t{\n\t\t\tres += s[i];\n\t\t\tflag = 1;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (flag)\n\t\t\t{\n\t\t\t\tres += ' ';\n\t\t\t\tflag = false;\n\t\t\t}\n\t\t\tif (s[i] == '(')\n\t\t\t\tst.push(s[i]);\n\t\t\tif (s[i] != '(' && s[i] != ')')\n\t\t\t{\n\t\t\t\tif (st.empty())\n\t\t\t\t\tst.push(s[i]);\n\t\t\t\telse\n\t\t\t\t\twhile (1)\n\t\t\t\t\t{\n\t\t\t\t\t\tchar temp = st.top();\n\t\t\t\t\t\tif (priority(s[i]) > priority(temp)) //\u6808\u9876\u7b97\u672f\u7b26\u53f7\u4f18\u5148\u7ea7\u9ad8\u4e8e\u5f53\u524d\u7b97\u672f\u7b26\u53f7\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tst.push(s[i]);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tres += temp;\n\t\t\t\t\t\t\tres += ' ';\n\t\t\t\t\t\t\tst.pop();\n\t\t\t\t\t\t\tif (st.empty()) //\u5982\u679c\u6808\u7a7a \u90a3\u4e48\u5f53\u524d\u7b97\u672f\u7b26\u53f7\u5165\u6808\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tst.push(s[i]);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tif (s[i] == ')')\n\t\t\t{\n\t\t\t\twhile (st.top() != '(')\n\t\t\t\t{\n\t\t\t\t\tres += st.top();\n\t\t\t\t\tres += ' ';\n\t\t\t\t\tst.pop();\n\t\t\t\t}\n\t\t\t\tst.pop();\n\t\t\t}\n\t\t}\n\t}\n\twhile (!st.empty()) //\u6808\u4e2d\u5269\u4f59\u7b97\u672f\u7b26\u53f7\u653e\u5165\u7b97\u672f\u8868\u8fbe\u5f0f\n\t{\n\t\tres += ' ';\n\t\tres += st.top();\n\t\tst.pop();\n\t}\n\treturn res; //\u8f6c\u6362\u540e\u7684\u7b97\u672f\u8868\u8fbe\u5f0f\n}\n\nlong long compute(string str) //\u6839\u636e\u540e\u7f00\u7b97\u672f\u8868\u8fbe\u5f0f\u8ba1\u7b97\u503c\n{\n\tstack<long long> st;\n\tlong long size = str.size();\n\tbool flag = 0;\n\tlong long temp = 0;\n\tfor (long long i = 0; i < size; i++)\n\t{\n\t\tif (str[i] >= '0' && str[i] <= '9')\n\t\t{\n\t\t\ttemp = temp * 10 + str[i] - '0';\n\t\t\tflag = 1;\n\t\t}\n\t\tif (str[i] == ' ' || (str[i] >= '0' && str[i] <= '9' && flag && i == size - 1))\n\t\t{\n\t\t\tif (flag)\n\t\t\t\tst.push(temp);\n\t\t\tflag = 0;\n\t\t\ttemp = 0;\n\t\t}\n\t\tif (str[i] == '+' || str[i] == '-' || str[i] == '*' || str[i] == '/' || str[i] == '^')\n\t\t{\n\t\t\tlong long x = st.top();\n\t\t\tst.pop();\n\t\t\tlong long y = st.top();\n\t\t\tst.pop();\n\t\t\tif (str[i] == '*')\n\t\t\t\tst.push(y * x);\n\t\t\tif (str[i] == '/')\n\t\t\t\tst.push(y / x);\n\t\t\tif (str[i] == '+')\n\t\t\t\tst.push(y + x);\n\t\t\tif (str[i] == '-')\n\t\t\t\tst.push(y - x);\n\t\t\tif (str[i] == '^')\n\t\t\t\tst.push(fastPower(y, x));\n\t\t}\n\t}\n\treturn st.top(); //\u8fd4\u56de\u540e\u7f00\u8868\u8fbe\u5f0f\u7684\u8ba1\u7b97\u7ed3\u679c\n}\nint main()\n{\n\tstring str;\n\tcin >> str;\n\tcout << compute(mid2back(str)) ;\n\treturn 0;\n}\n```\n\n\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u8fd9\u9053$\\color{orange}{\u666e\u53ca-}$\u7684\u9898\u8fd8\u662f\u6709\u70b9\u6c34\u7684\u554a,\u5bf9\u5176\u7684\u6269\u5145\u548c\u4e3e\u4e00\u53cd\u4e09\u503c\u5f97\u6df1\u601d\uff08", "link": "/posts/LG-P1981--biao-da-shi-qiu-zhi/", "tags": ["\u6a21\u62df", "\u6808", "\u540e\u7f00\u8868\u8fbe\u5f0f"], "categories": [["\u5237\u9898\u8bb0\u5f55"]]}, {"title": "\u91d1\u4e2d\u590f\u4ee4\u8425 \u6e38\u8bb0", "content": "\n## \u524d\u8a00\n\n\u5176\u5b9e\u8fd9\u662f\u7b2c\u4e8c\u6b21\u6765\u5230\u91d1\u4e2d\u4e86\uff0c\u4e0a\u4e00\u6b21\u662f2019\u51ac\u4ee4\u8425\uff0c\u5728\u6211\u5199\u4e0b\u8fd9\u7bc7\u6e38\u8bb0\u7684\u65f6\u5019\uff0c**CSP 2020**\u53ea\u6709\u4e0d\u523070\u5929\u7684\u65f6\u95f4\uff0c\u6211\u5728\u8fd9\u91cc\u6536\u83b7\u7684\u4e1c\u897f\uff0c\u4e0d\u540c\u4e8e\u5f80\u5e74\uff0c\u8fd8\u611f\u53d7\u5230\u4e86\u4e00\u4e9b\u4e0d\u4e00\u6837\u7684\u4e1c\u897f\u3002\n\n## day 0\n\n\u6211\u53bb\u91d1\u4e2d\u7684\u524d\u51e0\u5929\u90fd\u5728\u8003\u8bd5\uff0c\u8fd9\u4e00\u6b21\u590f\u4ee4\u8425\u521a\u597d\u5361\u5728\u6211\u4eec\u533a\u7edf\u8003\u540e\u7684\u7b2c\u4e8c\u5929\uff0c~~\u6839\u672c\u6ca1\u5f97\u60f3\uff0c\u5c31\u5f88\u70e6\u554a~~\uff0c\u4e5f\u6b63\u662f\u5982\u6b64\uff0c\u6211\u4e5f\u51c6\u5907\u5f97\u4e0d\u5468\u5168\uff0c\u8bb8\u591a\u4e1c\u897f\u90fd\u6ca1\u5e26\uff0c~~\u767d\u5ad6\u5c31\u663e\u5f97\u5f88\u91cd\u8981~~\uff0c\u6211\u4e5f\u968f\u4fbf\u5e26\u4e86\u4e00\u5e8a\u88ab\u5b50\uff0c\u51e0\u4ef6\u6821\u670d\uff0c\u6d17\u6f31\u7528\u54c1\u5c31\u8d70\u4e86\u3002\n\n\u665a\u4e0a\u7684\u65f6\u5019\u4e00\u76f4\u7761\u4e0d\u7740\uff0c\u603b\u662f\u60f3\u7740\u524d\u51e0\u5929\u7684\u8003\u8bd5\uff08\u8003\u7838\u4e86\uff09\uff0c\u7ed3\u679c\u3002\u3002\u3002\u3002\u3002\u8fd8\u662f\u8003\u7838\u4e86\n\n\n## day 1\n\n- **8\uff1a00AM**\n\n\u65e9\u4e0a\u679c\u7136\u8d56\u5e8a\u4e86\uff0c\u7761\u4e5f\u7761\u4e0d\u597d\uff0c\u5c31\u62ff\u4e86\u51e0\u4e2a\u9992\u5934\u5c31\u8d70\u4e86\u3002\n\n\u65e9\u6668\u5750\u5728\u8239\u4e0a\u611f\u53d7\u8fce\u9762\u5439\u6765\u7684\u6d77\u98ce\uff0c\u771f\u7684\u611f\u89c9\u633a\u8212\u670d\u7684\uff0c\u60f3\u7740\u63a5\u4e0b\u6765\u51e0\u5929\u7684\u751f\u6d3b\uff0c\u611f\u89c9\u633a\u597d\u7684\u3002\n\n- **10\uff1a00AM**\n\n\u78b0\u5230\u4e86**chy**\u548c**xgf**\uff0c\u60f3\u7740**xtx**\u5728\u7fa4\u91cc\u8bf4\u7740\u7ed9\u6211\u4eec\u5e26\u8def\u5374\u627e\u4e0d\u5230\u4eba\u5c31\u5f88\u6de6\u3002\n\n\u5c0f\u5c0f\u6574\u7406\u4e86\u5e8a\u94fa\uff0c\u7a81\u7136\u53d1\u73b0\u5230~~\u5bbf\u820d\u771f\u597d~~\uff0c\u4e5f\u662f\u86ee\u60ca\u8bb6\u7684\uff0c\u4eca\u5e74\u6709\u5bbf\u7ba1\u554a\uff0c\u56de\u60f3\u8d77\u53bb\u5e74\u7684ghj\uff0c\u591c\u665a\u5531\u6b4c\uff0c\u5fc3\u60f3\u90fd\u6015\n\n\n- **11\uff1a00AM**\n\n\u5f00\u8425\u4eea\u5f0f\uff1f\uff0c\u521a\u5230\u673a\u623f\u7684\u65f6\u5019\u5df2\u7ecf10\uff1a30\u4e86\uff0c\u6309\u7167\u65f6\u95f4\u8868\u768410:30--\u5f00\u8425\u4eea\u5f0f\uff0c\u6211\u5f53\u65f6\u5dee\u70b9\u4ee5\u4e3a\u88ab\u5403\u4e86\uff08\u6ed1\u7a3d\uff09\uff0c\u8fc7\u4e86\u4e00\u4e2a\u5c0f\u65f6\u540e\uff0c\u6211\u628a\u4e00\u9053\u9ec4\u9898\u5207\u4e86\u540e\uff0c\u6821\u957f\u624d\u6765\u7b80\u5355\u7684\u53d1\u8868\u4e86\u8bb2\u8bdd\uff0c~~\uff08\u8ba9\u6211\u987f\u65f6\u5fc3\u6f6e\u6f8e\u6e43\u60f3\u4e0a\u91d1\u4e2d\u4e86\uff0c\u6de6\uff09~~\n\n- **\u5348\u9910**\n\n\u6ca1\u529e\u6cd5\u554a\uff0c\u5348\u9910\u5c31\u771f\u7684\u662f\u5c34\u5c2c\u4e86\uff0c\u996d\u5361\u6ca1\u6709\u6765\uff0c\u6211\u4eec\u4e8e\u662f\u4e4e\u767d\u5ad6\u4e86\u4e00\u987f\u996d\uff0c\u767d\u5ad6\u7684\u6709\u65f6\u5019\u4f1a\u611f\u89c9\u5f88\u9999\u7684\u3002\n\n- **5.00PM**\n\n\u6211\u4eec\u770b\u4e86\u4e00\u4e0b\u5348\u7684\u89c6\u9891\uff08\u662f\u6709\u5173OI\u7684\uff0c\u4e0d\u662f\u90a3\u79cd\uff09\uff0c\u5927\u5bb6\u5c31\u4e00\u8d77\u53bb\u73af\u7ed5\u7740\u6574\u4e2a\u91d1\u4e2d\u6821\u56ed\u8d70\u4e86\u4e00\u5708\uff0c\u5176\u5b9e\u6211\u611f\u89c9\u8fd9\u4e2a\u91d1\u4e2d\u5176\u5b9e\u86ee\u5927\u7684\uff08\u5173\u8d70\u8def\u5c31\u53ef\u4ee5\u51cf\u80a5\u4e86\uff09\uff0c\u7ad9\u5728\u9ad8\u5904\u53ef\u4ee5\u611f\u53d7\u5230\u5f88\u51c9\u723d\u7684\u6d77\u98ce\uff0c\u663c\u591c\u7684\u53d8\u5316\u5bfc\u81f4\u98ce\u7684\u65b9\u5411\u4e0d\u540c\uff0c\u4f4624\u5c0f\u65f6\u7684\u98ce\u5bf9\u4e8e\u5927\u591a\u5728\u5e02\u533a\u7684\u9ad8\u4e2d\u5374\u663e\u5f97\u4e0d\u53ef\u5f97\u3002\n\n\u76f8\u6bd4\u4e8e\u4e0a\u4e00\u6b21\u51ac\u4ee4\u8425\uff0c\u91d1\u4e2d\u7684\u6821\u56ed\u771f\u7684\u53d8\u5316\u4e86\u4e0d\u5c11\uff0c\u4e5f\u6b63\u56e0\u4e3a\u8fd9\u4e00\u6b21\u75ab\u60c5\uff0c\u5927\u591a\u672c\u8be5\u63d0\u524d\u5f00\u5b66\u7684\u9ad8\u4e09\u90fd\u5ef6\u540e\u4e86\uff08\u91d1\u4e2d\u6b63\u5e38\u6bd4\u5176\u4ed6\u5b66\u6821\u7684\u5f00\u5b66\u65f6\u95f4\u90fd\u8981\u65e9\uff09\u3002\u8fd9\u4e00\u6b21\u7684\u98df\u5802\u76f8\u6bd4\u4e0e\u4e0a\u4e00\u6b21\u5c31\u66f4\u52a0\u7b80\u964b\uff0c\u539f\u672c\u5e94\u8be5\u6709\u7684\u4e09\u697c\u548c\u56db\u697c\u7684\u5173\u4e86\uff0c\u53ea\u5269\u4e0b\u4e00\u4e2a\u4e8c\u697c\u98df\u5802\u3002\u663e\u7136\uff0c\u6709\u8bb8\u591a\u4e1c\u897f\u662f\u4e3a\u4e86\u8fd9\u4e00\u6b21\u590f\u4ee4\u8425\u800c\u7279\u6b8a\u5f00\u5f20\u7684\u3002~~\uff08\u8fde\u5c0f\u5356\u90e8\u90fd\u6ca1\u6709\u5f00\uff0c\u5dee\u8bc4\u554a\uff09~~\n\n- **6.30PM**\n\n\u8d70\u904d\u4e86\u6574\u4e2a\u6821\u56ed\uff0c\u817f\u811a\u4e5f\u6709\u4e9b\u7d2f\u4e86\uff0c\u771f\u7684\u611f\u5230\u91d1\u4e2d\u6821\u56ed\u597d\u5927\uff0c\u771f\u7684\u3002\u624b\u673a\u90fd\u5df2\u7ecf\u8fbe\u52301w8\u4e86\uff0c\u8fd9\u4fbf\u662f\u6211\u5728\u91d1\u4e2d\u8d70\u8fc7\u7684\u6700\u8fdc\u7684\u8def\u4e86\uff08This is the first one at most\uff09\u3002\n\n\u56de\u5230\u5bbf\u820d204\uff0c\u7b49\u5f85\u6211\u7684\u4fbf\u662f\u65e5\u5e38\u66f4\u8863\u6d17\u6fa1\u5566\uff0c\u5e38\u89c4\u64cd\u4f5c\uff0c\u60f3\u90a3\u4e48\u591a\u5e72\u561b\uff0c\u6de6\u3002\n\n[Time]: # (\u7f16\u5199\u5230\u8fd9\u91cc\uff0c2020/8/9 23\uff1a57\u4e86)\n\n- **9.30PM**\n\n\u53c8\u770b\u4e86\u4e09\u4e2a\u666e\u53ca\u7ec4\u7684\u89c6\u9891\uff0c\u4e5f\u8bb8\u8fd9\u5c31\u662f\u5495\u5495\u5495\u7684\u5b9e\u529b\u4e86\u628a \uff08\u9694\u58c1\u7684chy\u90fd\u770b\u4e86\u597d\u51e0\u4e2a\u4e86\u90fd\uff0c\u6de6\uff09\uff0c\u6211\u4eec\u5bbf\u820d204\u7684\u4e94\u4eba\u5e38\u5e38\u5e76\u884c\uff0c\u91cc\u9762\u7684\u4eba\u6709**xtx**\uff0c**chy**\uff0c**xgf**\uff0c**zjy**\uff0c\u8fd8\u6709\u6211\uff0c\u5176\u5b9e\u6211\u4eec\u5bbf\u820d\u8fd8\u6709**wmt**\uff0c\u53ea\u662f\u4ed6\u5728\u6559\u5ba4204\u4e0a\u8bfe\uff0c\u6211\u4eec\u5728\u6559\u5ba4202.\n\n## day 2\n\n- **\u65e9\u9910**\n\n\u7b80\u5355\u7684\u6d17\u6f31\u540e\u5c31\u4e00\u8d77\u8d76\u5230\u98df\u5802\u4e86\uff0c\u6709\u4e00\u8bf4\u4e00\uff0c\u98df\u5802\u7684\u65e9\u9910\u8fd8\u662f\u633a\u597d\u5403\u7684\uff08\u81f3\u5c11\u548cjs\u6ca1\u6709\u53ef\u6bd4\u6027\uff09\uff0c\u7b80\u5355\u7684\u5427\u5527\u5427\u5527\u51e0\u4e0b\u5c31\u628a\u65e9\u9910\u5403\u5b8c\u4e86\uff0c\u7136\u540e\uff0c\u53c8\u5f00\u59cb\u4e86\u4e00\u5929\u7684\u5495\u5495\u5495\u751f\u6d3b\u4e86\n\n- **7.00PM**\n\n\u5237\u9898\uff1f\uff0c\u62b1\u6b49\u4eca\u665a\u4e0d\u884c\uff0c\u8ddf\u7740\u51c6\u9ad8\u4e00\u7684\u5b66\u957f\uff08dalao\uff09\u53bb\u770b\u4e86\u661f\u7a7a\u56fe\u3002\u6709\u4e00\u8bf4\u4e00\uff0c\u552f\u4e00\u4e00\u6b21\u770b\u661f\u7a7a\u53ef\u4ee5\u6709\u5f88\u591a\u661f\u661f\u7684\u65f6\u5019\uff0c\u6211\u8fd8\u662f\u4e00\u5e74\u7ea7\u5728\u63ed\u9633\u8001\u5bb6\u770b\u7684\uff08\u90a3\u79cd\u611f\u89c9\u6cb9\u7136\u800c\u751f\uff09\u3002\u57ce\u5e02\u91cc\u90fd\u770b\u4e0d\u89c1\u661f\u661f\u4e86\uff0c\u5dee\u8bc4..\n\n\u542c\u5b8c\u540e\uff0c\u6211\u4eec\u4fbf\u53bb\u4e86\u5929\u8c61\u5385\uff0c\u6ca1\u9519\uff0c\u5c31\u662f\u90a3\u4e2a\u5706\u9876\u7684\u5929\u8c61\u5385\u3002\u636e\u8bf4\u90a3\u4e2ajz\u5f88\u591a\u4eba\u90fd\u6ca1\u53bb\u8fc7\u554a\uff0c\u4f46\u662f\uff0c\u8c03\u8bd5\u4e86\u5f88\u4e45\u7684\u673a\u5668\uff081.3h\uff09\u3002jz\u624b\u673a\u6ca1\u4fe1\u53f7\uff0c\u73a9\u4e0d\u4e86\u6e38\u620f\uff0c\u54ed\u4e86\u3002\n\n\u8fd8\u6ca1\u8c03\u597d\u7684\u65f6\u5019\u7a81\u7136\u4e0b\u66b4\u96e8\uff0c\u597d\u5427\uff0c\u6ca1\u5e26\u4f1e\u3002\u7167\u7247\u62cd\u4e86\u51e0\u5f20\uff08\uff09\uff0c\u6905\u5b50\u633a\u8212\u670d\uff0c\u4e5f\u8bb8\u662f\u6211\u773c\u775b\u4e0d\u597d\uff0c\u770b\u4e0d\u5230\u591a\u5c11\u661f\u661f\u3002\n\n\u4e0d\u60f3\u4ea4\u624b\u673a\uff0c\u6df7\u8fc7\u53bb\u4e86\uff08\uff09\n\n#### \u522b\u95ee\u4e3a\u5565\u6ca1\u6709day3\n\n## day 4\n- **4.30PM**\n\n\u6211\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u50bb\u695e\u50bb\u695e\u7684\u53bb\u6253\u4e86\u7fbd\u6bdb\u7403\uff0c\u96be\u5f97\u53bb\u8fd0\u52a8\uff0c\u4e5f\u771f\u662f\u5947\u7279\u3002\u3002\n\n- **7.30PM**\n\n\u5176\u5b9e\u5728\u4e0b\u5348\uff0clmh\u5b66\u957f\u51fa\u4e86\u4e00\u573a\u6bd4\u8d5b\u7ed9\u6211\u4eec\uff0c\u90a3\u573a\u6bd4\u8d5b\u7684**\u666e\u53ca**+\u7684\u6bd4\u8d5b\uff0c\u96be\u5ea6\u4e5f\u5dee\u4e0d\u591a\uff0c\u6211\u4e5f\u53ef\u4ee5\u505a\uff0c\u4e8e\u662f\u628aA\u9898\u5207\u4e86\uff0cC\u9898\u6253\u4e86\u66b4\u529b\u5206\uff0c\u5176\u4ed6\u7684\u9898\u4e0d\u60f3\u5199~~\uff08\u5176\u5b9e\u53ea\u662f\u4e0d\u4f1a\u800c\u5df2\uff09~~\u3002\n\n--\u672a\u5b8c\u5f85\u7eed--\n", "link": "/posts/jin-zhong-xia-ling-ying/", "tags": ["\u6e38\u8bb0"], "categories": [["\u6e38\u8bb0"]]}, {"title": "USACO training \u5b66\u4e60\u8ba1\u5212", "content": "\n# \u524d\u8a00\n\nUSACO training \u5176\u5b9e\u662f\u5f88\u4e45\u4e4b\u524d\u5c31\u60f3\u5f7b\u5e95\u5237\u4e00\u904d\u7684\u9898\u5355\uff0c\u4f46\u662f\u56e0\u4e3a\u5176\u4ed6\u7684\u539f\u56e0\uff0c\u4e00\u76f4\u6ca1\u6709\u5b8c\u6574\u7684\u5237\u8fc7\u4e00\u904d\uff0c\u8fd9\u4e24\u4e2a\u661f\u671f\u4e5f\u6709\u7a7a\uff0c\u5c1d\u8bd5\u5237\u5237\u5427\uff01\n\n# USACO Section 1\n\n## 1.2.2\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1200)\n\n### Solution\n\n\u8fd9\u4e00\u9053\u9898\u7684\u601d\u8def\u5c31\u662f\u628a A \u7c7b\u4f3c\u8fd9\u7c7b\u7684\u5b57\u6bcd\u8f6c\u5316\u6210 1 \u8fd9\u7c7b\u7684\u6570\u5b57\u3002\n\n\u7136\u540e\u66b4\u529b\u52a0\u51cf\u5373\u53ef\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: ride\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\n#define N 100\nchar a[N], b[N];\nint ans1 = 1, ans2 = 1, len;\n\nint main()\n{\n    usaco(\"ride\");\n    scanf(\"%s%s\", a, b);\n    len = strlen(a);\n    for (int i = 0; i < len; i++) ans1 *= a[i] - 'A' + 1;\n    len = strlen(b);\n    for (int i = 0; i < len; i++) ans2 *= b[i] - 'A' + 1;\n    if (ans1 % 47 == ans2 % 47)\n        cout << \"GO\\n\";\n    else\n        cout << \"STAY\\n\";\n    return 0;\n}\n```\n\n## 1.2.5\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1201)\n\n### Solution\n\n\u8fd9\u9053\u9898\u6211\u5728\u505a\u5339\u914d\u7684\u65f6\u5019\u76f4\u63a5\u4f7f\u7528string\uff0cstring\u7684\u5305\u88c5\u53ca\u4f7f\u7528\u90fd\u975e\u5e38\u7684\u91cd\u8981\uff0c\u5f88\u6709\u7528\u554a\u3002\n\n\u5339\u914d\u4eba\uff0c\u7136\u540e\u5229\u7528C++\u7684\u6574\u6570\u8fd0\u7b97\u4f1a\u53bb\u6389\u5c0f\u6570\u90e8\u5206\u7684\u7279\u6027\u76f4\u63a5\u8ba1\u7b97\u5373\u53ef\u3002\n\n\u7136\u540e\u6211\u4eec\u9700\u8981\u7279\u5224m=0\u7684\u60c5\u51b5\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: gift1\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nmap<string, int> mp;\nint n, w, m;\nstring name[100], temp;\nint main()\n{\n    usaco(\"gift1\");\n    cin >> n;\n    for (int i = 0; i < n; i++) cin >> name[i];\n    for (int i = 0; i < n; i++)\n    {\n        cin >> temp >> w >> m; // w=money,m=people\n        if (m) mp[temp] -= w / m * m;\n        for (int j = 0; j < m; j++)\n        {\n            cin >> temp;\n            mp[temp] += w / m;\n        }\n    }\n    for (int i = 0; i < n; i++) printf(\"%s %d\\n\", name[i].c_str(), mp[name[i]]);\n    return 0;\n}\n```\n\n## 1.2.6\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1202)\n\n### Solution\n\n\u8fd9\u9053\u9898\u5176\u5b9e\u633a\u7b80\u5355\u7684\uff0c\u76f4\u63a5\u52a0\u4e0a\u5f53\u524d\u6708\u4efd\u7684\u5929\u6570\u5c31\u53ef\u4ee5\u5230\u7b2c\u4e8c\u6708\u768413\u65e5\u3002\n\n1900.1.13\u662f\u5468\u516d\uff01\n\n\u7136\u540e\u7528\u4e00\u53e5\u5f88\u590d\u6742\uff08\u5176\u5b9e\u4e5f\u4e0d\u4f1a\uff09\u7684\u4e09\u76ee\u8fd0\u7b97\u7b26\u5c31\u53ef\u4ee5\u89e3\u51b3\u5f53\u524d\u6708\u4efd\u7684\u5929\u6570\u8ba1\u7b97\u3002\n\n`(m == 2 ? (((y % 4 == 0 && y % 100 != 0) || y % 400 == 0) ? 29 : 28) : ((m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) ? 31 : 30))`\n\n\u5148\u628a\u6700\u590d\u6742\u76842\u6708\u8ba1\u7b97\u7ed9\u5206\u5272\u5f00\u3002\n\n\u7136\u540e2\u6708\u5206\u95f0\u4e0d\u95f0\u3002\n\n\u5176\u4ed6\u6708\u4efd\u5206\u5927\u4e0d\u5927\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: friday\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint x, w, ans[10];\nint main()\n{\n    usaco(\"friday\");\n    scanf(\"%d\", &x);\n    w = 5;\n    for (int y = 1900; y < 1900 + x; y++)\n    {\n        for (int m = 1; m <= 12; m++)\n        {\n            ans[w]++;\n            w += (m == 2 ? (((y % 4 == 0 && y % 100 != 0) || y % 400 == 0) ? 29 : 28) : ((m == 1 || m == 3 || m == 5 || m == 7 || m == 8 || m == 10 || m == 12) ? 31 : 30));\n            w %= 7;\n        }\n    }\n    for (int i = 5; i <= 10; i++) printf(\"%d \", ans[i % 7]);\n    printf(\"%d\\n\", ans[11 % 7]);\n    return 0;\n}\n```\n\n## 1.2.7\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1203)\n\n### Solution\n\n\u5bf9\u4e8e\u8fd9\u4e00\u9053\u9898\uff0c\u6211\u4eec\u5e94\u8be5\u5c1d\u8bd5\u7834\u73af\u6210\u94fe\u3002\n\n\u7136\u540e\u5bf9\u8fd9\u4e2a\u73af\u8dd1\u4e00\u8fb9\uff0c\u56e0\u4e3a\u6709\u767d\u8272\u662f\u90a3\u79cd\u7279\u6b8a\u7684\u4e1c\u897f\uff0c\u6240\u4ee5\u6211\u4eec\u7279\u6b8a\u5bf9\u5f85\u3002\n\n\u767d\u8272\u53ef\u63a5\u524d\u53ef\u63a5\u540e\u3002\n\n$a$ \u8bb0\u5f55\u6700\u63a5\u8fd1\u7684\u767d\u8272\u5de6\u8fb9\u4f4d\u7f6e\u3002\n\n$b$ \u8bb0\u5f55\u4e32\u53f3\u8fb9\u4f4d\u7f6e\u3002\n\n$c$ \u8bb0\u5f55\u5f53\u524d\u989c\u8272\u3002\n\n\u6700\u540e\u8bb0\u5f97 `min(ans,n)` \u5f53\u4f60\u7834\u73af\u6210\u94fe\uff0c\u7136\u540e\u6574\u6761\u94fe\u90fd\u662f\u4e00\u79cd\u5b57\u7b26\uff08\u4e0d\u8981\u62a0\u5b57\u773c\uff09\u65f6\uff0c\u90a3\u4e48\u4f1a\u5927\u4e8en\uff0c\u55ef\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: beads\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\n#define N 1000\nint n, a, b, ans, w;\nchar s[N], c;\n\nint main()\n{\n    usaco(\"beads\");\n    scanf(\"%d %s\", &n, s);\n    memcpy(s + n, s, n);\n    for (int i = 0; i < n<<1; i++)\n    {\n        if (s[i] == 'w')\n            b++, w++;\n        else if (s[i] == c)\n            b++, w = 0;\n        else\n            ans = max(ans, a + b), a = b - w, b = w + 1, w = 0, c = s[i];\n    }\n    ans=max(ans,a+b);\n    printf(\"%d\\n\", min(ans,n));\n    return 0;\n}\n```\n\n## 1.3.2\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1204)\n\n### Solution\n\n\u8bb0\u5f55\u8fde\u7eed\u533a\u95f4\u6700\u957f\u7684\u5de6\u503c\u548c\u53f3\u503c\uff0c\u533a\u95f4\u82e5\u65ad\u88c2\uff0c\u5219\u8bb0\u5f55\u6700\u957f\u65ad\u88c2\u533a\u95f4\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: milk2\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nstruct qwq\n{\n    int l;\n    int r;\n} a[6000];\nint n, ansl, ansr;\nint maxn, minn;\nint cmp(qwq a, qwq b)\n{\n    if (a.l == b.l)\n        return a.r < b.r;\n    else\n        return a.l < b.l;\n}\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"milk2\");\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) scanf(\"%d %d\", &a[i].l, &a[i].r);\n    sort(a, a + n, cmp);\n    ansl = a[0].l, ansr = a[0].r;\n    for (int i = 0; i < n; i++)\n    {\n        if (ansr < a[i].l) minn = max(minn, a[i].l - ansr), ansl = a[i].l, ansr = a[i].r;\n        ansl = min(ansl, a[i].l), ansr = max(ansr, a[i].r);\n        maxn = max(maxn, ansr - ansl);\n    }\n    printf(\"%d %d\\n\", maxn, minn);\n    return 0;\n}\n```\n\n## 1.3.3\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1205)\n\n### solution\n\n\u7eaf\u66b4\u529b\u4e86\uff0c\u6ca1\u5565\u597d\u8bf4\uff0c\u5bc4\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: transform\nLANG: C++\n*/\n#include<bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a,b) memset(a,b,sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint n;\nchar a[15][15], b[15][15], c[15][15], d[15][15];\nbool work1()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= n; j++)\n            b[j][n - i + 1] = a[i][j];\n    }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            if (b[i][j] != c[i][j])\n                return 0;\n    return 1;\n}\nbool work2()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= n; j++)\n            b[n - i + 1][n - j + 1] = a[i][j];\n    }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            if (b[i][j] != c[i][j])\n                return 0;\n    return 1;\n}\nbool work3()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= n; j++)\n            b[n - j + 1][i] = a[i][j];\n    }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            if (b[i][j] != c[i][j])\n                return 0;\n    return 1;\n}\nbool work4()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= n; j++)\n            b[i][n - j + 1] = a[i][j];\n    }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            if (b[i][j] != c[i][j])\n                return 0;\n    return 1;\n}\nbool work5()\n{\n    work4();\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            a[i][j] = b[i][j];\n    if (work1())\n        return 1;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            a[i][j] = b[i][j];\n    if (work2())\n        return 1;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            a[i][j] = b[i][j];\n    if (work3())\n        return 1;\n    return 0;\n}\nbool work6()\n{\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            if (b[i][j] != c[i][j])\n                return 0;\n    return 1;\n}\nvoid work()\n{\n    if (work1())\n    {\n        cout << \"1\\n\";\n        return;\n    }\n    if (work2())\n    {\n        cout << \"2\\n\";\n        return;\n    }\n    if (work3())\n    {\n        cout << \"3\\n\";\n        return;\n    }\n    if (work4())\n    {\n        cout << \"4\\n\";\n        return;\n    }\n    if (work5())\n    {\n        cout << \"5\\n\";\n        return;\n    }\n    if (work6())\n    {\n        cout << \"6\\n\";\n        return;\n    }\n    cout << \"7\\n\";\n}\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"transform\");\n    cin >> n;\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n        {\n            cin >> a[i][j];\n            d[i][j] = a[i][j];\n        }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= n; j++)\n            cin >> c[i][j];\n    work();\n    return 0;\n}\n```\n\n## 1.3.4\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P3864)\n\n### solution\n\n\u8fd9\u9053\u9898\u5c31\u662f\u7b80\u5355\u7684\u641c\u7d22\uff0c\u6216\u8005\u8bf4\u662f\u5faa\u73af\u4e5f\u53ef\u3002\n\n\u8f93\u5165\u4e00\u6b21\u5b57\u5178\u548c\u7f16\u53f7\u3002\n\n\u7136\u540e\u8bf4\u51fa\u53ef\u80fd\u7684\u540d\u5b57\uff0c\u5faa\u73af\u4e3a $3^n$ \u6b21\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: namenum\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nstring dict[5000];\nint cnt = 0;\nbool ans = false;\nstring kb[10] = {\"\", \"\", \"ABC\", \"DEF\", \"GHI\", \"JKL\", \"MNO\", \"PRS\", \"TUV\", \"WXY\"};\n\ninline void dfs(string namenum, string result)\n{\n    if (namenum.empty())\n    {\n        if (*lower_bound(dict, dict + 4617, result) == result)\n        {\n            cout << result << endl;\n            if (!ans) ans = true;\n        }\n    }\n    else\n        for (int i = 0; i < 3; i++) dfs(namenum.substr(1), result + kb[namenum[0] - '0'][i]);\n    return;\n}\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"namenum\");\n    string namenum;\n    cin >> namenum;\n    freopen(\"dict.txt\", \"r\", stdin);\n    for (int i = 0; i < 4617; i++) cin >> dict[i];\n    dfs(namenum, \"\");\n    if (!ans) cout << \"NONE\" << endl;\n    return 0;\n}\n```\n\n## 1.3.5\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1207)\n\n### solution\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u76f4\u63a5\u5728\u7ed3\u6784\u4f53\u7f16\u5199\u51fd\u6570\uff0c\u4ee5\u53ca\u7f16\u5199\u4e00\u4e2a\u521d\u59cb\u5316\u51fd\u6570\u3002\n\n\u90a3\u4e48\u9488\u5bf9\u6bcf\u4e00\u6570\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u641e\u4e00\u4e2a\u7b54\u6848\u51fa\u6765\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: palsquare\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint b;\ninline char c(int x)\n{\n    if (x >= 0 && x <= 9) return x + '0';\n    return x - 10 + 'A';\n}\nstruct node\n{\n    int l, a[20];\n    node(int x)\n    {\n        for (l = 0; x; l++) a[l] = x % b, x /= b;\n    }\n    void out()\n    {\n        for (int i = l - 1; i >= 0; i--) printf(\"%c\", c(a[i]));\n    }\n    bool tf()\n    {\n        for (int i = 0; i < l; i++)\n            if (a[i] != a[l - i - 1]) return false;\n        return true;\n    }\n};\nint main()\n{\n    usaco(\"palsquare\");\n    scanf(\"%d\", &b);\n    for (int i = 1; i <= 300; i++)\n    {\n        node n(i * i);\n        if (n.tf())\n        {\n            node m(i);\n            m.out();\n            putchar(' ');\n            n.out();\n            putchar('\\n');\n        }\n    }\n    return 0;\n}\n```\n\n## 1.3.6\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1207)\n\n### Solution\n\n\u4e0e\u4e0a\u4e00\u9898\u7684\u89e3\u51b3\u65b9\u6cd5\u4e0d\u5c3d\u76f8\u540c\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: dualpal\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nstruct Num\n{\n    int val[100], pp, n;\n    Num(int x, int p)\n    {\n        for (n = 0; x; n++) val[n] = x % p, x /= p;\n    }\n    bool check()\n    {\n        for (int i = 0; i < n; i++)\n            if (val[i] != val[n - i - 1]) return false;\n        return true;\n    }\n};\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"dualpal\");\n    int ans = 0;\n    int n, s;\n    scanf(\"%d%d\", &n, &s);\n    for (int i = s + 1; ans < n; i++)\n    {\n        int ok = 0;\n        for (int j = 2; j < 11; j++)\n        {\n            Num temp(i, j);\n            if (temp.check()) ok++;\n        }\n        if (ok>=2) printf(\"%d\\n\", i), ans++;\n    }\n    return 0;\n}\n```\n\n## 1.4.2\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1208)\n\n### Solution\n\n\u6211\u4eec\u601d\u8003\u4e00\u4e0b\uff0c\u8d2a\u5fc3\uff0c\u5c31\u662f\u9700\u8981\u628a\u6700\u4fbf\u5b9c\u7684\u5148\u4e70\u4e86\u518d\u8bf4\u3002\n\n\u518d\u4e70\u8d35\u70b9\u7684\u3002\n\n\u6240\u4ee5\u6392\u5e8f\u4e00\u4e0b\uff0c\u518d\u53bb\u4e70\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: milk\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 200200\npair<int, int> q[N];\nint x, n, ans;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"milk\");\n    scanf(\"%d%d\", &x, &n);\n    for (int i = 0; i < n; i++) scanf(\"%d%d\", &q[i].first, &q[i].second);\n    sort(q, q + n);\n    for (int i = 0; i < n && x > 0; i++)\n    {\n        ans += (x < q[i].second ? x : q[i].second) * q[i].first;\n        x -= q[i].second;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n## 1.4.3\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1209)\n\n### Solution\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u8fd8\u662f\u5c1d\u8bd5\u8d2a\u5fc3\u505a\u6cd5\uff0c\u5148\u6709\u4e00\u5757\u6728\u677f\u4ece\u5934\u94fa\u5230\u5c3e\uff0c\u7136\u540e\u518d\u65ad\u5f00 **\u6700\u957f** \u7684\u5730\u65b9\uff0c\u91cd\u590d\u65ad\u5f00 $m-1$ \u5904\uff0c\u5c31\u53ef\u4ee5\u53ea\u4f7f\u7528 $m$ \u5757\u6728\u677f\u4e86\u3002\n\n\u7279\u5224\u4f60\u7684\u725b\u7684\u6570\u91cf\u5982\u679c\u6bd4\u6728\u677f\u591a\uff0c\u90a3\u5c31\u662f\u4e0d\u662f\u76f4\u63a5\u653e\u5c31\u597d\u5462\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: barn1\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 500\nint m, s, c, a[N], w[N];\nint cmp(int a, int b)\n{\n    return a > b;\n}\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"barn1\");\n    scanf(\"%d%d%d\",&m,&s,&c);\n    if (m > c) { printf(\"%d\\n\", c); return 0; }\n    for (int i = 0; i < c; i++) scanf(\"%d\", &a[i]);\n    sort(a, a + c);\n    int ans = a[c - 1] - a[0] + 1;\n    for (int i = 1; i < c; i++) w[i] = a[i] - a[i - 1];\n    sort(w + 1, w + c, cmp);\n    for (int i = 1; i <= m - 1; i++) ans -= w[i] - 1;\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n## 1.4.5\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1211)\n\n### Solution\n\n\u66b4\u529b\u62c6\u89e3\u6bcf\u4e00\u4f4d\uff0c\u6211\u4eec\u4ece100-999\u76f4\u63a5\u5faa\u73af\u5c31\u597d\u4e86\uff0c\u7528\u4e00\u4e2a\u51fd\u6570\u89e3\u51b3\u91cd\u590d\u95ee\u9898\uff08\u503c\u5f97\u5b66\u4e60\uff09\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: crypt1\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint a[20], n, ans;\nil int check(int x)\n{\n    for (int i = 0; i < n; i++)\n    {\n        if (a[i] == x) return true;\n    }\n    return false;\n}\n\nil bool find(int xx, int p)\n{\n    for (int k = 0, x = xx; x; k++, x /= 10)\n        if (k == p || !check(x % 10)) return false;\n    return true;\n}\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"crypt1\");\n    scanf(\"%d\", &n);\n    for (int i = 0; i < n; i++) scanf(\"%d\", &a[i]);\n    for (int i = 100; i <= 999; i++)\n    {\n        for (int j = 10; j <= 99; j++)\n        {\n            int now1 = i * (j % 10), now2 = i * (j / 10), now3 = i * j;\n            if (find(i, 3) && find(j, 2) && find(now1, 3) && find(now2, 3) && find(now3, 4)) ans++;\n        }\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n## 1.4.6\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P2693)\n\n### Solution\n\n\u679a\u4e3e\u9501\u5934\u7684\u6bcf\u4e00\u4f4d\u5373\u53ef\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: combo\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint n, a[10], b[10];\nbool flag[120][120][120];\nll ans;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"combo\");\n    scanf(\"%d\", &n);\n    scanf(\"%d%d%d\", &a[1], &a[2], &a[3]);\n    scanf(\"%d%d%d\", &b[1], &b[2], &b[3]);\n    for (int i = -2; i <= 2; i++)\n        for (int j = -2; j <= 2; j++)\n            for (int k = -2; k <= 2; k++)\n            {\n                if (!flag[(a[1] + i + n) % n][(a[2] + j + n) % n][(a[3] + k + n) % n]) ans++;\n                flag[(a[1] + i + n) % n][(a[2] + j + n) % n][(a[3] + k + n) % n] = true;\n            }\n    for (int i = -2; i <= 2; i++)\n        for (int j = -2; j <= 2; j++)\n            for (int k = -2; k <= 2; k++)\n            {\n                if (!flag[(b[1] + i + n) % n][(b[2] + j + n) % n][(b[3] + k + n) % n]) ans++;\n                flag[(b[1] + i + n) % n][(b[2] + j + n) % n][(b[3] + k + n) % n] = true;\n            }\n    printf(\"%lld\\n\", ans);\n    return 0;\n}\n```\n\n## 1.4.7\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1212)\n\n### Solution\n\n\u8fd9\u9053\u9898\u7684\u89e3\u6cd5\u4e5f\u662f\u76f8\u5f53\u7b80\u5355\uff0c\u6bd4\u524d\u9762\u7684\u9898\u8981\u6c42\u7801\u529b\u9ad8\u4e00\u70b9\u3002\n\n\u9996\u5148\u4f60\u4ece\u4e00\u4e2a\u4f20\u9001\u95e8\u51fa\u6765\uff0c\u8fdb\u5165\u7b2c\u4e8c\u4e2a\u4f20\u9001\u95e8\uff0c\u4f60\u662f\u76f4\u63a5\u8fdb\u5165\u7b2c\u4e00\u4e2a\u4f20\u9001\u95e8\u51fa\u6765\u7684\u53f3\u8fb9\u7b2c\u4e00\u4e2a\u3002\n\n\u5176\u6b21\u4f60\u8d70\u904d\u6240\u6709\u4f20\u9001\u95e8\u6700\u591a\u5c31\u662f\u6240\u6709\u4f20\u9001\u95e8\u7684\u4e2a\u6570\u3002\n\n\u7136\u540e\u4f60\u9884\u5904\u7406\u4e00\u4e2a\u95e8\u53f3\u9762\u7684\u90a3\u4e2a\u95e8\u7684\u4f4d\u7f6e\u3002\n\n\u66b4\u529b DFS\uff01\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: wormhole\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 20\nint n;\nstruct qwq\n{\n    int x;\n    int y;\n} mp[N];\nbool cmp(qwq a, qwq b)\n{\n    if (a.y == b.y)\n        return a.x < b.x;\n    else\n        return a.y < b.y;\n}\nint r[N], to[N];\nint ans;\n\nbool is_cycle()\n{\n    for (int i = 1; i <= n; i++)\n    {\n        int pos = i;\n        for (int cnt = 1; cnt <= n && pos; cnt++)\n            pos = r[to[pos]];\n        if (pos) return true;\n    }\n    return false;\n}\n\nvoid dfs(int step, int pre)\n{\n    if (step >= n)\n    {\n        if (is_cycle()) ans++;\n    }\n    else\n        for (int i = pre + 1; i <= n; i++)\n            if (!to[i])\n                for (int j = i + 1; j <= n; j++)\n                    if (!to[j])\n                    {\n                        to[i] = j, to[j] = i;\n                        dfs(step + 2, i);\n                        to[i] = to[j] = 0;\n                    }\n}\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"wormhole\");\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) scanf(\"%d%d\", &mp[i].x, &mp[i].y);\n    sort(mp + 1, mp + n + 1, cmp);\n    for (int i = 1; i <= n; i++)\n        if (mp[i].y == mp[i + 1].y) r[i] = i + 1;\n    dfs(0, 0);\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n## 1.4.8\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P3650)\n\n### Solution\n\n\u5c1d\u8bd5\u679a\u4e3e\u6700\u5c0f\u5230\u6700\u5927\u8fd9\u4e2a\u533a\u95f4\uff0c\u8fd9\u4e2a\u533a\u95f4\u7684\u6570\u6765\u5f53\u8fd9\u4e2a\u6240\u88ab\u5141\u8bb8\u7684\u533a\u95f4\u7684\u5de6\u7aef\u70b9\u3002\n\n\u90a3\u4e48\u4f60\u5728\u6bcf\u4e00\u6b21\u679a\u4e3e\u4e2d\u8ba1\u7b97\u6bcf\u4e2a\u5c71\u5cf0\u7ed9\u4f60\u5e26\u6765\u7684\u8d21\u732e\u3002\n\n\u7edf\u8ba1\u6700\u5c0f\u8d21\u732e\u5c31\u53ef\u4ee5\u4e86\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: skidesign\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint n, now, ans = INF;\n\n#define N 1000\n\nint a[N];\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"skidesign\");\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++) scanf(\"%d\", &a[i]);\n    sort(a + 1, a + n + 1);\n    for (int i = a[i]; i <= a[n]; i++)\n    {\n        for (int j = 1; j <= n; j++)\n        {\n            if (a[j] + 17 < i) now += (i-a[j] - 17) * (i-a[j] - 17);\n            if (a[j] > i) now += (a[j]-i) * (a[j]-i);\n        }\n        ans = min(ans, now);\n        now = 0;\n    }\n    printf(\"%d\\n\", ans);\n    return 0;\n}\n```\n\n## 1.5.2\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1214)\n\n### Solution\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u5e94\u8be5\u60f3\u6e05\u695a\u4ed6\u8981\u8ba9\u6211\u4eec\u5e72\u4ec0\u4e48\u3002\n\n\u627e\u5230\u4e00\u4e2a\u957f\u5ea6\u4e3an\u7684\u7b49\u5dee\u6570\u5217\uff0c\u8fd9\u4e2a\u7b49\u5dee\u6570\u5217\u7684\u6570\u6ee1\u8db3 ${ x | p^2 + q^2\\ \\ \\ p,q \\in N \\cap [0,m] }$\u3002\n\n\u800c\u4e14\u8f93\u51fa\u9700\u8981\u6309\u7167 $b$ \u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\uff0c$a$ \u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u8fdb\u884c\u6392\u5e8f\u3002\n\n\u6240\u4ee5\u6211\u4eec\u518d\u627e\u8fd9\u4e2a\u7684\u65f6\u5019\u8981\u8bb0\u5f97\u6309\u7167 $b$ \u5728\u5916\u5faa\u73af\uff0c$a$ \u5728\u5185\u5faa\u73af\u3002\n\n\u7136\u540e\u66b4\u529b\u68c0\u67e5\u5408\u4e0d\u5408\u6cd5\uff0c\u90a3\u606d\u559c\u4f60\uff0c**\u8d85\u65f6** \u5566\uff01\n\n\u56e0\u4e3a USACO \u7684\u5185\u5b58\u9650\u5236\u4e3a 16MB\uff0c\u4f46\u4e0d\u8981\u88ab\u8fd9\u4e48\u5c0f\u7684\u5185\u5b58\u9650\u5236\u4f4f\u624b\u811a\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5185\u5b58\u8fd8\u53ef\u4ee5\u5f00\u5927\u7ea6 4000000 \u7684int\u6570\u7ec4\uff0c\u6211\u4eec\u5c06 $p^2 + q^2$ \u9884\u5904\u7406\uff0c\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\uff0c\u662f\u4e0d\u662f\u5f88\u723d\u3002\n\n$m \\leq 250$ \u6240\u4ee5\u53ea\u9700\u8981\u5f00 250000 \u5de6\u53f3\u7684\u6570\u7ec4\u5373\u53ef\u3002\n\nok\u60f3\u597d\u5c31\u5f00\u59cb\u641e\uff01\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: ariprog\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint n, top, flag, s[100000], check[250 * 250 * 2 + 100], tot;\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"ariprog\");\n    scanf(\"%d %d\", &n, &top);\n    for (int i = 0; i <= top; i++)\n        for (int j = 0; j <= top; j++)\n            s[++tot] = i * i + j * j;\n    for (int i = 0; i <= top; i++)\n        for (int j = 0; j <= top; j++)\n            check[i * i + j * j] = true;\n    sort(s + 1, s + tot + 1);\n    int m = unique(s + 1, s + tot + 1) - s;\n\n    for (int i = 1; i * (n - 1) <= top * top + top * top; i++)\n    {\n        for (int j = 1; j <= m && s[j] + i * (n - 1) <= top * top + top * top; j++)\n        {\n            int now = i + s[j], ans = 1;\n            while (check[now] && ans < n) now += i, ans++;\n            if (ans == n) printf(\"%d %d\\n\", s[j], i), flag = true;\n        }\n    }\n    if (flag == false) printf(\"NONE\\n\");\n    return 0;\n}\n```\n\n## 1.5.3\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1215)\n\n### Solution\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4f7f\u7528\u5bbd\u5ea6\uff08\u5e7f\u5ea6\uff09\u4f18\u5148\u641c\u7d22 BFS \u8fdb\u884c\u89e3\u7b54\u3002\n\n\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u6876\u7684\u7684\u72b6\u6001\uff0c\u4f7f\u7528 **\u7a7a\u95f4\u6362\u65f6\u95f4** \u7684\u65b9\u5f0f\u8fdb\u884c\u5224\u91cd\u3002\n\n\u88c5\u6ee1\u6ea2\u51fa\uff0c\u8fd8\u662f\u5b8c\u5168\u5012\u5e72\u51c0\uff0c\u8fd9\u6837\u89e3\u51b3\u3002\n\n$ change = min ( limit - now , another_bottle_now) $\n\n\u7136\u540e\u6700\u540e\u50a8\u5b58\u7b54\u6848\u3002\n\n> \u5f53 $a$ \u6876\u662f\u7a7a\u7684\u65f6\u5019\uff0c$c$ \u6876\u4e2d\u725b\u5976\u6240\u5269\u91cf\u7684\u6240\u6709\u53ef\u80fd\u6027\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: milk3\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nstruct qwq\n{\n    int a, b, c;\n    int step;\n};\n\nqueue<qwq> q;\n\nint n, checkx[30 * 30 * 30 + 100], limita, limitb, limitc, ans[30];\n\nint check(qwq x)\n{\n    if (checkx[x.a * n * n + x.b * n + x.c]) return true;\n    if (x.a == 0) ans[x.c] = true;\n    checkx[x.a * n * n + x.b * n + x.c] = true;\n    return false;\n}\n\nvoid bfs()\n{\n    while (!q.empty())\n    {\n        qwq temp, now = q.front();\n        int change;\n        if (now.a)\n        {\n            temp = now;\n            change = min(limitb - temp.b, temp.a);\n            temp.b += change, temp.a -= change;\n            if (!check(temp)) q.push(temp);\n            temp = now;\n            change = min(limitc - temp.c, temp.a);\n            temp.c += change, temp.a -= change;\n            if (!check(temp)) q.push(temp);\n        }\n        if (now.c)\n        {\n            temp = now;\n            change = min(limita - temp.a, temp.c);\n            temp.a += change, temp.c -= change;\n            if (!check(temp)) q.push(temp);\n            temp = now;\n            change = min(limitb - temp.b, temp.c);\n            temp.b += change, temp.c -= change;\n            if (!check(temp)) q.push(temp);\n        }\n        if (now.b)\n        {\n            temp = now;\n            change = min(limita - temp.a, temp.b);\n            temp.a += change, temp.b -= change;\n            if (!check(temp)) q.push(temp);\n            temp = now;\n            change = min(limitc - temp.c, temp.b);\n            temp.c += change, temp.b -= change;\n            if (!check(temp)) q.push(temp);\n        }\n        q.pop();\n    }\n}\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"milk3\");\n    scanf(\"%d%d%d\", &limita, &limitb, &limitc);\n    n = max(limita, max(limitb, limitc)) + 1;\n    q.push((qwq){0, 0, limitc, 0});\n    bfs();\n    bool flag = false;\n    for (int i = 0; i < 30; i++)\n    {\n        if (ans[i])\n        {\n            if (flag) printf(\" \");\n            printf(\"%d\", i);\n            flag = true;\n        }\n    }\n    printf(\"\\n\");\n    return 0;\n}\n```\n\n## 1.6.2\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1216)\n\n### Solution\n\n\u5bf9\u4e8e\u8fd9\u9053\u9898\uff0c\u6211\u4eec\u7684\u9012\u63a8\u65b9\u7a0b\u662f\u8fd9\u6837\u7684\u3002\n\n$f[i][j]=max{f[i-1][j],f[i-1][j-1]}+a[i][j]$\n\n\u4e8e\u662f\u5c31\u5199\u5b8c\u4e86\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: numtri\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 1010\n\nint a[N][N], temp, maxn = -INF, n;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"numtri\");\n    scanf(\"%d\", &n);\n    for (int i = 1; i <= n; i++)\n    {\n        for (int j = 1; j <= i; j++)\n        {\n            scanf(\"%d\", &temp);\n            a[i][j] = temp + max(a[i - 1][j], a[i - 1][j - 1]);\n            if (i == n)\n                maxn = max(maxn, a[i][j]);\n        }\n    }\n    printf(\"%d\\n\", maxn);\n    return 0;\n}\n```\n\n## 1.6.3\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1217)\n\n### Solution\n\n\u8fd9\u9053\u9898\u6709\u4e24\u79cd\u65b9\u6cd5\n\n\u7b2c\u4e00\u4e2a\u679a\u4e3e\u5404\u4f4d\u4e0a\u7684\u6570\uff0c\u7136\u540e\u5224\u65ad\u662f\u5426\u4e3a\u7d20\u6570\u3002\n\n\u7b2c\u4e8c\u79cd\u5219\u662f\u7d20\u6570\u7b5b\uff0c\u5224\u65ad\u7d20\u6570\u3002\n\n\u6211\u91c7\u7528\u7b2c\u4e8c\u79cd\u3002\n\n\u4f46\u662f USACO \u4ed6\u5361\u6211\uff01\uff01\u7a7a\u95f4\uff01\uff01\uff01\n\n\u90a3\u4e48\u6ca1\u529e\u6cd5\u4e86\uff0c\u6253\u8868\u5427\u3002\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: pprime\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nint a[1000]={};\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"pprime\");\n    int s, e;\n    cin >> s >> e;\n    for (int j = 0;; j++)\n    {\n        if (j >= 1000) break;\n        if (a[j] >= s && a[j] <= e) cout << a[j] << endl;\n        if (a[j] > e) break;\n        if (a[j] < s) continue;\n    }\n    return 0;\n}\n```\n\n### Code2\n\n```cpp\n/*\nID: RocksonLee\nTASK: pprime\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 10000000\n\nint prime[N/10], ptot = 0;\nbool vis[N];\n\nvoid get_prime(int n)\n{\n    vis[0] = vis[1] = true;\n    for (int i = 2; i <= n; i++)\n    {\n        if (!vis[i]) prime[++ptot] = i;\n        for (int j = 1; j <= ptot && i * prime[j] <= n; j++)\n        {\n            vis[i * prime[j]] = true;\n            if (i % prime[j] == 0) break;\n        }\n    }\n}\n\nbool check(int x)\n{\n    int temp[10], tot = 0;\n    while (x)\n    {\n        temp[++tot] = x % 10;\n        x /= 10;\n    }\n    for (int i = 1; i <= tot; i++)\n        if (temp[i] != temp[tot - i + 1]) return false;\n    return true;\n}\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"pprime\");\n    int l, r;\n    scanf(\"%d %d\", &l, &r);\n    if (r > 10000000) r = 9999999;\n    get_prime(r);\n    for (int i = 1; i <= ptot; i++)\n    {\n        if (prime[i] < l) continue;\n        if (check(prime[i])) printf(\"%d\\n\", prime[i]);\n    }\n    return 0;\n}\n\n```\n\n## 1.6.4\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1218)\n\n### Solution\n\n\u6211\u4eec\u53ea\u9700\u8981\u7528\u6b27\u62c9\u7b5b\u7b5b\u51fa\u8d28\u6570\uff0c\u7136\u540e\u5bf9\u8d28\u6570\u8fdb\u884c\u4e00\u4e2a\u62c6\u5206\uff0c\u518d\u68c0\u67e5\u662f\u5426\u5408\u6cd5\u5373\u53ef\u3002\n\n\u4f46\u662f\uff0cUSACO \u6211\u7231\u4f60\uff0c\u53c8\u7206\u5185\u5b58\u4e86\uff0c\u90a3\u4e48\u770b\u5230\u8fd9\u4e2a\u8f93\u5165\u8fd9\u4e48\u7b80\u5355\u3002\n\n$n \\leq 8$\n\n\u6211\u76f4\u63a5\u5c31\u6253\u8868\u5427!\n\n### Code1\n\n```cpp\n/*\nID: RocksonLee\nTASK: sprime\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"sprime\");\n    int n;\n    scanf(\"%d\", &n);\n    if (n == 8) printf(\"23399339\\n29399999\\n37337999\\n59393339\\n73939133\\n\");\n    if (n == 7) printf(\"2339933\\n2399333\\n2939999\\n3733799\\n5939333\\n7393913\\n7393931\\n7393933\\n\");\n    if (n == 6) printf(\"233993\\n239933\\n293999\\n373379\\n373393\\n593933\\n593993\\n719333\\n739391\\n739393\\n739397\\n739399\\n\");\n    if (n == 5) printf(\"23333\\n23339\\n23399\\n23993\\n29399\\n31193\\n31379\\n37337\\n37339\\n37397\\n59393\\n59399\\n71933\\n73331\\n73939\\n\");\n    if (n == 4) printf(\"2333\\n2339\\n2393\\n2399\\n2939\\n3119\\n3137\\n3733\\n3739\\n3793\\n3797\\n5939\\n7193\\n7331\\n7333\\n7393\\n\");\n    if (n == 3) printf(\"233\\n239\\n293\\n311\\n313\\n317\\n373\\n379\\n593\\n599\\n719\\n733\\n739\\n797\\n\");\n    if (n == 2) printf(\"23\\n29\\n31\\n37\\n53\\n59\\n71\\n73\\n79\\n\");\n    if (n == 1) printf(\"2\\n3\\n5\\n7\\n\");\n    return 0;\n}\n```\n\n### Code2\n\n```cpp\n/*\nID: RocksonLee\nTASK: sprime\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 100000000\n\nint prime[N / 10], ptot = 0;\nbool vis[N];\n\nvoid get_prime(int n)\n{\n    vis[0] = vis[1] = true;\n    for (int i = 2; i <= n; i++)\n    {\n        if (!vis[i]) prime[++ptot] = i;\n        for (int j = 1; j <= ptot && i * prime[j] <= n; j++)\n        {\n            vis[i * prime[j]] = true;\n            if (i % prime[j] == 0) break;\n        }\n    }\n}\n\nvoid usaco(string problem)\n{\n    string in = problem + \".in\", out = problem + \".out\";\n    freopen(in.c_str(), \"r\", stdin);\n    freopen(out.c_str(), \"w\", stdout);\n}\n\nint main()\n{\n    usaco(\"sprime\");\n    int n;\n    scanf(\"%d\", &n);\n    n = (int)pow(10, n);\n    get_prime(n);\n    for (int i = 1; i <= ptot; i++)\n    {\n        if (prime[i] < n / 10) continue;\n        if (prime[i] > n) break;\n        int x = prime[i];\n        while (x)\n        {\n            if (vis[x]) break;\n            x /= 10;\n        }\n        if (!x) printf(\"%d\\n\", prime[i]);\n    }\n    return 0;\n}\n```\n\n# USACO Section 2\n\n## 2.1.3\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1457)\n\n### Solution\n\n\u9996\u5148\u8fdb\u884c\u5899\u7684\u4e8c\u8fdb\u5236\u62c6\u5206\n\n\u7136\u540e\u5bf9\u56fe\u8fdb\u884c\u4e00\u4e2a\u67d3\u8272\uff0c\u8f93\u51fa\u989c\u8272\u6570\u91cf\n\n\u63a5\u7740\u68c0\u67e5\u6bcf\u4e2a\u989c\u8272\u8bb0\u5f55\u5927\u5c0f\u5e76\u8f93\u51fa\n\n> \u9009\u62e9\u6700\u4f73\u7684\u5899\u6765\u63a8\u5012\u3002\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u897f\u7684\uff0c\u4ecd\u7136\u6709\u591a\u89e3\u65f6\u9009\u6700\u9760\u5357\u7684\u3002\u540c\u4e00\u683c\u5b50\u5317\u8fb9\u7684\u5899\u6bd4\u4e1c\u8fb9\u7684\u5899\u66f4\u4f18\u5148\u3002\n> \u7528\u8be5\u5899\u7684\u5357\u90bb\u5355\u4f4d\u7684\u5317\u5899\u6216\u897f\u90bb\u5355\u4f4d\u7684\u4e1c\u5899\u6765\u8868\u793a\u8fd9\u9762\u5899\uff0c\u65b9\u6cd5\u662f\u8f93\u51fa\u90bb\u8fd1\u5355\u4f4d\u7684\u884c\u6570\u3001\u5217\u6570\u548c\u5899\u7684\u65b9\u4f4d\uff08 N\uff08\u5317\uff09\u6216\u8005 E\uff08\u4e1c\uff09\uff09\u3002\n\n\u56e0\u6b64\uff0c\u6211\u4eec\u4ece\u5de6\u4e0b\u5411\u53f3\u4e0a\u641c\u7d22\uff0c\u7136\u540e\u8bb0\u5f55\u6700\u5927\u503c\n\n\u6700\u540e\u8f93\u51fa\u4e00\u4e0b\n\n### Code\n\n```cpp\n/*\nID: RocksonLee\nTASK: castle\nLANG: C++\n*/\n#include <bits/stdc++.h>\nusing namespace std;\n\n#define il inline\n#define INF 0x3f3f3f3f\n#define cl(a, b) memset(a, b, sizeof(a))\ntypedef long long ll;\ntypedef unsigned long long ull;\n\n#define N 60\n\nint n, m, ansx, ansy, ansn, answay, temp;\n\nbool wall[N][N][5];\n\nint color[N][N], ctot, size[N * N];\n\nqueue<pair<int, int>> q;\n\nvoid bfs(int x, int y)\n{\n    if (color[x][y]) return;\n    ctot++;\n    q.push(make_pair(x, y));\n    while (!q.empty())\n    {\n        int i = q.front().first, j = q.front().second;\n        q.pop();\n        if (color[i][j]) continue;\n        color[i][j] = ctot;\n        if (!color[i + 1][j] && !wall[i][j][3]) q.push(make_pair(i + 1, j));\n        if (!color[i][j + 1] && !wall[i][j][2]) q.push(make_pair(i, j + 1));\n        if (!color[i - 1][j] && !wall[i][j][1]) q.push(make_pair(i - 1, j));\n        if (!color[i][j - 1] && !wall[i][j][0]) q.push(make_pair(i, j - 1));\n    }\n}\n\nvoid usaco(string problem)\n{\n    string in=problem+\".in\",out=problem+\".out\";\n    freopen(in.c_str(),\"r\",stdin);\n    freopen(out.c_str(),\"w\",stdout);\n}\n\nint main()\n{\n    usaco(\"castle\");\n    scanf(\"%d%d\", &m, &n);\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n        {\n            scanf(\"%d\", &temp);\n            for (int k = 0; k < 4; k++) wall[i][j][k] = temp & (1 << k);\n        }\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            bfs(i, j);\n    printf(\"%d\\n\", ctot);\n    for (int i = 1; i <= n; i++)\n        for (int j = 1; j <= m; j++)\n            size[color[i][j]]++;\n    for (int i = 1; i <= ctot; i++)\n        ansn = max(ansn, size[i]);\n    printf(\"%d\\n\", ansn);\n    ansn = 0;\n    for (int j = 1; j <= m; j++)\n        for (int i = n; i >= 1; i--)\n        {\n            if (color[i][j] != color[i - 1][j] && ansn < size[color[i][j]] + size[color[i - 1][j]])\n            {\n                ansn = size[color[i][j]] + size[color[i - 1][j]];\n                answay = 1;\n                ansx = i;\n                ansy = j;\n            }\n            if (color[i][j] != color[i][j + 1] && ansn < size[color[i][j]] + size[color[i][j + 1]])\n            {\n                ansn = size[color[i][j]] + size[color[i][j + 1]];\n                answay = 2;\n                ansx = i;\n                ansy = j;\n            }\n        }\n    printf(\"%d\\n\", ansn);\n    printf(\"%d %d %c\\n\", ansx, ansy, (answay == 1 ? 'N' : 'E'));\n    return 0;\n}\n```\n\n## 2.1.4\n\n### Problem\n\n[Luogu](https://www.luogu.com.cn/problem/P1458)\n", "link": "/posts/!USACO/", "tags": [], "categories": []}, {"title": "About me", "content": "\n\u6765\u81ea\u5e7f\u4e1c,\u6c55\u5934\u7684OIer,\u73b0\u9ad8\u4e00**Oier**\n\n\u4e00\u4e2a\u624b\u6b8b\u97f3\u6e38\u4eba\uff0c\u5e38\u5e38\u73a9**arcaea**, **cytus2**\n\n\n\u90ae\u7bb1:\n\n- \u4e3b\u8981:`lixuanzhang0629@163.com`\n  \n- \u6b21\u8981: `2506295533@qq.com`,`lixuanzhang0629@gmail.com`\n\n\u624b\u673a\u53f7\u7801: `13302709874` (\u4e0a\u5b66\u671f\u95f4\u51e0\u4e4e\u5e38\u5e74\u5173\u673a,\u5468\u672b\u6709\u65f6\u5f00\u673a)\n\n\u7528\u6237\u540d:\n\n- \u4e3b\u8981: `RocksonLee`\n  \n- \u6b21\u8981: `Rockson`,`Rock`,`lxz`,`2506295533`\n\nQQ: [`2506295533`](http://wpa.qq.com/msgrd?v=3&uin=2506295533&site=qq&menu=yes)\n\nTelegram: [`@RocksonLee`](https://t.me/RocksonLee)\n\nTwitter: [`@RocksonLee`]( https://twitter.com/RocksonLee_)\n\nZhihu: [`RocksonLee`](https://www.zhihu.com/people/rocksonlee-6)\n\nLuogu: [`RocksonLee`](https://www.luogu.com.cn/user/146852)\n\nGithub: [`RocksonLee`](https://github.com/RocksonLee)\n\nBilibili: [`RocksonLee`](https://space.bilibili.com/456088161)\n\nNetease Music: [`RocksonLee`](https://music.163.com/#/user/home?id=3718936185)\n\nDiscord: `RocksonLee#8354`", "link": "/about/", "tags": [], "categories": []}, {"title": "Readme", "content": "\nhttps://www.avogado6.com/\n", "link": "/collection/", "tags": [], "categories": []}, {"title": "\u53cb\u94fe", "content": "\n## \u6b22\u8fce\u4e92\u52a0\u53cb\u94fe!\n\n\u8bf7\u5728\u4e0b\u65b9\u8bc4\u8bba\u533a\u7559\u4e0b\u81ea\u5df1\u7684\u53cb\u94fe\n\n\u683c\u5f0f:\n- \u540d\u5b57\u6216\u6635\u79f0\n- \u7f51\u5740\n- \u63cf\u8ff0(\u5982\u4f55\u63cf\u8ff0\u60a8)\n- \u5361\u7247\u989c\u8272(\u6bd4\u5982 `#f7a4b9` )\n\n\u8bf7\u987a\u4fbf\u4e3a\u60a8\u7684\u7f51\u7ad9\u6dfb\u52a0\u4e0a\u6211\u7684\u53cb\u94feqwq\n\n> \u6635\u79f0: RocksonLee\n> \n> \u7f51\u5740: https://blog.Rockson.top\n> \n> \u5934\u50cf: https://blog.Rockson.top/img/avatar_2.webp\n> \n> \u63cf\u8ff0: GDoier", "link": "/links/", "tags": [], "categories": []}, {"title": "\u6570\u8bba\u5de5\u5177", "content": "\n<ul class=\"mdui-list\">\n    <li class=\"mdui-list-item\">\n        <i class=\"mdui-list-item-icon mdui-icon material-icons\" style=\"color: #1abc9c\">check_circle</i>\n        <div class=\"mdui-list-item-content\">\u8d28\u6570\u68c0\u6d4b</div>\n        <div class=\"mdui-list-item mdui-textfield\">\n            <input class=\"mdui-textfield-input\" placeholder=\"\u8bf7\u8f93\u5165\u8981\u68c0\u9a8c\u7684\u6570\u5b57\" onchange=\"prime_chk(this.value)\">\n        </div>\n    </li>\n    <li class=\"mdui-list-item\">\n        <i class=\"mdui-list-item-icon mdui-icon material-icons\" style=\"color: #1abc9c\">check_circle</i>\n        <div class=\"mdui-list-item-content\">\u6c42\u539f\u6839</div>\n        <div class=\"mdui-list-item mdui-textfield\">\n            <input class=\"mdui-textfield-input\" placeholder=\"\u8bf7\u8f93\u5165\u6a21\u6570\" onchange=\"get_primitive_root(this.value)\">\n        </div>\n    </li>\n</ul>\n\n<script>\nfunction prime_chk(x){\n    if(isNaN(x)||x<0){mdui.alert('\u8bf7\u8f93\u5165\u6709\u6548\u6570\u5b57!');node.value=\"\";return;}\n    if(x<=1){mdui.alert(x.toString()+'\u4e0d\u662f\u8d28\u6570');return;}\n    for(var i=2;i*i<=x;++i)if(x%i==0){\n        mdui.alert(x.toString()+'\u4e0d\u662f\u8d28\u6570,\u53ef\u4ee5\u88ab'+i.toString()+'\u6574\u9664');\n        return;\n    }\n    mdui.alert(x.toString()+'\u662f\u8d28\u6570!');\n}\nfunction pw(x,b,p){\n    var res=1;\n    while(b){\n        if(b&1)res=res*x%p;\n        b>>=1,x=x*x%p;\n    }\n    return res;\n}\nfunction get_primitive_root(m){\n    var a=[],tt=0;\n    for(var i=2;i<=m-2;++i)\n        if((m-1)%i==0)a[++tt]=i;\n    for(var i=2;i<=10000;++i){\n        var ff=1;\n        for(var j=1;j<=tt;++j)\n            if(pw(i,a[j],m)==1){ff=0;break;}\n        if(ff){\n            mdui.alert(m.toString()+'\u7684\u539f\u6839\u662f'+i.toString());\n            return;\n        }\n    }\n    return -1;\n}\n</script>", "link": "/math-tools/", "tags": ["\u6570\u8bba"], "categories": []}, {"title": "Readme", "content": "## \u7b80\u4ecb\n\n[demo](https://blog.zcmimi.top/)\n\n\u672c\u535a\u5ba2\u751f\u6210\u5668\u57fa\u4e8e`python`,\u4f7f\u7528\u82e5\u5e72`pip`\u5305,\u517c\u5bb9`hexo`,`jekyll`\u7b49\u535a\u5ba2\u751f\u6210\u5668\n\n\u4f7f\u7528`markdown`,\u652f\u6301`LaTeX`\n\n\u5efa\u8bae\u5148\u4e86\u89e3\u4e0b`markdown`\u548c`yaml`\u7b49\u8bed\u6cd5\n\n\n\u76ee\u524d\u7684\u4e3b\u9898\u4e3a\u57fa\u4e8e`MDUI`\u7684`material design`\n\n## \u4f9d\u8d56\n\n### \u5fc5\u987b\n\n\u8bf7\u5148\u5b89\u88c5`python-frontmatter`\n\n```bash\npip install frontmatter\n```\n\n\u5efa\u8bae\u5148\u5c06`pip`\u6362\u4e3a\u56fd\u5185\u6e90\n\n### \u53ef\u9009\u529f\u80fd\n\n1. `htmlmin`\n\n   \u7528\u4e8e\u538b\u7f29\u7f51\u9875\u6e90\u4ee3\u7801\n\n2. `pypinyin`\n\n   \u7528\u4e8e\u751f\u6210\u535a\u6587\u7684\u62fc\u97f3\u5730\u5740\n\n3. `PyRSS2Gen`\n\n   \u7528\u4e8e\u751f\u6210\u535a\u5ba2\u7684`rss`\n   \n4. `requests`\n\n   \u7528\u4e8e\u767e\u5ea6\u63a8\u9001\n\n## \u914d\u7f6e\u6587\u4ef6\n\n`config.yml`\n\n```yaml\nsite_name: \"your blog name\" # \u7ad9\u70b9\u540d\u79f0\nsite_domain: \"example.com\" # \u57df\u540d\nsite_rt: \"\" # \u7f51\u7ad9\u6839\u76ee\u5f55\u4f4d\u7f6e\n# \u6ca1\u6709\u7279\u6b8a\u60c5\u51b5\u8bf7\u586b \"\"\n# \u6bd4\u5982\u4f60\u56e0\u4e3a\u67d0\u4e9b\u7279\u6b8a\u539f\u56e0,\u6ca1\u6cd5\u76f4\u63a5\u5728\u57df\u540d\u6839\u76ee\u5f55\u90e8\u7f72\u7f51\u7ad9,\u4f4d\u7f6e\u53d8\u6210\u4e86 example.com/web\n#   \u90a3\u4e48:\n#   site_domain: example.com\n#   site_rt: \"/web\"\n#   \u672c\u5730\u8c03\u8bd5\u65f6\u8bf7 site_rt: \"\"\n\nsite_icon: /img/avatar.webp # \u535a\u5ba2\u56fe\u6807\u56fe\u7247\u5730\u5740\nassets_rt: \n# \u5982\u679c\u6709cdn\u63d0\u9ad8assets\u6587\u4ef6\u5939\u7684\u52a0\u8f7d\u901f\u5ea6,\u8bf7\u586b\u5165\u5730\u5740\n# \u5426\u5219\u7559\u7a7a\n\navatar: /img/avatar.webp # \u535a\u5ba2\u5934\u50cf,\u9ed8\u8ba4\u5934\u50cf\u5730\u5740\nauthor: \"your name\" # \u9ed8\u8ba4\u4f5c\u8005\ntheme: clean # \u81ea\u5e26\u4e3b\u9898\u4e24\u79cd\u98ce\u683c(beauty|clean)\n\narticle_address: number # \u6587\u7ae0\u5730\u5740(number|pinyin)\n# \u82e5\u9009\u62e9pinyin,\u8bf7\u5148pip install pypinyin\n\n# \u9996\u9875\npage_articles: 10 # \u9996\u9875\u6bcf\u9875\u6587\u7ae0\u6570\npreview_len: 100  # \u9996\u9875\u6587\u7ae0\u9884\u89c8\u5b57\u6570\n\nrandomimg_type: folder # \u968f\u673a\u56fe\u7247\u5730\u5740\u7c7b\u578b(folder | list)\nrandomimg_list:        # \u968f\u673a\u56fe\u7247\u5730\u5740\u5217\u8868\n# - url\nrandomimg_path: /img # \u968f\u673a\u56fe\u7247\u6587\u4ef6\u5939\u5730\u5740\nrandomimg_tot: 33    # \u56fe\u7247\u603b\u6570\nrandomimg_suf: webp  # \u56fe\u7247\u6587\u4ef6\u540e\u7f00\u540d\n\nhtmlmin: False # \u662f\u5426\u538b\u7f29\u6e90\u4ee3\u7801\n# \u82e5\u586b1,\u8bf7\u5148pip install htmlmin\n\ncomment: False # \u662f\u5426\u5f00\u542f\u8bc4\u8bba\ncomment_typ: valine # \u76ee\u524d\u4ec5\u652f\u6301valine\n# Valine\u8bc4\u8bba(\u8bf7\u53c2\u8003https://valine.js.org/configuration.html)\nvaline_appid: <your appid>\nvaline_appkey: <your appkey>\nvaline_placeholder: \u6765\u5feb\u6d3b\u554a # \u63d0\u793a\u8bed\n\npjax: False # \u662f\u5426\u9ed8\u8ba4\u5f00\u542fpjax\n\n# \u97f3\u4e50\u64ad\u653e\u5668(\u4f7f\u7528MetingJS)\nmusic_server: netease  # \u670d\u52a1\u5668\nmusic_id: 765727960    # \u6b4c\u5355id\nmusic_order: random    # \u968f\u673a/\u987a\u5e8f\nmusic_theme: '#f7a4b9' # \u989c\u8272\n# \u8be6\u89c1https://github.com/metowolf/MetingJS\n\nbaidu_push: True # \u767e\u5ea6\u63a8\u9001 \u8bf7\u5b89\u88c5requests(pip install requests\nbaidu_push_url: http://data.zz.baidu.com/urls?site=<your site url>&token=<your token> #\u767e\u5ea6\u63a8\u9001\u63a5\u53e3\u8c03\u7528\u5730\u5740\n\nrss: False # \u751f\u6210rss(/atom.xml)\n           # \u8bf7\u5148pip install PyRSS2Gen\n\nrepo: # \u53ef\u4ee5\u540c\u65f6\u63a8\u9001\u81f3\u591a\u4e2a\u4ed3\u5e93\n  - git@github.com:zcmimi/blog.git # \u90e8\u7f72\u4ed3\u5e93\u5730\u5740\n```\n\n\n\n## \u5f00\u59cb\u5199\u4f5c\n\n### \u65b0\u5efa\u6587\u7ae0: \n\n`python blog.py n/new xxxx`\n\n\u5c06\u4f1a\u5728`source/_posts`\u6587\u4ef6\u5939\u521b\u5efa`xxxx.md`\n\n### \u65b0\u5efa\u9875\u9762\n\n`python blog.py np/newpage xxxx`\n\n\u5c06\u4f1a\u5728`source/_pages`\u6587\u4ef6\u5939\u521b\u5efa`xxxx.md`\n\n### \u9884\u89c8\n\n`python blog.py d/deploy`\n\n\n### front-matter\n\n\u4f7f\u7528`front-matter`\u8bb0\u5f55\u6587\u7ae0\u4fe1\u606f\n\n```yaml\ntitle: {title} # \u6587\u7ae0\u6807\u9898\ndate:  {date}  # \u521b\u5efa\u65e5\u671f\nauthor:        # \u6587\u7ae0\u4f5c\u8005\n               # (\u4e0d\u586b\u9ed8\u8ba4\u4e3a\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u4f5c\u8005)\n               \navatar:        # \u6587\u7ae0\u4f5c\u8005\u5934\u50cf\n               # (\u4e0d\u586b\u9ed8\u8ba4\u4e3a\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5934\u50cf)\n               \ntags:          # \u6587\u7ae0\u6807\u7b7e\n# - ***\n\ncategories:    # \u6587\u7ae0\u6240\u5c5e\u5206\u7c7b\n# - [***,***]\n\nthumbnail:     # \u6587\u7ae0\u7f29\u7565\u56fe\ntop: 0         # \u9996\u9875\u7f6e\u9876\u4f18\u5148\u7ea7\n               # 0\u4e3a\u5173\u95ed\u7f6e\u9876\n               # >0,\u8d8a\u5927\u4f18\u5148\u7ea7\u8d8a\u9ad8\n               \ncomment: 1     # \u5f00\u542f/\u5173\u95ed\u8bc4\u8bba\nhtml:          # \u5728\u6587\u7ae0\u524d\u52a0\u5165html\u4ee3\u7801\n\n\u4f60\u7684\u6587\u7ae0\n```\n\n\u6ce8\u610f,\u5206\u7c7b\u4f7f\u7528\u65b9\u6cd5:\n\n```yaml\ncategories:\n- [Diary, PlayStation]\n- [Diary, Games]\n- [Life]\n```\n\n\u6b64\u65f6\u8fd9\u7bc7\u6587\u7ae0\u540c\u65f6\u5305\u62ec\u4e09\u4e2a\u5206\u7c7b\uff1a `PlayStation` \u548c `Games` \u5206\u522b\u90fd\u662f\u7236\u5206\u7c7b `Diary` \u7684\u5b50\u5206\u7c7b,\u540c\u65f6 `Life` \u662f\u4e00\u4e2a\u6ca1\u6709\u5b50\u5206\u7c7b\u7684\u5206\u7c7b\u3002\n\n### \u5185\u5bb9\n\n\u4f7f\u7528`markdown`+`latex`\n\n\u884c\u5185\u516c\u5f0f: `$...$`,$E=mc^2$\n\n\u884c\u5916\u516c\u5f0f: `$$...$$`\n$$\nE=mc^2\n$$\n\n### \u6587\u7ae0\u9875\u9762\n\n\u751f\u6210\u7684\u6587\u4ef6\u5728`/posts/xxx`\n\n\u652f\u6301\u6807\u7b7e\u548c\u5206\u7c7b\n\n\u5982\u9700\u5728\u6587\u7ae0\u4e2d\u5f15\u7528\u56fe\u7247\u6216\u6587\u4ef6,\u8bf7\u5728`source/posts/`\u6587\u4ef6\u5939\u4e2d\u65b0\u5efa\u4e00\u4e2a\u4ee5\u8be5\u7bc7\u6587\u7ae0\u6807\u9898\u547d\u540d\u7684\u6587\u4ef6\u5939,\u653e\u5165\u6587\u4ef6\u5373\u53ef\u76f4\u63a5\u5f15\u7528,\u5982`![233.png]`\n\n### \u5176\u4ed6\u9875\u9762\n\n\u751f\u6210\u7684\u6587\u4ef6\u5728`/xxx`\n\n\u652f\u6301\u6807\u7b7e,\u4e0d\u652f\u6301\u5206\u7c7b,\u4e0d\u4f1a\u5728\u9996\u9875\u663e\u793a\n\n\u8bf7\u4e0d\u8981\u65b0\u5efa\u53eb\u505a`links`\u7684\u9875\u9762,\u4f1a\u88ab\u53cb\u94fe\u9875\u9762\u8986\u76d6\n\n## \u8d44\u6e90\u6587\u4ef6\u5939\n\n\u5728`source`\u6587\u4ef6\u5939\u4e2d,\u9664\u4e86`_posts`\u548c`_pages`\u4e24\u4e2a\u6587\u4ef6\u5939,\u5176\u4ed6\u6587\u4ef6\u5939\u4f1a\u88ab\u590d\u5236\u5230\u751f\u6210\u7684\u6587\u4ef6\u5939\u7684\u6839\u76ee\u5f55\n\n\u6bd4\u5982\u65b0\u5efa`source/img/`,\u5c31\u4f1a\u88ab\u535a\u5ba2\u6839\u76ee\u5f55,\u53ef\u4ee5\u901a\u8fc7`/img/`\u8bbf\u95ee\n\n## \u90e8\u7f72\n\n\u9996\u5148\u6e32\u67d3\u535a\u5ba2,`python blog.py`\u751f\u6210\u7684\u535a\u5ba2\u6587\u4ef6\u5728`web`\u6587\u4ef6\u5939\u4e2d\n\n`python blog.py s/server`\u53ef\u4ee5\u9884\u89c8\u751f\u6210\u7684\u6587\u4ef6\n\n\u60a8\u5c06\u5b83\u53ef\u4ee5\u4e0a\u4f20\u5230\u60a8\u559c\u6b22\u7684\u5730\u65b9\n\n\u63a8\u8350\u90e8\u7f72\u5230: \n\n1. `github pages`\n\n2. `coding pages`\n\n3. `netlify`\n\n4. \u817e\u8baf\u4e91`cos`\n\n5. `gitlab pages`\n\n6. \u7528`rsync`\u6216\u5176\u4ed6\u5de5\u5177\u63a8\u9001\u5230\u60a8\u7684\u670d\u52a1\u5668\n\n\n\u76ee\u524d\u652f\u6301`git`\u7684\u65b9\u5f0f\u90e8\u7f72,\u5982\u90e8\u7f72\u5230`github pages`(\u63a8\u8350)\n\n\u8bf7\u5148\u586b\u597d`config.yml`\u4e2d\u7684`repo`\n\n\u8fd0\u884c`python blog.py d`\u4ee5\u90e8\u7f72\u535a\u5ba2\n\n\n\u5176\u4ed6\u65b9\u5f0f\u8bf7\u81ea\u884c\u4e0a\u4f20`web`\u6587\u4ef6\u5939\n\n## \u81ea\u5b9a\u4e49\n\n### \u81ea\u5b9a\u4e49\u9876\u90e8\u5e94\u7528\u680f\n\n\u8bf7\u4fee\u6539`layout/appbar.html`\n\n### \u81ea\u5b9a\u4e49\u4fa7\u8fb9\u680f\n\n\u8bf7\u7f16\u8f91`source/drawer.yml`\n\n\u5982\u679c\u4f60\u4e0d\u6ee1\u610f\u81ea\u5e26\u7684\u6a21\u677f,\u8bf7\u5220\u9664`source/drawer.yml`,\n\n\u65b0\u5efa`source/drawer.html`,\u81ea\u884c\u7f16\u8f91\n\n### \u81ea\u5b9a\u4e49\u53cb\u60c5\u94fe\u63a5\n\n\u4fee\u6539`source/_pages/links.yml`\n\n\u4f7f\u7528`yaml`\u8bed\u6cd5\n\n\u4ee5\u6211\u7684\u53cb\u94fe\u4e3a\u4f8b\u5b50: \n\n```yaml\ncomment: 1 # \u662f\u5426\u5f00\u542f\u8bc4\u8bba\ninfo: # \u6dfb\u52a0\u53cb\u94fe\u90e8\u5206\u4e0b\u65b9\u7684html\u4ee3\u7801\nFriends: # \u6b64\u680f\u76ee\u6807\u9898\n  - name: zcmimi                 # \u540d\u79f0\n    url: https://blog.zcmimi.top # \u6307\u5411\u5730\u5740\n    avatar: /img/avatar.webp     # \u5934\u50cf\n    content: \u4e00\u53ea\u53ef\u7231\u7684\u83dc\u9e21        # \u63cf\u8ff0\n    background-color: \"#ffe9f0\"  # \u5361\u7247\u80cc\u666f\u989c\u8272\n  # \u4e0b\u9762\u4ee5\u6b64\u7c7b\u63a8\n\nWebsites: # \u6b64\u680f\u76ee\u6807\u9898\n  - name: Luogu\n    url: https://www.luogu.com.cn\n    avatar: /assets/icon/luogu.png\n    content: \u8ba1\u7b97\u673a\u79d1\u5b66\u6559\u80b2\u65b0\u751f\u6001\n    background-color: \"#89aaff\"\n# \u4ee5\u6b64\u7c7b\u63a8\n```\n\n### \u6dfb\u52a0\u81ea\u5b9a\u4e49\u4ee3\u7801\n\n1. \u81ea\u5b9a\u4e49`css`\n   \n   \u4fee\u6539`assets/custom.css`,\u5b83\u4f1a\u5728\u6e90\u4ee3\u7801`head`\u90e8\u5206\u88ab\u5f15\u5165\n\n2. \u81ea\u5b9a\u4e49`html`\n   \n   \u4fee\u6539`layout/custom.html`,\u8fd9\u90e8\u5206\u4ee3\u7801\u4f1a\u6dfb\u52a0\u5230\u6e90\u4ee3\u7801\u672b\u5c3e(`</html>`\u7684\u524d\u9762)\n\n", "link": "/readme/", "tags": [], "categories": []}, {"title": "Tools", "content": "\n<ul class=\"mdui-list\">\n    <li class=\"mdui-list-item\">\n        <img class=\"mdui-list-item-icon\" src=\"https://csacademy.com/static/favicon.png\">\n        <a href=\"https://csacademy.com/app/graph_editor/\" target=\"_blank\" class=\"mdui-list-item-content\">\u6839\u636e\u6570\u636e\u751f\u6210\u56fe\u6216\u6811</a>\n    </li>\n    <li class=\"mdui-list-item\">\n        <svg class=\"mdui-list-item-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" class=\"icon\"><path d=\"M 16.8363,2.73375C 16.45,2.73375 16.0688,2.88125 15.7712,3.17375L 13.6525,5.2925L 18.955,10.5962L 21.0737,8.47625C 21.665,7.89 21.665,6.94375 21.0737,6.3575L 17.895,3.17375C 17.6025,2.88125 17.2163,2.73375 16.8363,2.73375 Z M 12.9437,6.00125L 4.84375,14.1062L 7.4025,14.39L 7.57875,16.675L 9.85875,16.85L 10.1462,19.4088L 18.2475,11.3038M 4.2475,15.0437L 2.515,21.7337L 9.19875,19.9412L 8.955,17.7838L 6.645,17.6075L 6.465,15.2925\"></path></svg>\n        <a href=\"https://stackedit.io\" target=\"_blank\" class=\"mdui-list-item-content\">\u5728\u7ebfmarkdown(\u652f\u6301latex)</a>\n    </li>\n    <li class=\"mdui-list-item\">\n        <i class=\"mdui-list-item-icon mdui-icon material-icons mdui-text-color-black\">edit</i>\n        <a href=\"http://latex.codecogs.com/eqneditor/editor.php\" target=\"_blank\" class=\"mdui-list-item-content\">\u5728\u7ebfLaTeX\u7f16\u8f91\u5668</a>\n    </li>\n    <li class=\"mdui-list-item\">\n        <img class=\"mdui-list-item-icon\" src=\"https://www.geogebra.org/apps/icons/graphing.ico\">\n        <a href=\"https://www.geogebra.org/graphing\" target=\"_blank\" class=\"mdui-list-item-content\">\u5728\u7ebf\u6570\u5b66\u7ed8\u56fe</a>\n    </li>\n    <li class=\"mdui-list-item\">\n        <i class=\"mdui-list-item-icon mdui-icon material-icons mdui-text-color-black\">content_paste</i>\n        <a href=\"https://paste.ubuntu.com\" target=\"_blank\" class=\"mdui-list-item-content\">\u8d34\u4ee3\u7801</a>\n    </li>\n    <li class=\"mdui-list-item\">\n        <i class=\"mdui-list-item-icon mdui-icon material-icons\" style=\"color: #ff4081\">queue_music</i>\n        <a href=\"https://music.zcmimi.top\" class=\"mdui-list-item-content\">\u6b4c\u5355\u4e0b\u8f7d\u5668</a>\n    </li>\n    <li class=\"mdui-list-item\">\n        <i class=\"mdui-list-item-icon mdui-icon material-icons\" style=\"color: #0041ff\">book</i>\n        <a href=\"https://mdui.org\" target=\"_blank\" class=\"mdui-list-item-content\">MDUI\u6587\u6863</a>\n    </li>\n    <li class=\"mdui-list-item\">\n        <i class=\"mdui-list-item-icon mdui-icon material-icons\" style=\"color: #0041ff\">layers</i>\n        <a href=\"/math-tools\" target=\"_blank\" class=\"mdui-list-item-content\">\u6570\u8bba\u5de5\u5177</a>\n    </li>\n    <li class=\"mdui-list-item\">\n        <i class=\"mdui-list-item-icon mdui-icon material-icons\" style=\"color: #66ccff\">functions</i>\n        <a href=\"https://webdemo.myscript.com/\" target=\"_blank\" class=\"mdui-list-item-content\">\u5728\u7ebf\u8bc6\u522b\u624b\u5199\u516c\u5f0f</a>\n    </li>\n    <li class=\"mdui-list-item\">\n        <i class=\"mdui-list-item-icon mdui-icon material-icons\" style=\"color: #66ccff\">location_searching</i>\n        <a href=\"http://oeis.org/\" target=\"_blank\" class=\"mdui-list-item-content\">\u6570\u5217\u627e\u89c4\u5f8b</a>\n    </li>\n</ul>", "link": "/tools/", "tags": [], "categories": []}]